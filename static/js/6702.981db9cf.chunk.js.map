{"version":3,"file":"static/js/6702.981db9cf.chunk.js","mappings":"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","sources":["../../../node_modules/viem/_esm/errors/ccip.js","../../../node_modules/viem/_esm/utils/ccip.js","../../../node_modules/viem/_esm/utils/address/isAddressEqual.js"],"sourcesContent":["import{stringify}from\"../utils/stringify.js\";import{BaseError}from\"./base.js\";import{getUrl}from\"./utils.js\";export class OffchainLookupError extends BaseError{constructor({callbackSelector:callbackSelector,cause:cause,data:data,extraData:extraData,sender:sender,urls:urls}){super(cause.shortMessage||\"An error occurred while fetching for an offchain result.\",{cause:cause,metaMessages:[...cause.metaMessages||[],cause.metaMessages?.length?\"\":[],\"Offchain Gateway Call:\",urls&&[\"  Gateway URL(s):\",...urls.map((url=>`    ${getUrl(url)}`))],`  Sender: ${sender}`,`  Data: ${data}`,`  Callback selector: ${callbackSelector}`,`  Extra data: ${extraData}`].flat()}),Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"OffchainLookupError\"})}}export class OffchainLookupResponseMalformedError extends BaseError{constructor({result:result,url:url}){super(\"Offchain gateway response is malformed. Response data must be a hex value.\",{metaMessages:[`Gateway URL: ${getUrl(url)}`,`Response: ${stringify(result)}`]}),Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"OffchainLookupResponseMalformedError\"})}}export class OffchainLookupSenderMismatchError extends BaseError{constructor({sender:sender,to:to}){super(\"Reverted sender address does not match target contract address (`to`).\",{metaMessages:[`Contract address: ${to}`,`OffchainLookup sender address: ${sender}`]}),Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"OffchainLookupSenderMismatchError\"})}}","import{call}from\"../actions/public/call.js\";import{}from\"../errors/base.js\";import{OffchainLookupError,OffchainLookupResponseMalformedError,OffchainLookupSenderMismatchError}from\"../errors/ccip.js\";import{HttpRequestError}from\"../errors/request.js\";import{decodeErrorResult}from\"./abi/decodeErrorResult.js\";import{encodeAbiParameters}from\"./abi/encodeAbiParameters.js\";import{isAddressEqual}from\"./address/isAddressEqual.js\";import{concat}from\"./data/concat.js\";import{isHex}from\"./data/isHex.js\";import{stringify}from\"./stringify.js\";export const offchainLookupSignature=\"0x556f1830\";export const offchainLookupAbiItem={name:\"OffchainLookup\",type:\"error\",inputs:[{name:\"sender\",type:\"address\"},{name:\"urls\",type:\"string[]\"},{name:\"callData\",type:\"bytes\"},{name:\"callbackFunction\",type:\"bytes4\"},{name:\"extraData\",type:\"bytes\"}]};export async function offchainLookup(client,{blockNumber:blockNumber,blockTag:blockTag,data:data,to:to}){const{args:args}=decodeErrorResult({data:data,abi:[offchainLookupAbiItem]}),[sender,urls,callData,callbackSelector,extraData]=args,{ccipRead:ccipRead}=client,ccipRequest_=ccipRead&&\"function\"==typeof ccipRead?.request?ccipRead.request:ccipRequest;try{if(!isAddressEqual(to,sender))throw new OffchainLookupSenderMismatchError({sender:sender,to:to});const result=await ccipRequest_({data:callData,sender:sender,urls:urls}),{data:data_}=await call(client,{blockNumber:blockNumber,blockTag:blockTag,data:concat([callbackSelector,encodeAbiParameters([{type:\"bytes\"},{type:\"bytes\"}],[result,extraData])]),to:to});return data_}catch(err){throw new OffchainLookupError({callbackSelector:callbackSelector,cause:err,data:data,extraData:extraData,sender:sender,urls:urls})}}export async function ccipRequest({data:data,sender:sender,urls:urls}){let error=new Error(\"An unknown error occurred.\");for(let i=0;i<urls.length;i++){const url=urls[i],method=url.includes(\"{data}\")?\"GET\":\"POST\",body=\"POST\"===method?{data:data,sender:sender}:void 0;try{const response=await fetch(url.replace(\"{sender}\",sender).replace(\"{data}\",data),{body:JSON.stringify(body),method:method});let result;if(result=response.headers.get(\"Content-Type\")?.startsWith(\"application/json\")?(await response.json()).data:await response.text(),!response.ok){error=new HttpRequestError({body:body,details:result?.error?stringify(result.error):response.statusText,headers:response.headers,status:response.status,url:url});continue}if(!isHex(result)){error=new OffchainLookupResponseMalformedError({result:result,url:url});continue}return result}catch(err){error=new HttpRequestError({body:body,details:err.message,url:url})}}throw error}","import{InvalidAddressError}from\"../../errors/address.js\";import{isAddress}from\"./isAddress.js\";export function isAddressEqual(a,b){if(!isAddress(a,{strict:!1}))throw new InvalidAddressError({address:a});if(!isAddress(b,{strict:!1}))throw new InvalidAddressError({address:b});return a.toLowerCase()===b.toLowerCase()}"],"names":["OffchainLookupError","constructor","callbackSelector","cause","data","extraData","sender","urls","super","shortMessage","metaMessages","length","map","url","flat","Object","defineProperty","this","enumerable","configurable","writable","value","OffchainLookupResponseMalformedError","result","stringify","OffchainLookupSenderMismatchError","to","offchainLookupSignature","offchainLookupAbiItem","name","type","inputs","async","offchainLookup","client","blockNumber","blockTag","args","decodeErrorResult","abi","callData","ccipRead","ccipRequest_","request","ccipRequest","a","b","isAddress","strict","address","toLowerCase","isAddressEqual","data_","call","concat","encodeAbiParameters","err","error","Error","i","method","includes","body","response","fetch","replace","JSON","headers","get","startsWith","json","text","ok","details","statusText","status","isHex","message"],"sourceRoot":""}