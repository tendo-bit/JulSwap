{"version":3,"file":"static/js/9212.53af0632.chunk.js","mappings":"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","sources":["components/Badge/RangeBadge.tsx","components/HoverInlineText/index.tsx","components/PositionListItem/index.tsx","hooks/useIsTickAtLimit.ts","hooks/usePools.ts","hooks/useV3Positions.ts"],"sourcesContent":["import { Trans } from 'i18n'\nimport { AlertTriangle, Slash } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\n\nimport { MouseoverTooltip } from '../../components/Tooltip'\n\nconst BadgeWrapper = styled.div`\n  font-size: 14px;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst BadgeText = styled.div`\n  font-weight: 535;\n  font-size: 12px;\n  line-height: 14px;\n  margin-right: 8px;\n`\n\nconst ActiveDot = styled.span`\n  background-color: ${({ theme }) => theme.success};\n  border-radius: 50%;\n  height: 8px;\n  width: 8px;\n`\n\nconst LabelText = styled.div<{ color: string }>`\n  align-items: center;\n  color: ${({ color }) => color};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n`\n\nexport default function RangeBadge({ removed, inRange }: { removed?: boolean; inRange?: boolean }) {\n  const theme = useTheme()\n  return (\n    <BadgeWrapper>\n      {removed ? (\n        <MouseoverTooltip text={<Trans>Your position has 0 liquidity, and is not earning fees.</Trans>}>\n          <LabelText color={theme.neutral2}>\n            <BadgeText>\n              <Trans>Closed</Trans>\n            </BadgeText>\n            <Slash width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : inRange ? (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is within your selected range. Your position is currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.success}>\n            <BadgeText>\n              <Trans>In range</Trans>\n            </BadgeText>\n            <ActiveDot />\n          </LabelText>\n        </MouseoverTooltip>\n      ) : (\n        <MouseoverTooltip\n          text={\n            <Trans>\n              The price of this pool is outside of your selected range. Your position is not currently earning fees.\n            </Trans>\n          }\n        >\n          <LabelText color={theme.deprecated_accentWarning}>\n            <BadgeText>\n              <Trans>Out of range</Trans>\n            </BadgeText>\n            <AlertTriangle width={12} height={12} />\n          </LabelText>\n        </MouseoverTooltip>\n      )}\n    </BadgeWrapper>\n  )\n}\n","import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst TextWrapper = styled.span<{\n  margin: boolean\n  link?: boolean\n  fontSize?: string\n  adjustSize?: boolean\n  textColor?: string\n}>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  textColor,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  textColor?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          textColor={textColor}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper\n      margin={margin}\n      adjustSize={adjustSize}\n      link={link}\n      fontSize={fontSize}\n      textColor={textColor}\n      {...rest}\n    >\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Percent, Price, Token } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport HoverInlineText from 'components/HoverInlineText'\nimport Loader from 'components/Icons/LoadingSpinner'\nimport { RowBetween } from 'components/Row'\nimport { useToken } from 'hooks/Tokens'\nimport useIsTickAtLimit from 'hooks/useIsTickAtLimit'\nimport { usePool } from 'hooks/usePools'\nimport { Trans } from 'i18n'\nimport { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled from 'styled-components'\nimport { MEDIA_WIDTHS } from 'theme'\nimport { HideSmall, SmallOnly, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\nimport { DAI, USDC_MAINNET, USDT, WBTC, WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\n\nconst LinkRow = styled(Link)`\n  align-items: center;\n  display: flex;\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: ${({ theme }) => theme.neutral1};\n  padding: 16px;\n  text-decoration: none;\n  font-weight: 535;\n\n  & > div:not(:first-child) {\n    text-align: center;\n  }\n  :hover {\n    background-color: ${({ theme }) => theme.deprecated_hoverDefault};\n  }\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.deprecated_upToSmall}px) {\n    /* flex-direction: row; */\n  }\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    flex-direction: column;\n    row-gap: 8px;\n  `};\n`\n\nconst DataLineItem = styled.div`\n  font-size: 14px;\n`\n\nconst RangeLineItem = styled(DataLineItem)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 4px;\n  width: 100%;\n`\n\nconst DoubleArrow = styled.span`\n  font-size: 12px;\n  margin: 0 2px;\n  color: ${({ theme }) => theme.neutral1};\n`\n\nconst RangeText = styled(ThemedText.BodySmall)`\n  font-size: 14px !important;\n  word-break: break-word;\n  padding: 0.25rem 0.25rem;\n  border-radius: 8px;\n`\n\nconst FeeTierText = styled(ThemedText.BodyPrimary)`\n  margin-left: 8px !important;\n  line-height: 12px;\n  color: ${({ theme }) => theme.neutral3};\n`\n\nconst ExtentsText = styled(ThemedText.BodySmall)`\n  color: ${({ theme }) => theme.neutral2};\n  display: inline-block;\n  line-height: 16px;\n  margin-right: 4px !important;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    display: none;\n  `};\n`\n\nconst PrimaryPositionIdData = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  > * {\n    margin-right: 8px;\n  }\n`\n\ninterface PositionListItemProps {\n  token0: string\n  token1: string\n  tokenId: BigNumber\n  fee: number\n  liquidity: BigNumber\n  tickLower: number\n  tickUpper: number\n}\n\nexport function getPriceOrderingFromPositionForUI(position?: Position): {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  quote?: Token\n  base?: Token\n} {\n  if (!position) {\n    return {}\n  }\n\n  const token0 = position.amount0.currency\n  const token1 = position.amount1.currency\n\n  // if token0 is a dollar-stable asset, set it as the quote token\n  const stables = [DAI, USDC_MAINNET, USDT]\n  if (stables.some((stable) => stable.equals(token0))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if token1 is an ETH-/BTC-stable asset, set it as the base token\n  const bases = [...Object.values(WRAPPED_NATIVE_CURRENCY), WBTC]\n  if (bases.some((base) => base && base.equals(token1))) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    }\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  }\n}\n\nexport default function PositionListItem({\n  token0: token0Address,\n  token1: token1Address,\n  tokenId,\n  fee: feeAmount,\n  liquidity,\n  tickLower,\n  tickUpper,\n}: PositionListItemProps) {\n  const { formatDelta, formatTickPrice } = useFormatter()\n\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  const currency0 = token0 ? unwrappedToken(token0) : undefined\n  const currency1 = token1 ? unwrappedToken(token1) : undefined\n\n  // construct Position from details returned\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, feeAmount)\n\n  const position = useMemo(() => {\n    if (pool) {\n      return new Position({ pool, liquidity: liquidity.toString(), tickLower, tickUpper })\n    }\n    return undefined\n  }, [liquidity, pool, tickLower, tickUpper])\n\n  const tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper)\n\n  // prices\n  const { priceLower, priceUpper, quote, base } = getPriceOrderingFromPositionForUI(position)\n\n  const currencyQuote = quote && unwrappedToken(quote)\n  const currencyBase = base && unwrappedToken(base)\n\n  // check if price is within range\n  const outOfRange: boolean = pool ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper : false\n\n  const positionSummaryLink = '/pools/' + tokenId\n\n  const removed = liquidity?.eq(0)\n\n  return (\n    <LinkRow to={positionSummaryLink}>\n      <RowBetween>\n        <PrimaryPositionIdData>\n          <DoubleCurrencyLogo currencies={[currencyBase, currencyQuote]} size={18} />\n          <ThemedText.SubHeader>\n            &nbsp;{currencyQuote?.symbol}&nbsp;/&nbsp;{currencyBase?.symbol}\n          </ThemedText.SubHeader>\n\n          <FeeTierText>{formatDelta(parseFloat(new Percent(feeAmount, 1_000_000).toSignificant()))}</FeeTierText>\n        </PrimaryPositionIdData>\n        <RangeBadge removed={removed} inRange={!outOfRange} />\n      </RowBetween>\n\n      {priceLower && priceUpper ? (\n        <RangeLineItem>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Min: </Trans>\n            </ExtentsText>\n            <span>\n              {formatTickPrice({\n                price: priceLower,\n                atLimit: tickAtLimit,\n                direction: Bound.LOWER,\n              })}{' '}\n            </span>\n            <Trans>\n              <HoverInlineText text={currencyQuote?.symbol} /> per <HoverInlineText text={currencyBase?.symbol ?? ''} />\n            </Trans>\n          </RangeText>{' '}\n          <HideSmall>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </HideSmall>\n          <SmallOnly>\n            <DoubleArrow>↔</DoubleArrow>{' '}\n          </SmallOnly>\n          <RangeText>\n            <ExtentsText>\n              <Trans>Max:</Trans>\n            </ExtentsText>\n            <span>\n              {formatTickPrice({\n                price: priceUpper,\n                atLimit: tickAtLimit,\n                direction: Bound.UPPER,\n              })}{' '}\n            </span>\n            <Trans>\n              <HoverInlineText text={currencyQuote?.symbol} /> per{' '}\n              <HoverInlineText maxCharacters={10} text={currencyBase?.symbol} />\n            </Trans>\n          </RangeText>\n        </RangeLineItem>\n      ) : (\n        <Loader />\n      )}\n    </LinkRow>\n  )\n}\n","import { FeeAmount, TICK_SPACINGS, TickMath, nearestUsableTick } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nexport default function useIsTickAtLimit(\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined\n) {\n  return useMemo(\n    () => ({\n      [Bound.LOWER]:\n        feeAmount && tickLower\n          ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n      [Bound.UPPER]:\n        feeAmount && tickUpper\n          ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n    }),\n    [feeAmount, tickLower, tickUpper]\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, ChainId, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { FeeAmount, Pool, computePoolAddress } from '@uniswap/v3-sdk'\nimport { useContractMultichain } from 'components/AccountDrawer/MiniPortfolio/Pools/hooks'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { IUniswapV3PoolStateInterface } from 'uniswap/src/abis/types/v3/IUniswapV3PoolState'\nimport { UniswapV3Pool } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { useChainId } from 'wagmi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const chainId = useChainId()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n\nexport function usePoolMultichain(\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  fee: number | undefined,\n  chainId: ChainId\n): [PoolState, Pool | null] {\n  const poolData = useRef<[PoolState, Pool | null]>([PoolState.LOADING, null])\n  const poolAddress =\n    tokenA && tokenB && fee\n      ? PoolCache.getPoolAddress(V3_CORE_FACTORY_ADDRESSES[chainId], tokenA, tokenB, fee)\n      : undefined\n\n  const contractMap = useMemo(() => (poolAddress ? { [chainId]: poolAddress } : {}), [chainId, poolAddress])\n  const contract = useContractMultichain<UniswapV3Pool>(contractMap, IUniswapV3PoolStateJSON.abi)[chainId]\n\n  useEffect(() => {\n    async function getPool() {\n      try {\n        if (!tokenA || !tokenB || !fee || !poolAddress || !contract) {\n          poolData.current = [PoolState.INVALID, null]\n          return\n        }\n\n        const slot0 = await contract.slot0()\n        const liquidity = await contract.liquidity()\n        poolData.current = [PoolState.NOT_EXISTS, null]\n\n        const pool = new Pool(tokenA, tokenB, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick)\n        poolData.current = [PoolState.EXISTS, pool]\n      } catch (e) {\n        poolData.current = [PoolState.INVALID, null]\n      }\n    }\n    getPool()\n  }, [contract, fee, poolAddress, tokenA, tokenB])\n  return poolData.current\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { CallStateResult, useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\nimport { PositionDetails } from 'types/position'\n\nimport { useV3NFTPositionManagerContract } from './useContract'\n\ninterface UseV3PositionsResults {\n  loading: boolean\n  positions?: PositionDetails[]\n}\n\nfunction useV3PositionsFromTokenIds(tokenIds: BigNumber[] | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n  const inputs = useMemo(() => (tokenIds ? tokenIds.map((tokenId) => [BigNumber.from(tokenId)]) : []), [tokenIds])\n  const results = useSingleContractMultipleData(positionManager, 'positions', inputs)\n\n  const loading = useMemo(() => results.some(({ loading }) => loading), [results])\n  const error = useMemo(() => results.some(({ error }) => error), [results])\n\n  const positions = useMemo(() => {\n    if (!loading && !error && tokenIds) {\n      return results.map((call, i) => {\n        const tokenId = tokenIds[i]\n        const result = call.result as CallStateResult\n        return {\n          tokenId,\n          fee: result.fee,\n          feeGrowthInside0LastX128: result.feeGrowthInside0LastX128,\n          feeGrowthInside1LastX128: result.feeGrowthInside1LastX128,\n          liquidity: result.liquidity,\n          nonce: result.nonce,\n          operator: result.operator,\n          tickLower: result.tickLower,\n          tickUpper: result.tickUpper,\n          token0: result.token0,\n          token1: result.token1,\n          tokensOwed0: result.tokensOwed0,\n          tokensOwed1: result.tokensOwed1,\n        }\n      })\n    }\n    return undefined\n  }, [loading, error, results, tokenIds])\n\n  return {\n    loading,\n    positions: positions?.map((position, i) => ({ ...position, tokenId: inputs[i][0] })),\n  }\n}\n\ninterface UseV3PositionResults {\n  loading: boolean\n  position?: PositionDetails\n}\n\nexport function useV3PositionFromTokenId(tokenId: BigNumber | undefined): UseV3PositionResults {\n  const position = useV3PositionsFromTokenIds(tokenId ? [tokenId] : undefined)\n  return {\n    loading: position.loading,\n    position: position.positions?.[0],\n  }\n}\n\nexport function useV3Positions(account: string | null | undefined): UseV3PositionsResults {\n  const positionManager = useV3NFTPositionManagerContract()\n\n  const { loading: balanceLoading, result: balanceResult } = useSingleCallResult(positionManager, 'balanceOf', [\n    account ?? undefined,\n  ])\n\n  // we don't expect any account balance to ever exceed the bounds of max safe int\n  const accountBalance: number | undefined = balanceResult?.[0]?.toNumber()\n\n  const tokenIdsArgs = useMemo(() => {\n    if (accountBalance && account) {\n      const tokenRequests = []\n      for (let i = 0; i < accountBalance; i++) {\n        tokenRequests.push([account, i])\n      }\n      return tokenRequests\n    }\n    return []\n  }, [account, accountBalance])\n\n  const tokenIdResults = useSingleContractMultipleData(positionManager, 'tokenOfOwnerByIndex', tokenIdsArgs)\n  const someTokenIdsLoading = useMemo(() => tokenIdResults.some(({ loading }) => loading), [tokenIdResults])\n\n  const tokenIds = useMemo(() => {\n    if (account) {\n      return tokenIdResults\n        .map(({ result }) => result)\n        .filter((result): result is CallStateResult => !!result)\n        .map((result) => BigNumber.from(result[0]))\n    }\n    return []\n  }, [account, tokenIdResults])\n\n  const { positions, loading: positionsLoading } = useV3PositionsFromTokenIds(tokenIds)\n\n  return {\n    loading: someTokenIdsLoading || balanceLoading || positionsLoading,\n    positions,\n  }\n}\n"],"names":["BadgeWrapper","styled","div","BadgeText","ActiveDot","span","theme","success","LabelText","color","RangeBadge","removed","inRange","useTheme","MouseoverTooltip","text","Trans","neutral2","Slash","width","height","deprecated_accentWarning","AlertTriangle","TextWrapper","margin","fontSize","adjustSize","maxCharacters","textColor","link","rest","showHover","setShowHover","useState","length","Tooltip","show","onMouseEnter","onMouseLeave","slice","LinkRow","Link","neutral1","deprecated_hoverDefault","MEDIA_WIDTHS","deprecated_upToSmall","deprecated_mediaWidth","DataLineItem","RangeLineItem","DoubleArrow","RangeText","ThemedText","BodySmall","FeeTierText","BodyPrimary","neutral3","ExtentsText","PrimaryPositionIdData","getPriceOrderingFromPositionForUI","position","token0","amount0","currency","token1","amount1","DAI","USDC_MAINNET","USDT","some","stable","equals","priceLower","token0PriceUpper","invert","priceUpper","token0PriceLower","quote","base","Object","values","WRAPPED_NATIVE_CURRENCY","WBTC","lessThan","PositionListItem","token0Address","token1Address","tokenId","fee","feeAmount","liquidity","tickLower","tickUpper","currencyQuote","currencyBase","formatDelta","formatTickPrice","useFormatter","useToken","currency0","unwrappedToken","undefined","currency1","pool","usePool","useMemo","Position","toString","tickAtLimit","useIsTickAtLimit","outOfRange","tickCurrent","positionSummaryLink","eq","to","RowBetween","DoubleCurrencyLogo","currencies","size","SubHeader","symbol","parseFloat","Percent","toSignificant","price","atLimit","direction","Bound","LOWER","HoverInlineText","HideSmall","SmallOnly","UPPER","Loader","nearestUsableTick","TickMath","MIN_TICK","TICK_SPACINGS","MAX_TICK","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","tokenA","tokenB","this","addresses","MAX_ENTRIES","address","addressA","addressB","key","found","find","computePoolAddress","unshift","getPool","sqrtPriceX96","tick","pools","JSBI","sqrtRatioX96","Pool","usePools","poolKeys","chainId","useChainId","poolTokens","map","currencyA","currencyB","wrapped","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","value","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","PoolState","INVALID","result","slot0","loading","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","EXISTS","error","console","usePoolMultichain","poolData","useRef","poolAddress","contractMap","contract","useContractMultichain","useEffect","current","e","useV3PositionsFromTokenIds","tokenIds","positions","positionManager","useV3NFTPositionManagerContract","inputs","BigNumber","from","results","useSingleContractMultipleData","call","i","feeGrowthInside0LastX128","feeGrowthInside1LastX128","nonce","operator","tokensOwed0","tokensOwed1","useV3PositionFromTokenId","useV3Positions","account","balanceResult","balanceLoading","useSingleCallResult","accountBalance","toNumber","tokenIdsArgs","tokenRequests","push","tokenIdResults","someTokenIdsLoading","filter","positionsLoading"],"sourceRoot":""}