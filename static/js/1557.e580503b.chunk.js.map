{"version":3,"file":"static/js/1557.e580503b.chunk.js","mappings":"kLAAA,SAASA,IAAW,OAAOA,EAASC,OAAOC,QAAQ,SAASC,GAAQ,IAAI,IAAIC,EAAE,EAAEA,EAAEC,UAAUC,OAAOF,IAAI,CAAC,IAAIG,EAAOF,UAAUD,GAAG,IAAI,IAAII,KAAOD,EAAON,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,EAAEH,EAASY,MAAMC,KAAKR,UAAU,CAAC,SAASS,EAAyBP,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAyU,SAAuCI,EAAOQ,GAAU,GAAG,MAAMR,EAAO,MAAM,CAAC,EAAE,IAAIC,EAAIJ,EAAED,EAAO,CAAC,EAAEa,EAAWf,OAAOgB,KAAKV,GAAQ,IAAIH,EAAE,EAAEA,EAAEY,EAAWV,OAAOF,IAAII,EAAIQ,EAAWZ,GAAGW,EAASG,QAAQV,IAAM,IAAIL,EAAOK,GAAKD,EAAOC,IAAM,OAAOL,CAAM,CAAzjBgB,CAA8BZ,EAAOQ,GAAU,GAAGd,OAAOmB,sBAAsB,CAAC,IAAIC,EAAiBpB,OAAOmB,sBAAsBb,GAAQ,IAAIH,EAAE,EAAEA,EAAEiB,EAAiBf,OAAOF,IAAII,EAAIa,EAAiBjB,GAAGW,EAASG,QAAQV,IAAM,GAAGP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAOC,KAAOL,EAAOK,GAAKD,EAAOC,GAAK,CAAC,OAAOL,CAAM,CAAgU,IAAIoB,GAAK,IAAAC,aAAW,SAAUC,EAAKC,GAAK,IAAIC,EAAWF,EAAKG,MAAMA,OAAM,IAASD,EAAW,eAAeA,EAAWE,EAAUJ,EAAKK,KAAKA,OAAK,IAASD,EAAU,GAAGA,EAAUE,EAAKjB,EAAyBW,EAAK,CAAC,QAAQ,SAAS,OAAO,gBAAoB,MAAMzB,EAAS,CAAC0B,IAAIA,EAAIM,MAAM,6BAA6BC,MAAMH,EAAKI,OAAOJ,EAAKK,QAAQ,YAAYC,KAAK,OAAOC,OAAOT,EAAMU,YAAY,IAAIC,cAAc,QAAQC,eAAe,SAAST,GAAM,gBAAoB,OAAO,CAACU,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAAO,gBAAoB,OAAO,CAACH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAAQ,IAAGrB,EAAKsB,UAAU,CAACjB,MAAM,WAAiBE,KAAK,cAAoB,CAAC,WAAiB,cAAoBP,EAAKuB,YAAY,OAAO,S,uICM5qD,MAAMC,EAAW,IAAIC,EAAAA,EAAS,CAAEC,IAAKC,EAAAA,GAAmBC,EAAAA,QAAQC,WAI1DC,EAAiB,IAAIC,EAAAA,GAAW,CAACC,EAAWC,KAEhD,MAAMC,EAAUC,EAAAA,GAAMC,WAAWC,YAAYH,QAS7C,OAPAF,EAAUM,YAAW,KAAO,CAC1BZ,KACEa,EAAAA,EAAAA,IAAmBL,IAAYP,EAAAA,GAAmBO,GAC9CP,EAAAA,GAAmBO,GACnBP,EAAAA,GAAmBC,EAAAA,QAAQC,aAG5BI,EAAQD,EAAU,IAGdQ,EAAe,IAAIC,EAAAA,EAAa,CAC3CC,MAAO,IAAIC,EAAAA,EACXC,MAAMC,EAAAA,EAAAA,GAAOf,EAAgBN,KAGlBsB,EAA2EpE,OAAOqE,YAC7FrE,OAAOsE,QAAQrB,EAAAA,IAAoBsB,KAAI,EAAEf,EAASgB,KAAS,CACzDhB,EACA,IAAIO,EAAAA,EAAa,CACfC,MAAO,IAAIC,EAAAA,EACXjB,IAAKwB,O,sIC3BX,MAAMC,EAAqB,EAGZ,SAASC,EACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAuC,IACtCJ,GAIDK,EAAkC,GACtC,IAAK,IAAI/E,EAAI4E,GAASC,EAAY,GAAK,GAAIA,EAAY7E,EAAI2E,EAAezE,OAASF,GAAK,EAAG6E,EAAY7E,IAAMA,IAAK,CAChH,MAAMgF,EAAOC,OAAON,EAAe3E,GAAGgF,MAChCE,GAAWC,EAAAA,EAAAA,aAAYX,EAAQC,EAAQO,GACvCI,EAAsC,CAC1CC,gBAAiBP,EAAsBO,gBACvCL,OACAM,aAAcC,IAAAA,OAAYZ,EAAe3E,GAAGsF,cAC5CE,OAAQN,EAASO,QAAQnB,GACzBY,YAOEL,EACFO,EAAqBC,gBAAkBE,IAAAA,IACrCT,EAAsBO,gBACtBE,IAAAA,OAAYZ,EAAe3E,GAAGsF,gBAEtBT,GAAaU,IAAAA,SAAcT,EAAsBQ,aAAcC,IAAAA,OAAY,MAErFH,EAAqBC,gBAAkBE,IAAAA,SACrCT,EAAsBO,gBACtBP,EAAsBQ,eAI1BP,EAAeW,KAAKN,GACpBN,EAAwBM,CAC1B,CAMA,OAJKP,IACHE,EAAiBA,EAAeY,WAG3BZ,CACT,C,0BChDA,MAAMT,EAAqB,EAWrBsB,EAAgB,CAACC,EAAiCC,IACtDD,GAAeC,EAAYC,KAAKC,MAAMH,EAAcI,EAAAA,cAAcH,IAAcG,EAAAA,cAAcH,QAAaI,EA6B7G,MAAMC,EAAiC,IAEvC,SAASC,EACPC,EACAC,EACAR,EACAzC,G,IAiBIkD,EAGsBA,EAd1B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACtCC,EAAkBC,IAAuBF,EAAAA,EAAAA,UAAgB,KAC1D,KAAEH,EAAI,MAAEM,EAAOC,QAASC,GAzChC,SACEV,EACAC,EACAR,EACAkB,EAAO,EACP3D,G,IAMQgD,EACAC,EAQoBW,EAb5B,MAAMtD,EAAeM,EAAAA,EAAoBZ,GACnC4D,EACJZ,GAAaC,GAAaR,EACtBoB,EAAAA,KAAKC,WACHd,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QACXd,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWc,QACXtB,OACAI,EACA7C,EAAUgE,EAAAA,0BAA0BhE,QAAW6C,QAEjDA,EAEN,OAAOoB,EAAAA,EAAAA,IAAmB,CACxBC,UAAW,CAAEN,YAAaA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAaO,cAAeR,QACtDA,MAAOC,EACPQ,aAAcC,IAAG,OACjBC,OAAQhE,GAEZ,CAgB8CiE,CAAqBvB,EAAWC,EAAWR,EAAWU,EAAYnD,GAW9G,OATAwE,EAAAA,EAAAA,YAAU,K,IACJtB,GAAAA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAMuB,MAAM5H,UACd0G,GAAqBmB,GAAa,IAAIA,KAAaxB,EAAKuB,SACpDvB,EAAKuB,MAAM5H,SAAWiG,GACxBM,GAAeD,GAAeA,EAAaL,IAE/C,GACC,CAACI,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAMuB,QAEH,CACLf,UAAWA,IAAaR,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAMuB,MAAM5H,UAAWiG,EAC/CU,QACAiB,MAAOnB,EAEX,CAEO,SAASqB,EACd3B,EACAC,EACAR,EACAzC,G,IAW+BgD,EAAoBC,EACjC2B,EACGA,EAEDA,EALpB,MAAMC,GAAiBC,EAAAA,EAAAA,KAAe9E,SAAWN,EAAAA,QAAQC,QACnDiF,GAAOG,EAAAA,EAAAA,IAAkB/B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QAASd,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWc,QAAStB,EAAWzC,GAAW6E,GACvFG,EAAmB,QAAPJ,EAAAA,EAAK,UAALA,IAAAA,OAAAA,EAAAA,EAASI,UACrBC,EAAsB,QAAPL,EAAAA,EAAK,UAALA,IAAAA,OAAAA,EAAAA,EAASM,aAExBC,EAAqB,QAAPP,EAAAA,EAAK,UAALA,IAAAA,OAAAA,EAAAA,EAASpC,YAEvB4C,GAAaC,EAAAA,EAAAA,UAAQ,IAAM9C,EAAc4C,EAAa1C,IAAY,CAAC0C,EAAa1C,KAEhF,UAAEiB,EAAS,MAAEF,EAAK,MAAEiB,GAAU1B,EAAcC,EAAWC,EAAWR,EAAWzC,GAAW6E,GAE9F,OAAOQ,EAAAA,EAAAA,UAAQ,K,IAkBErC,EACAC,EAoBgB2B,EAtC/B,IACG5B,IACAC,QACcJ,IAAfuC,GACAR,EAAK,KAAOU,EAAAA,GAAUC,SACrBd,GACgB,IAAjBA,EAAM5H,QACN6G,EAEA,MAAO,CACLA,UAAWA,GAAakB,EAAK,KAAOU,EAAAA,GAAUE,QAC9ChC,QACA4B,aACAlC,UAAML,GAIV,MAAM1B,EAAS6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QACpB3C,EAAS6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWc,QAKpBxC,EAAQkD,EAAMgB,WAAU,EAAG9D,UAAWA,EAAOyD,IAAc,EAEjE,GAAI7D,EAAQ,EAGV,OADAmE,QAAQlC,MAAM,4BACP,CACLE,YACAF,QACA4B,aACAlC,UAAML,GAIV,MAAMhB,GAAWC,EAAAA,EAAAA,aAAYX,EAAQC,EAAQgE,GACvC/D,EAAqC,CACzCW,gBAAiBE,IAAAA,QAAmB,QAAP0C,EAAAA,EAAK,UAALA,IAAAA,OAAAA,EAAAA,EAASI,YAAa,GACnDrD,KAAMyD,EACNnD,aAAcL,OAAO6C,EAAMlD,GAAOI,QAAUyD,EAAalD,IAAAA,OAAYuC,EAAMlD,GAAOU,cAAgBC,IAAAA,OAAY,GAC9GC,OAAQN,EAASO,QAAQnB,GACzBY,YAGI8D,EAAkBzE,EAAwBC,EAAQC,EAAQC,EAAqBoD,EAAOlD,GAAO,GAI7FqE,EAFgB1E,EAAwBC,EAAQC,EAAQC,EAAqBoD,EAAOlD,GAAO,GAE5DZ,OAAOU,GAAqBV,OAAOgF,GAExE,MAAO,CACLjC,YACAF,QACA2B,cACAC,aACAJ,YACAC,eACA/B,KAAM0C,EACP,GACA,CAAC5C,EAAWC,EAAWmC,EAAYR,EAAMH,EAAOf,EAAWF,EAAO2B,EAAaH,EAAWC,GAC/F,C,wSCjKA,MAAMY,EAAuB,IAAIC,EAAAA,GAAUC,EAAAA,IAI3C,YAEE,mBAA6B,IAG7B,aAA+B,GAC/B,iBAA+D,GAE/D,qBAAOC,CAAeC,EAAwBC,EAAeC,EAAeC,GACtEhJ,KAAKiJ,UAAUxJ,OAASO,KAAKkJ,cAC/BlJ,KAAKiJ,UAAYjJ,KAAKiJ,UAAUE,MAAM,EAAGnJ,KAAKkJ,YAAc,IAG9D,MAAQE,QAASC,GAAaP,GACtBM,QAASE,GAAaP,EACxBpJ,EAAM,GAAGkJ,KAAkBQ,KAAYC,KAAYN,EAAIO,aACvDC,EAAQxJ,KAAKiJ,UAAUQ,MAAML,GAAYA,EAAQzJ,MAAQA,IAC/D,GAAI6J,EAAO,OAAOA,EAAMJ,QAExB,MAAMA,EAAU,CACdzJ,MACAyJ,SAASM,EAAAA,EAAAA,oBAAmB,CAC1Bb,iBACAC,SACAC,SACAC,SAIJ,OADAhJ,KAAKiJ,UAAUU,QAAQP,GAChBA,EAAQA,OACjB,CAEA,cAAOQ,CACLd,EACAC,EACAC,EACAnB,EACAD,EACArD,GAEIvE,KAAK6J,MAAMpK,OAASO,KAAKkJ,cAC3BlJ,KAAK6J,MAAQ7J,KAAK6J,MAAMV,MAAM,EAAGnJ,KAAKkJ,YAAc,IAGtD,MAAMM,EAAQxJ,KAAK6J,MAAMJ,MACtBjC,GACCA,EAAKzD,SAAW+E,GAChBtB,EAAKxD,SAAW+E,GAChBvB,EAAKwB,MAAQA,GACblE,IAAAA,GAAQ0C,EAAKM,aAAcD,IAC3B/C,IAAAA,GAAQ0C,EAAKI,UAAWA,IACxBJ,EAAKpC,cAAgBb,IAEzB,GAAIiF,EAAO,OAAOA,EAElB,MAAMhC,EAAO,IAAIf,EAAAA,KAAKqC,EAAQC,EAAQC,EAAKnB,EAAcD,EAAWrD,GAEpE,OADAvE,KAAK6J,MAAMF,QAAQnC,GACZA,CACT,G,IAGK,EAOA,SAASsC,EACdC,GAEA,MAAMnH,GAAUoH,EAAAA,EAAAA,KAEVC,GAAwDhC,EAAAA,EAAAA,UAAQ,IAC/DrF,EAEEmH,EAASpG,KAAI,EAAEiC,EAAWC,EAAWR,MAC1C,GAAIO,GAAaC,GAAaR,EAAW,CACvC,MAAMyD,EAASlD,EAAUe,QACnBoC,EAASlD,EAAUc,QACzB,GAAImC,EAAOoB,OAAOnB,GAAS,OAE3B,OAAOD,EAAOqB,YAAYpB,GAAU,CAACD,EAAQC,EAAQ1D,GAAa,CAAC0D,EAAQD,EAAQzD,EACrF,CACgB,IAVG,IAAI+E,MAAML,EAAStK,SAYvC,CAACmD,EAASmH,IAEPM,GAAwCpC,EAAAA,EAAAA,UAAQ,KACpD,MAAMqC,EAAuB1H,GAAWgE,EAAAA,0BAA0BhE,GAClE,OAAK0H,EAEEL,EAAWtG,KAAK4G,GAAUA,GAASC,EAAU5B,eAAe0B,KAAyBC,KAF1D,IAAIH,MAAMH,EAAWxK,OAE4C,GAClG,CAACmD,EAASqH,IAEPQ,GAASC,EAAAA,EAAAA,IAA8BL,EAAe5B,EAAsB,SAC5EkC,GAAcD,EAAAA,EAAAA,IAA8BL,EAAe5B,EAAsB,aAEvF,OAAOR,EAAAA,EAAAA,UAAQ,IACN8B,EAASpG,KAAI,CAACiH,EAAMC,KACzB,MAAMC,EAASb,EAAWY,GAC1B,IAAKC,EAAQ,MAAO,CAAC5C,EAAU6C,QAAS,MACxC,MAAOhH,EAAQC,EAAQgF,GAAO8B,EAE9B,IAAKL,EAAOI,GAAQ,MAAO,CAAC3C,EAAU6C,QAAS,MAC/C,MAAQC,OAAQC,EAAO5E,QAAS6E,EAAcC,MAAOC,GAAeX,EAAOI,GAE3E,IAAKF,EAAYE,GAAQ,MAAO,CAAC3C,EAAU6C,QAAS,MACpD,MAAQC,OAAQpD,EAAWvB,QAASgF,EAAkBF,MAAOG,GAAmBX,EAAYE,GAE5F,IAAKC,IAAWM,IAAeE,EAAgB,MAAO,CAACpD,EAAU6C,QAAS,MAC1E,GAAIG,GAAgBG,EAAkB,MAAO,CAACnD,EAAUE,QAAS,MACjE,IAAK6C,IAAUrD,EAAW,MAAO,CAACM,EAAUqD,WAAY,MACxD,IAAKN,EAAMpD,cAAgBoD,EAAMpD,aAAa2D,GAAG,GAAI,MAAO,CAACtD,EAAUqD,WAAY,MAEnF,IACE,MAAM/D,EAAOgD,EAAUZ,QAAQ7F,EAAQC,EAAQgF,EAAKiC,EAAMpD,aAAcD,EAAU,GAAIqD,EAAM1G,MAC5F,MAAO,CAAC2D,EAAUC,OAAQX,EAC5B,CAAE,MAAOpB,GAEP,OADAkC,QAAQlC,MAAM,mCAAoCA,GAC3C,CAAC8B,EAAUqD,WAAY,KAChC,MAED,CAACZ,EAAaZ,EAAUU,EAAQR,GACrC,CAEO,SAASwB,EACd7F,EACAC,EACAR,GAOA,OAAOyE,GALiF7B,EAAAA,EAAAA,UACtF,IAAM,CAAC,CAACrC,EAAWC,EAAWR,KAC9B,CAACO,EAAWC,EAAWR,KAGC,EAC5B,CAEO,SAASsC,EACdmB,EACAC,EACAC,EACApG,GAEA,MAAM8I,GAAWC,EAAAA,EAAAA,QAAiC,CAACzD,EAAUE,QAAS,OAChE5B,EACJsC,GAAUC,GAAUC,EAChBwB,EAAU5B,eAAehC,EAAAA,0BAA0BhE,GAAUkG,EAAQC,EAAQC,QAC7EvD,EAEAmG,GAAc3D,EAAAA,EAAAA,UAAQ,IAAOzB,EAAc,CAAE,CAAC5D,GAAU4D,GAAgB,CAAC,GAAI,CAAC5D,EAAS4D,IACvFqF,GAAWC,EAAAA,EAAAA,IAAqCF,EAAajD,EAAAA,IAA6B/F,GAsBhG,OApBAwE,EAAAA,EAAAA,YAAU,K,SACOwC,I,eAAf,YACE,IACE,IAAKd,IAAWC,IAAWC,IAAQxC,IAAgBqF,EAEjD,YADAH,EAASK,QAAU,CAAC7D,EAAU6C,QAAS,OAIzC,MAAME,QAAcY,EAASZ,QACvBrD,QAAkBiE,EAASjE,YACjC8D,EAASK,QAAU,CAAC7D,EAAUqD,WAAY,MAE1C,MAAM/D,EAAO,IAAIf,EAAAA,KAAKqC,EAAQC,EAAQC,EAAKiC,EAAMpD,aAAa0B,WAAY3B,EAAU2B,WAAY0B,EAAM1G,MACtGmH,EAASK,QAAU,CAAC7D,EAAUC,OAAQX,EACxC,CAAE,MAAOwE,GACPN,EAASK,QAAU,CAAC7D,EAAU6C,QAAS,KACzC,CACF,EAhBenB,E,8KAAAA,EAAAA,MAAAA,KAAAA,U,aAAAA,EAAAA,MAAAA,KAAAA,U,CAiBfA,EAAS,GACR,CAACiC,EAAU7C,EAAKxC,EAAasC,EAAQC,IACjC2C,EAASK,OAClB,E,SAlHY7D,GAAAA,EAAAA,EACVE,QAAAA,GAAAA,UADUF,EAAAA,EAEVqD,WAAAA,GAAAA,aAFUrD,EAAAA,EAGVC,OAAAA,GAAAA,SAHUD,EAAAA,EAIV6C,QAAAA,GAAAA,S,EAJU7C,IAAAA,EAAAA,CAAAA,G,+RChEN+D,EAAQC,EAAAA,QAAOC,IAAG,Y,6HAAA;;;;EAMlBC,EAAYF,EAAAA,QAAOG,IAAG,Y,iIAAA;;;;EAMtBC,GAASJ,EAAAA,EAAAA,SAAOE,GAAAA,WAAAA,C,8HAAU;;EAI1BG,GAAcL,EAAAA,EAAAA,SAAOE,GAAAA,WAAAA,C,mIAAU;;;;;kCAKH,EAAGI,WAAYA,EAAMC,WAAWC;;;;EAMnD,SAASC,IACtB,MAAMC,GAAaC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQF,EAAWG,EAAAA,GAAWC,YAAcD,EAAAA,GAAWE,KACvDC,EAAYN,EAAWG,EAAAA,GAAWI,eAAiBJ,EAAAA,GAAWK,cAEpE,OACE,SAACf,EAAAA,C,UACC,UAACgB,EAAAA,GAAKA,CAACC,KAAMC,EAAAA,GAAkBC,UAAWC,qBAAmB,E,WAC3D,UAACrB,EAAAA,C,WACC,UAACF,EAAAA,C,WACC,SAACY,EAAAA,C,SAAM,SACP,SAACI,EAAAA,CAAUrM,MAAM,W,UACf,SAAC6M,EAAAA,GAAKA,C,SAAC,0BAGX,SAAC3B,EAAAA,CAAM4B,IAAKjB,EAAakB,EAAYC,EAAYC,IAAI,eAEvD,SAACC,EAAAA,GAAkBA,CAACC,GAAIC,EAAAA,GAAMC,GAAG,I,UAC/B,SAACR,EAAAA,GAAKA,C,SAAC,qCAKjB,C,kOCxBO,MAAMS,EACXC,MAAoD,KACpDC,SAEAC,WAAAA,CAAYC,GACVzO,KAAKuO,SAAWE,EAChBzO,KAAKuO,SAASG,YAAcD,EAAMzG,UACpC,CAEA2G,IAAAA,CAAKrP,EAAiCsP,GACpCtP,EAAOuP,0BAA0BC,GAAU9O,KAAK+O,UAAUD,EAAOF,IACnE,CAEAI,MAAAA,CAAOlJ,EAA2CmJ,GAChDjP,KAAKsO,MAAQxI,EACb9F,KAAKuO,SAAW,IAAKvO,KAAKuO,YAAaU,EACzC,CAEAF,SAAAA,CAAUG,EAAiDC,GACzD,GACiB,OAAfnP,KAAKsO,OACsB,IAA3BtO,KAAKsO,MAAMc,KAAK3P,QACY,OAA5BO,KAAKsO,MAAMe,cACO,OAAlBrP,KAAKuO,SAEL,OAEF,MAAMe,EAAMJ,EAAeK,QACrBH,EAA2BpP,KAAKsO,MAAMc,KAAKzL,KAAK6L,IAC7C,CACLC,EAAGD,EAAIC,EACPC,EAAGP,EAAkBK,EAAIG,aAAa/H,YAAc,EACpDrD,KAAMiL,EAAIG,aAAapL,UAG3BqL,EAAAA,EAAAA,IACER,EACApP,KAAKsO,MAAMuB,WACXX,EAAeY,qBACf9P,KAAKsO,MAAMe,aAAaU,KACxB/P,KAAKsO,MAAMe,aAAajB,IAE1B,MAAM4B,EAAQb,EAAkB,IAAM,EACtCG,EAAIW,UAAYjQ,KAAKuO,SAAS2B,YAE9B,IAAK,IAAI3Q,EAAIS,KAAKsO,MAAMe,aAAaU,KAAMxQ,EAAIS,KAAKsO,MAAMe,aAAajB,GAAI7O,IAAK,CAC9E,MAAM4Q,EAAQf,EAAK7P,GACb6Q,EAASD,EAAMC,OACfC,EAAgBrQ,KAAKuO,SAASvG,aAAemI,EAAM5L,KACnD+L,EAAgBtQ,KAAKuO,SAASG,cAAgByB,EAAM5L,KAE1D,IAAK6L,EAAQ,OACb,MAAMhP,EAAQkE,KAAKiL,IACjBjL,KAAKkL,IAAItB,EAAeY,qBAAsBM,EAAOK,MAAQL,EAAOM,MACpE1Q,KAAKsO,MAAMuB,WAAaX,EAAeY,sBAInCa,EAAS,GAAMvP,EACfwP,EAAkBxP,EAAiB,EAATuP,EAC1BE,GAAWC,EAAAA,EAAAA,IAAad,EAAOG,EAAMT,EAAGR,EAAe6B,oBAE7D,GAAIT,EAAe,CACjB,MAAMU,EAAkB,GAAM1B,EAAI2B,OAAO5P,OACnC6P,EAAkB5B,EAAI2B,OAAO5P,OAAS2P,EAG5C1B,EAAIW,UAAYjQ,KAAKuO,SAAS4C,eAC9B7B,EAAI8B,YACJ9B,EAAI+B,UAAUjB,EAAOM,KAAOC,EAAQK,EAAiBJ,EAAiBM,EAAiB,GACvF5B,EAAI/N,OAEJ+N,EAAIgC,YAAc,CACpB,MAEEhC,EAAIgC,YAAc,GAsBpB,GAlBIjB,EACFf,EAAIW,UAAYjQ,KAAKuO,SAASgD,iBACQ9L,IAA7BzF,KAAKuO,SAASvG,WACvBsH,EAAIW,UAAYjQ,KAAKuO,SAASxN,OAAS,QAC9Bf,KAAKuO,SAASvG,WAAamI,EAAM5L,KAC1C+K,EAAIW,UAAYjQ,KAAKuO,SAASgD,YACrBvR,KAAKuO,SAASvG,WAAamI,EAAM5L,OAC1C+K,EAAIW,UAAYjQ,KAAKuO,SAAS2B,aAIhCZ,EAAI8B,YACJ9B,EAAI+B,UAAUjB,EAAOM,KAAOC,EAAQE,EAASW,SAAUZ,EAAiBC,EAASpR,OAAQ,GACzF6P,EAAI/N,OAGJ+N,EAAIgC,YAAc,EAEdjB,GAAiBrQ,KAAKuO,SAASkD,mBAAoB,CAErDnC,EAAIoC,yBAA2B,cAG/B,MAAMC,EAA4Bd,EAASpR,OAASO,KAAKuO,SAASkD,mBAC5DG,EAA8Bf,EAASW,UAAYX,EAASpR,OAASkS,GAE3ErC,EAAIW,UAAYjQ,KAAKuO,SAAS2B,YAC9BZ,EAAI8B,YACJ9B,EAAIuC,SAASzB,EAAOM,KAAMkB,EAA6BxQ,EAAOuQ,GAG9DrC,EAAIoC,yBAA2B,aACjC,CACF,CACF,EC/IK,MAAMI,EAGXC,UACAC,aACAC,aACAC,gBAEA1D,WAAAA,CAAYC,GACVzO,KAAKgS,aAAevD,EAAMyB,YAC1BlQ,KAAK+R,UAAY,IAAI1D,EAA2BI,GAChDzO,KAAKiS,aAAexD,EAAM8C,YAC1BvR,KAAKkS,gBAAkBzD,EAAM0C,cAC/B,CAEAgB,iBAAAA,CAAkBC,GAChB,MAAO,CAAC,EAAGA,EAAQxK,UACrB,CAEAyK,YAAAA,CAAavM,GACX,OAAQ,EAAgB8B,SAC1B,CAEA0K,QAAAA,GACE,OAAOtS,KAAK+R,SACd,CAEA/C,MAAAA,CAAOlJ,EAA2CmJ,GAChDjP,KAAK+R,UAAU/C,OAAOlJ,EAAMmJ,EAC9B,CAEAsD,cAAAA,GACE,MAAO,IACFC,EAAAA,GACHtC,YAAalQ,KAAKgS,aAClBT,YAAavR,KAAKiS,aAClBd,eAAgBnR,KAAKkS,gBAEzB,E,4TClCK,MAAMO,UAA+BC,EAAAA,EAChCC,OACF3K,WAERwG,WAAAA,CAAYoE,EAA0BC,GACpCC,MAAMF,EAAUC,GAChB7S,KAAK2S,OAAS3S,KAAK+S,IAAIC,gBAAgB,IAAIlB,EAAmBe,IAE9D7S,KAAK2S,OAAOM,QAAQjT,KAAK8F,MAEzB9F,KAAKkT,cAAcL,GACnB7S,KAAKmT,YACP,CAEAD,aAAAA,CAAcL,GACZC,MAAMI,cAAcL,EAAQ,CAC1BO,aAAc,CACZC,OAAQR,EAAOQ,QAEjBC,gBAAiB,CACfC,SAAS,EACTC,eAAe,EACfC,aAAc,CACZC,IAAK,IACLC,OAAQ,GAEVC,WAAW,GAEbC,UAAW,CACTN,SAAS,EACTO,aAAa,EACbC,cAAc,EACdP,eAAe,GAEjBQ,UAAW,CACTC,SAAU,CACRV,SAAS,EACTW,cAAc,GAEhBC,SAAU,CACRZ,SAAS,EACTW,cAAc,IAGlBE,KAAM,CACJC,UAAW,CACTd,SAAS,GAEXe,UAAW,CACTf,SAAS,MAIf,MAAM,KAAEzN,EAAI,WAAEkC,GAAe6K,EAE7B7S,KAAKgI,WAAaA,EAEdhI,KAAK8F,OAASA,IAChB9F,KAAK8F,KAAOA,EACZ9F,KAAK2S,OAAOM,QAAQnN,GACpB9F,KAAKmT,cAGPnT,KAAK2S,OAAO4B,aAAa,CACvBC,YAAa,CACXC,KAAM,UAERC,kBAAkB,EAClBC,kBAAkB,IAGpB3U,KAAK2S,OAAO4B,aAAa1B,EAC3B,CAES+B,aAAAA,CAAcC,G,IAEqDA,EAD1E/B,MAAM8B,cAAcC,GACpB,MAAMC,EAAqD,CAAEpG,aAAamG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWE,KAAKxQ,OAAQvE,KAAKgI,YACvGhI,KAAK2S,OAAO4B,aAAaO,EAC3B,CAEAE,eAAAA,GACE,OAAOhV,KAAK8F,KAAKuC,WAAWmH,GAAQA,EAAIjL,OAASvE,KAAKgI,YACxD,CAEAmL,UAAAA,GACE,MAAM1T,EAASO,KAAK8F,KAAKrG,OACnBuV,EAAkBhV,KAAK8F,KAAKuC,WAAWmH,GAAQA,EAAIjL,OAASvE,KAAKgI,aACjEiN,GAAgC,IAArBD,EAAyBA,EAAkBvV,EAAS,EAErEO,KAAK+S,IACFc,YACAqB,uBAAuB,CAAEnF,KAAMzK,KAAKkL,IAAIyE,EAAW,GAAI,GAAI7G,GAAI9I,KAAKiL,IAAI0E,EAAW,GAAIjV,KAAK8F,KAAKrG,SACtG,EAGF,MAAM0V,EAAcC,EAAAA,UAAUrF,KAAK,GAAGsF,IAAI,KAAKC,IAAI,GAEnD,SAASC,EAAUC,GACjB,OAAOC,EAAAA,eAAeC,cAAcF,EAAOL,EAAY5L,WACzD,C,SAGeoM,I,OAAAA,EAAf,aACE5R,EACAC,EACA4R,EACArR,EACAmH,GAMA,GAAKA,EAAS3D,aAAgB2D,EAAS7D,cAAiB6D,EAAS9D,UAIjE,IACE,MAAMiO,EAAW/Q,IAAAA,YAAiBP,EAAKM,aAAcC,IAAAA,OAAY,IAC7DP,EAAKM,aACLC,IAAAA,SAAcP,EAAKM,aAAcC,IAAAA,OAAY,OAE3CgR,EAAY,CAChB,CACEjL,MAAOtG,EAAKA,KACZwR,eAAgBF,EAChBhR,aAAcC,IAAAA,SAAcP,EAAKM,aAAcC,IAAAA,OAAY,QAE7D,CACE+F,MAAOtG,EAAKA,KAAOiB,EAAAA,cAAcoQ,GACjCG,eAAgBF,EAChBhR,aAAcN,EAAKM,eAIjBmR,EAAQ,IAAIvP,EAAAA,KAChB1C,EACAC,EACA4R,EACAlK,EAAS7D,aACTtD,EAAKK,gBACL8G,EAAS3D,YACT+N,GAGIG,EAAqBC,EAAAA,SAASC,mBAAmBL,EAAU,GAAGjL,OAC9DuL,SAAsBJ,EAAMK,gBAAgBd,EAAUxR,GAASkS,IAAqB,GACpFK,EAAgBC,WAAWhS,EAAKE,SAAS+R,SAASC,MAAML,GAAcM,WAGtEC,EAAkBT,EAAAA,SAASC,mBAAmBL,EAAU,GAAGjL,OAC3D+L,SAAsBZ,EAAMK,gBAAgBd,EAAUvR,GAAS2S,IAAkB,GAGvF,MAAO,CAAEL,gBAAeO,cAFFN,WAAWhS,EAAKE,SAASgS,MAAMG,GAAcF,WAGrE,CAAE,MACA,MAAO,CAAEJ,cAAe,EAAGO,cAAe,EAC5C,CACF,KAxDelB,MAAAA,KAAAA,U,UA2DAmB,EACb/S,EACAC,EACA4R,EACArR,G,OAJauS,EAAAA,MAAAA,KAAAA,U,UAAAA,I,OAAAA,EAAf,aACE/S,EACAC,EACA4R,EACArR,GAEA,IACE,MAAMwS,EAAcvR,EAAAA,cAAcoQ,GAC5BC,EAAW/Q,IAAAA,YAAiBP,EAAKM,aAAcC,IAAAA,OAAY,IAC7DP,EAAKM,aACLC,IAAAA,SAAcP,EAAKM,aAAcC,IAAAA,OAAY,OAE3C+C,EAAeqO,EAAAA,SAASC,mBAAmB5R,EAAKA,MAChDuR,EAAY,CAChB,CACEjL,MAAOtG,EAAKA,KACZwR,eAAgBF,EAChBhR,aAAcC,IAAAA,SAAcP,EAAKM,aAAcC,IAAAA,OAAY,QAE7D,CACE+F,MAAOtG,EAAKA,KAAOiB,EAAAA,cAAcoQ,GACjCG,eAAgBF,EAChBhR,aAAcN,EAAKM,eAKjB2C,EAAO,IAAIf,EAAAA,KAAK1C,EAAQC,EAAQQ,OAAOoR,GAAU/N,EAActD,EAAKK,gBAAiBL,EAAKA,KAAMuR,GAGhGkB,EAAcd,EAAAA,SAASC,mBAAmB5R,EAAKA,KAAOwS,GACtDE,EAAkBxB,EAAAA,eAAeC,cAAc3R,EAAQoR,EAAY5L,YACnE6M,SAAsB5O,EAAK6O,gBAAgBY,EAAiBD,IAAc,GAC1EV,EAAgBC,WAAWhS,EAAKE,SAAS+R,SAASC,MAAML,GAAcM,WAG5E,MAAO,CAAEJ,gBAAeO,cAFFN,WAAWH,EAAaM,WAGhD,CAAE,MACA,MAAO,CAAEJ,cAAe,EAAGO,cAAe,EAC5C,CACF,KAxCeC,MAAAA,KAAAA,U,CA0CR,SAASI,GAAoB,OAClCpO,EAAM,OACNC,EAAM,QACN6M,EAAO,WACPuB,EAAU,QACVvU,IAQA,MAAM,aAAEwU,EAAY,YAAEC,IAAgBC,EAAAA,EAAAA,MAChCC,GAAiBhQ,EAAAA,EAAAA,GAAuBuB,EAAQC,EAAQ6M,EAAShT,IAEhE0E,EAAUkQ,IAAevR,EAAAA,EAAAA,YA+EhC,OAzEAmB,EAAAA,EAAAA,YAAU,K,SACOqQ,I,OAAAA,EAAf,e,IAwCEC,EAvCA,MAAMlP,EAAiB+O,EAAezR,KACtC,IAAK0C,EAAgB,OAErB,IAAImP,EACAC,EAEJ,MAAMF,EAA8B,GACpC,IAAK,IAAI7M,EAAQ,EAAGA,EAAQrC,EAAe/I,OAAQoL,IAAS,CAC1D,MAAMgN,EAAIrP,EAAeqC,GAGnBiN,EAAYX,EAAqB,IAARtM,EAAiD,KAAjCrC,EAAe/I,OAASoL,GACjEkN,EAAWR,EAAevP,aAAe6P,EAAEtT,KAEjD,IAAIQ,EAAS8S,EAAEpT,SACXuT,EAASH,EAAEpT,SAAS+R,SAEpBuB,GAAYR,EAAevP,YAAcuP,EAAexP,cAC1D6P,EAAmB/M,EACnB8M,GAAyBJ,EAAexP,YAAc8P,EAAEtT,MAAQiB,EAAAA,cAAcoQ,GAE9E7Q,GAASL,EAAAA,EAAAA,aAAYoE,EAAQC,EAAQ8O,EAAEtT,MACvCyT,EAASjT,EAAOyR,UAGlB,MAAM,cAAEF,EAAa,cAAEO,SAAwBC,EAAsBhO,EAAQC,EAAQ6M,EAASiC,GAE9FH,EAAQzS,KAAK,CACXV,KAAMsT,EAAEtT,KACRqD,UAAW2O,WAAWsB,EAAEjT,gBAAgB2E,YACxCxE,OAAQsS,EAAY,CAAEY,MAAOlT,EAAQ0P,KAAMyD,EAAAA,GAAWC,oBACtDH,OAAQX,EAAY,CAAEY,MAAOD,EAAQvD,KAAMyD,EAAAA,GAAWC,oBACtDC,KAAMN,EACNxB,gBACAO,iBAEJ,CAGAa,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,EAAS/T,KAAI,CAAC0U,EAAO9Y,KACfA,EAAI,IACNmY,EAAQnY,EAAI,GAAG+W,cAAgB+B,EAAM/B,cACrCoB,EAAQnY,EAAI,GAAGsX,cAAgBwB,EAAMxB,cACvC,IAGF,MAAMyB,OAAuC7S,IAArBmS,EAAiCF,EAAQE,QAAoBnS,EAErF,QAAyBA,IAArBmS,GAAkCU,EAAiB,CACrD,MAAMC,Q,SA7KZxU,EACAC,EACA4R,EACArR,EACAmH,G,OALaiK,EAAAA,MAAAA,KAAAA,U,CA8KqBA,CAC1B7M,EACAC,EACA6M,EACApN,EAAeoP,GACfL,GAEFG,EAAQE,GAAoB,IAAKU,KAAoBC,EACvD,CAGKpB,GACHO,EAAQxS,UAIVsS,EAAY,CAAEE,QAASA,EAAQc,QAAQX,GAAMA,EAAEjQ,UAAY,IAAI0Q,kBAAiBX,yBAClF,IAnEeF,EAAAA,MAAAA,KAAAA,U,aAAAA,EAAAA,MAAAA,KAAAA,U,CAqEfA,EAAY,GACX,CAACF,EAAgBzO,EAAQC,EAAQqO,EAAcC,EAAaF,EAAYvB,IAEpE,CAAEtO,WAAUU,WAAYuP,EAAevP,WAAY3B,QAASkR,EAAejR,YAAcgB,EAClG,C,kNC3RA,MAAMmR,EAAsB,IACtBC,EAA6B,CAACC,EAAAA,GAAUC,OAAQD,EAAAA,GAAUE,MAAOF,EAAAA,GAAUG,WAG3EC,EAA8B7M,EAAAA,QAAOG,IAAG,Y,gLAAA;uCACP,EAAGG,WAAYA,EAAMC,WAAWuM;;;EAIjEC,EAA6B/M,EAAAA,QAAOG,IAAG,Y,+KAAA;;;;uCAIN,EAAGG,WAAYA,EAAMC,WAAWuM;;;EAKjEE,GAA4BhN,EAAAA,EAAAA,SAAOiN,EAAAA,GAAKA,WAAAA,C,gKAAC;YACnCV;EAGNW,GAAuB,EAC3BC,YACAC,wBAKA,SAACL,EAAAA,C,UACC,SAACM,EAAAA,EAAiBA,CAChBtK,QAASyJ,EACTc,iBAAkBH,EAClBI,eAAgBH,MA0BtB,SAASI,GACPhO,EACA5C,EACAC,EACAoO,EACAwC,EACAC,G,IAM6BlO,EAJ7B,MAAOmO,EAAYC,IAAiB7T,EAAAA,EAAAA,UAAqB8T,EAAAA,GAAWC,MAC7DX,EAAWY,IAAgBhU,EAAAA,EAAAA,UAAgC0S,EAAAA,GAAUC,QAEtEsB,EAAON,IAAoBO,EAAAA,IAAgBC,GAC3CtT,EAAY,CAAEsC,SAASsC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUtC,UAAW,GAAIuQ,QAAOU,UAAUC,EAAAA,EAAAA,IAAkBT,GAAaK,QAEhGK,ECjFD,SACLzT,EACA4E,EACA5C,EACAC,EACAoO,G,IA8BIrR,EAAcA,EAAmC4F,EA5BrD,MAAM,KAAE5F,EAAI,QAAEO,IAAYmU,EAAAA,EAAAA,KAAyB,CAAE1T,cAErD,OAAOmB,EAAAA,EAAAA,UAAQ,K,IACYnC,EAAgBA,EAIvC2U,EAJF,MAAM,aAAEA,IAAiB3U,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM4U,UAAU5U,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM6U,SAAU,CAAC,EACpDC,EAAiBzD,EAAarO,EAASC,EAEvCrF,GACJ+W,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EACIjC,QAAQP,GAAmD,OAAVA,IAClDtU,KAAKsU,I,IAEFvM,EAA6BkP,EAAwC3C,EAAqBA,EAD5F,MAAM1N,GACJmB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAOqF,YAAYwR,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgBxR,QAAQrC,eAAgBkR,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO4C,YAAc5C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO6C,YAEnG,MAAO,CACL1C,KAAMH,EAAM8C,UACZxQ,QACAyQ,KAAMzQ,EACN0Q,KAAM1Q,EACN2Q,IAAK3Q,EACL4Q,MAAO5Q,EACR,MACG,GAIJ6Q,EAAc/U,IAAYoU,EAAeY,EAAAA,GAAYtQ,QAAUsQ,EAAAA,GAAYC,MAEjF,MAAO,CAAEjC,UAAWV,EAAAA,GAAUE,MAAOnV,UAAS2C,UAAS+U,cAAa,GACnE,CAACtV,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM4U,OAAQ5U,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM6U,OAAQxD,EAAY9Q,EAASqF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAOqF,QAASN,EAAQC,GACzF,CD6CqBwS,CAAqBzU,EAAW4E,EAAU5C,EAAQC,EAAQoO,GACvEqE,EC5CD,SACL1U,G,IAYIhB,EAAcA,EAVlB,MAAM,KAAEA,EAAI,QAAEO,IAAYoV,EAAAA,EAAAA,KAA0B,CAAE3U,cAEtD,OAAOmB,EAAAA,EAAAA,UAAQ,K,IACgBnC,EAAgBA,EAE3C4V,EAFF,MAAM,iBAAEA,IAAqB5V,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM4U,UAAU5U,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM6U,SAAU,CAAC,EACxDjX,GACJgY,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkBlD,QAAQmD,GAA0C,OAARA,IAAchY,IAAIiY,EAAAA,MAAqB,GAE/FR,GAAcS,EAAAA,EAAAA,IAAiBnY,EAASiV,EAAAA,GAAUC,OAAQ9R,EAAUuT,UAE1E,MAAO,CAAEhB,UAAWV,EAAAA,GAAUC,OAAQlV,UAAS2C,UAAS+U,cAAa,GACpE,CAACtV,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM4U,OAAQ5U,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAM6U,OAAQtU,EAASS,EAAUuT,UACrD,CD8BsByB,CAAsBhV,GAE1C,OAAOmB,EAAAA,EAAAA,UAAQ,KACb,MAAM8T,EAAc,MAClB,OAAQ1C,GACN,KAAKV,EAAAA,GAAUE,MACb,OAAO0B,EACT,KAAK5B,EAAAA,GAAUC,OACb,OAAO4C,EACT,KAAK7C,EAAAA,GAAUG,UACb,MAAO,CACLO,UAAWV,EAAAA,GAAUG,UACrBpV,QAAS,GACT2C,SAAS,EACT+U,YAAaC,EAAAA,GAAYC,OAGhC,EAdmB,GAgBpB,MAAO,CACLzB,aACAC,gBACAG,eACA8B,cACD,GACA,CAAC1C,EAAWmC,EAAajB,EAAYV,GAC1C,CAEe,SAASmC,GAAavN,G,IAEjCA,EACAA,EAKA7I,EACAC,EAGA4I,EAMgFsN,EAjBlF,MAAOnW,EAAWC,GAAa,EACf,QAAd4I,EAAAA,EAAM/C,gBAAN+C,IAAAA,OAAAA,EAAAA,EAAgB1K,UAAUkY,EAAAA,EAAAA,IAAcxN,EAAM/C,SAAS3H,SACzC,QAAd0K,EAAAA,EAAM/C,gBAAN+C,IAAAA,OAAAA,EAAAA,EAAgBzK,UAAUiY,EAAAA,EAAAA,IAAcxN,EAAM/C,SAAS1H,UAGnD,aAAEiW,EAAY,WAAEJ,EAAU,cAAEC,EAAa,YAAEiC,GAAgBrC,GAC/DjL,EAAM/C,SACN9F,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWe,QACXd,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWc,QACX8H,EAAM0I,WACN1I,EAAMkL,OAASuC,EAAAA,IAAMC,UACP,QAAd1N,EAAAA,EAAM/C,gBAAN+C,IAAAA,OAAAA,EAAAA,EAAgBmL,kBAAmBO,EAAAA,IAAgBC,IAG/CgC,GAAoBC,EAAAA,EAAAA,IAAaC,EAAAA,GAGjCjW,EAAUoI,EAAMpI,SAAY0V,EAAY1C,YAAcV,EAAAA,GAAUG,YAAYiD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAa1V,SAEzFkW,EAAY,MAChB,IAAK3W,IAAcC,IAAc4I,EAAM/C,WAAa+C,EAAMkL,MACxD,OAAO,SAAC6C,EAAAA,EAAaA,CAAC/H,KAAMsH,EAAY1C,UAAWhY,OAAQoX,IAG7D,MAAMgE,EAAqB,IACtBhO,EACHmH,QAASpR,OAAOiK,EAAM/C,SAASkK,SAC/BvU,OAAQoX,EACRoB,aACA/Q,OAAQlD,EAAUe,QAClBoC,OAAQlD,EAAUc,QAClB/D,SAAS8Z,EAAAA,EAAAA,IAA6BjO,EAAMkL,QAAUrX,EAAAA,QAAQC,SAIhE,GAAIwZ,EAAY1C,YAAcV,EAAAA,GAAUG,UACtC,OAAO,SAAC6D,GAAAA,IAAmBF,IAE7B,GAAIV,EAAYX,cAAgBC,EAAAA,GAAYtQ,UAAYnF,IAAcC,EAAW,CAC/E,MAAM+W,EAAYvW,OAAUZ,GAAY,SAACmI,EAAAA,GAAKA,C,SAAC,4DAC/C,OAAO,SAAC4O,EAAAA,EAAaA,CAAC/H,KAAMsH,EAAY1C,UAAWhY,OAAQoX,EAAqBmE,UAAWA,GAC7F,CAEA,MAAMC,EAAQd,EAAYX,cAAgBC,EAAAA,GAAYyB,MAEtD,OAAQf,EAAY1C,WAClB,KAAKV,EAAAA,GAAUE,MACb,OAAO,SAACkE,GAAUA,IAAKN,EAAoB3W,KAAMiW,EAAYrY,QAASmZ,MAAOA,IAC/E,KAAKlE,EAAAA,GAAUC,OACb,OAAO,SAACoE,EAAAA,EAAWA,IAAKP,EAAoB3W,KAAMiW,EAAYrY,QAASmZ,MAAOA,IAEnF,EAhCiB,GAmCZI,GAAsBhV,EAAAA,EAAAA,UAAQ,IAC9B8T,EAAY1C,YAAcV,EAAAA,GAAUE,MAC/BqE,EAAAA,GAAmC1E,QAAQ2E,GAAWA,EAAO5S,QAAU6S,EAAAA,GAAkBC,OAE3FH,EAAAA,IACN,CAACnB,EAAY1C,YAEhB,OACE,UAAChN,MAAAA,CAAIiR,cAAY,sB,UACdf,GACD,UAACgB,EAAAA,GAAqBA,C,WACpB,SAACnE,GAAAA,CAAqBC,UAAW0C,EAAY1C,UAAWC,kBAAmBW,IAC1E8B,EAAY1C,YAAcV,EAAAA,GAAUG,YACnC,SAACC,EAAAA,C,UACC,SAACyE,EAAAA,EAAeA,CACdvO,QAASgO,EACTQ,gBAAiBC,EAAAA,GAAS7D,GAC1BJ,eAAiB0D,IACf,MAAM/E,GAAOuF,EAAAA,EAAAA,IAAyBR,G,IAEpCf,EADEhE,IAASyB,EACXuC,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IAEAtC,EAAc1B,EAChB,WAQhB,CAEA,MAAMwF,GAAwB1R,EAAAA,QAAOG,IAAG,Y,0KAAA;;;;EAMlCwR,IAAiB3R,EAAAA,EAAAA,SAAOe,EAAAA,GAAWI,gBAAc,Y,mKAAC;IACpDyQ,EAAAA;kCAC8B,EAAGtR,WAAYA,EAAMC,WAAWuM;;;;EAMlE,SAAS+D,IAAW,OAClBjU,EAAM,OACNC,EAAM,WACNoO,EAAU,KACVrR,EAAI,MACJ+W,IAQA,MAAM,qBAAEkB,EAAoB,YAAE1G,IAAgBC,EAAAA,EAAAA,OACvC0G,EAAcpD,GAAkBzD,EAAa,CAACpO,EAAQD,GAAU,CAACA,EAAQC,GAE1E8J,GAAS5K,EAAAA,EAAAA,UAAQ,KAAO,CAAEnC,OAAM+W,QAAOpI,KAAMwJ,EAAAA,GAAeC,QAAS,CAACpY,EAAM+W,IAE5EsB,GAAkBC,EAAAA,EAAAA,IAAmBJ,GAErCK,EAAYvY,EAAKA,EAAKrG,OAAS,GACrC,OACE,SAACyZ,EAAAA,CAAYoF,MAAOC,EAAAA,GAAiB1L,OAAQA,E,SACzC2L,I,IAuBUA,EAtBV,MAAMC,EAAeD,GAAiBH,EAChCK,EAAqBpZ,KAAKC,OAC7BkZ,EAAalU,OAASkU,EAAatD,OAAS,IAAMP,EAAe+D,UAE9DC,GACJ,UAAChB,GAAAA,C,WACC,SAACC,GAAAA,C,SACE,KAAKG,EAAaa,YAAYd,EAAqB,CAClDe,OAAQrJ,EAAAA,eAAeC,cAAckF,EAAgB8D,sBAEvD9D,EAAeiE,YAEjB,SAAChB,GAAAA,CAAe9c,MAAM,W,SACnBod,EAAkB,IAAM9G,EAAY,CAAEY,MAAOkG,IAAqB,IAAM,QAI/E,OACE,SAACY,EAAAA,EAAWA,CACVxU,MAAOqU,EACPI,kBAAkB,SAACC,EAAAA,GAAeA,CAACC,cAAepZ,EAAK,GAAIqZ,YAAaV,IACxEW,mBAAoBlH,EAAAA,GAAWmH,eAC/BjH,KAAMoG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAepG,M,GAMjC,CAEA,MAAMkH,IAAgBpT,EAAAA,EAAAA,SAAOe,EAAAA,GAAWsS,UAAQ,Y,kKAAC;IAC7CC,EAAAA;;EAGEC,IAAkBvT,EAAAA,EAAAA,SAAOe,EAAAA,GAAWyS,WAAS,Y,oKAAC;IAChDF,EAAAA;EAGJ,SAASG,IAAwB,KAC/B7Z,EAAI,iBACJ8Z,EAAgB,iBAChBC,EAAgB,YAChB9X,IAOA,MAAM,aAAEqP,IAAiBE,EAAAA,EAAAA,MACzB,IAAKvP,EAAa,OAAO,KAEzB,MAAM+X,EACJha,EAAKvB,MAAQwD,EACTqP,EAAa,CACX2I,MAAOja,EAAKwQ,cACZ7B,KAAMyD,EAAAA,GAAW8H,qBAEnB,EACAC,EACJna,EAAKvB,MAAQwD,EACTqP,EAAa,CACX2I,MAAOja,EAAK+Q,cACZpC,KAAMyD,EAAAA,GAAW8H,qBAEnB,EAEN,OACE,sB,WACE,SAAC/S,EAAAA,GAAWiT,UAAS,C,UAClBrI,EAAAA,EAAAA,GAAE,gCAAiC,CAAErC,MAAOoK,EAAkBO,KAAML,OAEvE,SAAC7S,EAAAA,GAAWiT,UAAS,C,UAClBrI,EAAAA,EAAAA,GAAE,gCAAiC,CAAErC,MAAOqK,EAAkBM,KAAMF,QAI7E,CAEA,SAAStD,IAAe,OACtB7T,EAAM,OACNC,EAAM,QACN6M,EAAO,WACPuB,EAAU,QACVvU,IAQA,MAAMgd,EAAmB9W,EAAO+V,QAAU/V,EAAOqX,MAAQtI,EAAAA,CAAC,UACpDgI,EAAmB9W,EAAO8V,QAAU9V,EAAOoX,MAAQtI,EAAAA,CAAC,WAEpD,SAAEvQ,EAAQ,WAAEU,EAAU,QAAE3B,GAAY6Q,EAAoB,CAC5DpO,SACAC,SACA6M,UACAuB,aACAvU,YAGI4J,GAAQ4T,EAAAA,EAAAA,YACRvN,GAAS5K,EAAAA,EAAAA,UAAQ,K,IAEbX,EAKcA,EANtB,MAAO,CACLxB,MAAMwB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUoQ,UAAW,GAC3BxH,YAAaiH,EAAa3K,EAAMxI,OAASwI,EAAMzI,OAC/CwN,YAAa4F,EAAa3K,EAAMzI,OAASyI,EAAMxI,OAC/CmN,eAAgB3E,EAAM6T,SACtBrY,aACAyJ,mBAAoBnK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUqQ,sBAC/B,GACA,CAAC3P,EAAYmP,EAAY3K,EAAOlF,IAEnC,OAAIjB,GAAgB,SAACia,EAAAA,GAAYA,CAAAA,IAG/B,SAACpH,EAAAA,CACCoF,MAAO7L,EACPI,OAAQA,EACR0N,YAEE3K,IAAY4K,EAAAA,UAAUC,OAClB,EAAG3a,W,IAKcwB,EAAAA,E,OAJf,SAACqY,GAAAA,CACC7Z,KAAMA,EACN8Z,iBAAkBA,EAClBC,iBAAkBA,EAClB9X,YAAaT,QAAAA,EAAAA,SAAAA,IAAAA,GAAyB,QAAzBA,EAAAA,EAAUgR,uBAAVhR,IAAAA,OAAAA,EAAAA,EAA2B/C,M,OAG5CkB,E,SAGJuO,I,IACkC1M,EAGaoZ,EACAA,EAJ/C,MAAMA,EAAe1M,IAAa1M,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUgR,iBACtCqI,GACJ,UAACtU,MAAAA,C,WACC,SAACiT,GAAAA,C,SAAe,KAAKM,OAAsBc,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAc3b,UAAU8a,OACnE,SAACP,GAAAA,C,SAAe,KAAKO,OAAsBa,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAc1I,UAAU4H,MAClEc,GAAgBA,EAAanc,OAASyD,IACrC,SAACyX,GAAAA,CAAgB1e,MAAM,WAAW6f,WAAW,M,UAC3C,SAAChT,EAAAA,GAAKA,C,SAAC,2BAKf,OAAO,SAACmR,EAAAA,EAAWA,CAACxU,MAAOoW,G,GAInC,C,yQExZO,MAAME,IAAe3U,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,oJAAwC;YAC5E,EAAGC,aAAeA,EAAU,GAAGA,MAAc;WAC9C,EAAGC,YAAcA,EAAS,GAAGA,MAAa;EAGxCC,IAAoB/U,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,yJAAC;;;;EC0BhDI,GAAkBhV,EAAAA,QAAOG,IAAG,Y,kKAAA;;;;;IAK9BmT,EAAAA;wBACoB,EAAGhT,WAAYA,EAAM2U,WAAW9G,SAAS+G;EAG3DC,IAAQnV,EAAAA,EAAAA,SAAOe,EAAAA,GAAWqU,YAAU,Y,wJAAC;gBAC3B,EAAG9U,WAAYA,EAAM+U;;;EAK/BC,IAAsBtV,EAAAA,EAAAA,SAAOuV,GAAAA,GAAYA,WAAAA,C,sKAAC;IAC5CC,EAAAA;UACM,EAAGlV,WAAYA,EAAMmV;EAGzBC,IAAa1V,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,6JAAC;;;;EAcjC,SAASe,IAAsB,QAAEjf,EAAO,YAAE4D,EAAW,OAAEzC,EAAM,OAAEC,EAAM,QAAEqC,I,IAgBZtC,EAAoBC,EAfpF,MAAM8d,GAAYC,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAC3DC,EAAgB,YAAYH,EAAU/a,gBACtCmb,EAAc,kBAAkBJ,EAAU/a,gBAEhD,OACE,UAACob,GAAAA,GAAsBA,CAACC,aAAW,iB,WACjC,UAACC,GAAAA,GAAiBA,CAACjU,GAAI6T,E,WACrB,SAACrU,EAAAA,GAAKA,C,SAAC,YAAe,KAAC,SAAC0U,GAAAA,EAAYA,CAACrhB,KAAM,SAE7C,UAACohB,GAAAA,GAAiBA,CAACjU,GAAI8T,E,WACrB,SAACtU,EAAAA,GAAKA,C,SAAC,UAAa,KAAC,SAAC0U,GAAAA,EAAYA,CAACrhB,KAAM,QAE1CoF,IAAYG,GACX,SAACqa,GAAYA,CAACG,OAAQ,OAEtB,SAACuB,GAAAA,GAAqBA,CAACnZ,QAAS5C,EAAagc,SAAU,GAAGze,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,YAAY7a,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,aAI9F,CAEA,MAAM4D,GAAyBvW,EAAAA,QAAOG,IAAG,Y,yKAAA;;;;;;EAQnCqW,IAAWxW,EAAAA,EAAAA,SAAOe,EAAAA,GAAWI,gBAAc,Y,2JAAC;;;kCAGhB,EAAGb,WAAYA,EAAMC,WAAWuM;;;;EAM5D2J,GAAmB,EACvB5e,SACAC,SACApB,UACAgT,UACAgE,kBACAgJ,qB,IAiBqB7e,EAIVA,EAKUC,EAIVA,EArBX,MAAM,cAAE6e,IAAkBvL,EAAAA,EAAAA,MACpBwL,EAAalN,GAAWiN,EAAc,IAAIE,EAAAA,QAAQnN,EAAqB,IAAZoN,GAAAA,KACjE,OACE,UAACP,GAAAA,C,WACC,SAACpW,MAAAA,C,UACC,UAACqW,GAAAA,C,WACC,SAACO,GAAAA,CACC7U,IAAI8U,EAAAA,EAAAA,IAAmB,CACrB9Z,QAASrF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QACjBuQ,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,M,SAGvDje,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,SACE,aAEb,SAACoE,GAAAA,CACC7U,IAAI8U,EAAAA,EAAAA,IAAmB,CACrB9Z,QAASpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,QACjBuQ,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,M,SAGvDhe,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,cAIdjF,IAAoBO,EAAAA,IAAgBgJ,KAAM,SAAC9B,GAAAA,C,SAAM,SAC/CyB,IAAc,SAACzB,GAAAA,C,SAAOyB,KACzB,SAACtB,GAAAA,CAAoBlE,cAAY,+BAA+B8F,QAASR,M,EAKzES,IAAgCnX,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,gLAAC;;;;;;;;kBAQ/B,EAAG9W,WAAYA,EAAM6T;;EAIjCkD,GAAuB,EAC3Bna,UACAxG,UACAkI,a,IAqCgEA,EA/BhE,MAAM0B,GAAQ4T,EAAAA,EAAAA,YACRoD,EAAW1Y,EAAO,KAAMmR,EAAAA,EAAAA,IAAcnR,EAAO,IAC7C2Y,EAA2B,IAAlB3Y,EAAOrL,OAChBikB,EAAaD,GAAU3Y,EAAO,GAAK,CAAC0Y,GAAUvH,EAAAA,EAAAA,IAAcnR,EAAO,KAAO,CAAC0Y,GAC3EG,EAAWva,IAAYwa,GAAAA,GACvBC,EACJjhB,GACAwG,IACA0a,EAAAA,GAAAA,GACElhB,EACAwG,EACAua,EAAWI,GAAAA,EAAiBC,OAASP,EAASM,GAAAA,EAAiBE,QAAUF,GAAAA,EAAiBG,OAG9F,OAAKthB,GAAYihB,GASf,SAACM,GAAAA,EAAkBA,CAACC,KAAMP,E,UACxB,UAACR,GAAAA,C,WACC,UAACC,GAAAA,GAAGA,CAACe,IAAI,K,UACNZ,GACC,SAACa,GAAAA,GAA0BA,CAAC1hB,QAASA,EAAS8gB,WAAYA,EAAYziB,KAAM,MAE5E,SAACsjB,GAAAA,EAAYA,CAACf,SAAUA,EAAUviB,KAAM,MAE1C,SAACgM,EAAAA,GAAWuX,YAAW,C,SAAEf,GAAS,SAAC7V,EAAAA,GAAKA,C,SAAC,SAAwB,QAAT9C,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,UACnE,SAAC5R,EAAAA,GAAWwX,cAAa,C,UAAEC,EAAAA,GAAAA,IAAetb,SAE5C,SAACub,GAAAA,EAAgBA,CAAC1jB,KAAK,OAAOO,OAAQgL,EAAMmV,iBAlB9C,SAAC0B,GAAAA,C,UACC,SAACxC,GAAYA,CAACG,OAAQ,O,EAuBxB4D,GAA0BC,EAAAA,GAAG;IAC/BC,GAAAA;;;IAGAhH,EAAAA;EAGEiH,GAA2B,EAC/BniB,UACA4D,cACAgc,WACAze,SACAC,a,IA8B2CD,EACAC,EAvB3C,MAAMwI,GAAQ4T,EAAAA,EAAAA,aAEP4E,EAAsBC,IAAwBC,EAAAA,EAAAA,aAAYC,IAAOA,IAAG,GACrEC,GAAezZ,EAAAA,EAAAA,QAAuB,MAG5C,OAFA0Z,EAAAA,GAAAA,GAAkBD,EAAcJ,EAAuBC,OAAuBxf,IAG5E,UAAC6d,GAAAA,GAAGA,CAACliB,MAAM,cAAckkB,QAAQ,WAAWjB,IAAI,K,WAC9C,SAAChY,MAAAA,CAAIkZ,MAAO,CAAE/T,SAAU,YAAc3Q,IAAKukB,E,UACzC,SAACI,GAAAA,GAAgBA,CACfC,OAAQT,EACRU,WAAYT,EACZU,UACE/iB,IAAYN,EAAAA,QAAQC,SAClB,SAACqjB,GAAAA,EAAaA,CAACxkB,MAAM,OAAOC,OAAO,OAAOE,KAAMiL,EAAMqZ,YAEtD,SAACC,GAAAA,EAAYA,CAAC1kB,MAAM,OAAOC,OAAO,OAAOE,KAAMiL,EAAMqZ,WAGzDE,mBACE,sB,WACE,SAACxC,GAAAA,CAAqBna,QAAS5C,EAAa5D,QAASA,EAASkI,OAAQ,CAAC/G,EAAQC,MAC/E,SAACuf,GAAAA,CAAqBna,QAASrF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QAASxG,QAASA,EAASkI,OAAQ,CAAC/G,MAC3E,SAACwf,GAAAA,CAAqBna,QAASpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,QAASxG,QAASA,EAASkI,OAAQ,CAAC9G,QAG/EgiB,YAAanO,EAAAA,CAAC,YACdoO,aAAW,EACXC,UAAWC,GAAAA,GACXC,cAAexB,QAGnB,SAACyB,GAAAA,EAAWA,CAAClG,KAAMqC,M,EAKnBS,IAAa/W,EAAAA,EAAAA,SAAOiC,GAAAA,IAAIA,WAAAA,C,6JAAC;WACpB,EAAG3B,WAAYA,EAAMqZ;;IAE5BnE,EAAAA;EAcG,SAAS4E,IAAkB,QAChC1jB,EAAO,YACP4D,EAAW,OACXzC,EAAM,OACNC,EAAM,QACN4R,EAAO,gBACPgE,EAAe,eACfgJ,EAAc,QACdvc,I,IAIoBtC,EAAoBC,EAFxC,MACMuiB,IADaC,EAAAA,GAAAA,MACmB,GAChChE,EAAW,GAAGze,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,YAAY7a,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,SAC1C6E,GAAazb,EAAAA,EAAAA,UACjB,IAAOlE,GAAUC,EAAS,EAACiY,EAAAA,EAAAA,IAAclY,IAASkY,EAAAA,EAAAA,IAAcjY,IAAW,IAC3E,CAACD,EAAQC,IAGX,OAAIqC,GAEA,SAAC6a,GAAAA,CAAgB5D,cAAY,8B,SAC1BiJ,GACC,UAACE,EAAAA,GAAMA,CAACpC,IAAI,KAAKkB,MAAO,CAAEnkB,MAAO,Q,WAC/B,SAACwgB,GAAAA,CAAAA,IACD,SAACf,GAAYA,CAACE,QAAS,GAAIC,OAAQ,UAGrC,UAACsC,GAAAA,GAAGA,CAACe,IAAI,K,WACP,SAACzC,GAAAA,CAAAA,IACD,SAACf,GAAYA,CAACE,QAAS,GAAIC,OAAQ,YAO3C,SAACE,GAAAA,C,SACEqF,GACC,UAACE,EAAAA,GAAMA,CAACpC,IAAI,KAAKkB,MAAO,CAAEnkB,MAAO,Q,WAC/B,UAACkiB,GAAAA,GAAGA,CAACe,IAAI,KAAKiB,QAAQ,gB,UACnB1iB,IACC,SAAC0hB,GAAAA,GAA0BA,CAAChH,cAAY,oBAAoB1a,QAASA,EAAS8gB,WAAYA,KAE5F,SAACqB,GAAAA,CACCniB,QAASA,EACT4D,YAAaA,EACbgc,SAAUA,EACVze,OAAQA,EACRC,OAAQA,QAGZ,SAAC2e,GAAAA,CACC5e,OAAQA,EACRC,OAAQA,EACRpB,QAASA,EACTgT,QAASA,EACTgE,gBAAiBA,EACjBgJ,eAAgBA,QAIpB,sB,WACE,UAACU,GAAAA,GAAGA,CAACe,IAAI,K,UACNzhB,IACC,SAAC0hB,GAAAA,GAA0BA,CAAChH,cAAY,oBAAoB1a,QAASA,EAAS8gB,WAAYA,KAE5F,SAACf,GAAAA,CACC5e,OAAQA,EACRC,OAAQA,EACRpB,QAASA,EACTgT,QAASA,EACTgE,gBAAiBA,EACjBgJ,eAAgBA,QAGpB,SAACmC,GAAAA,CACCniB,QAASA,EACT4D,YAAaA,EACbgc,SAAUA,EACVze,OAAQA,EACRC,OAAQA,QAMpB,C,+DC/VA,MAAM0iB,IAAYxa,EAAAA,EAAAA,SAAOe,EAAAA,GAAWuX,aAAW,Y,0JAAC;;;uBAGzBmC,GAAAA,GAAYC,yBAAyBD,GAAAA,GAAYE;;;IAGpE/I,EAAAA;EAGEgJ,IAAmB5a,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,iKAA4B;;;IAG3DxF,EAAAA;IACA,EAAGiJ,iBAAkBA,GAAerF,EAAAA;EAGlCsF,IAAa9a,EAAAA,EAAAA,SAAOe,EAAAA,GAAWuX,aAAW,Y,2JAAC;;;uBAG1BmC,GAAAA,GAAYC,yBAAyBD,GAAAA,GAAYE;aAC3D,EAAGra,WAAYA,EAAMmV;;EAI5BsF,IAAc/a,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,4JAAC;;;;sBAIT,EAAG9W,WAAYA,EAAM6T;;;;;;IAMvCqB,EAAAA;EAEEwF,IAAiBhb,EAAAA,EAAAA,SAAOib,GAAAA,GAAIA,WAAAA,C,+JAAC;;;WAGxB,EAAG3a,WAAYA,EAAMmV;;EAI1ByF,GAAkBlb,EAAAA,QAAOG,IAAG,Y,gKAAA;;;sBAGZ,EAAGG,WAAYA,EAAM6T;;IAEvCqB,EAAAA;EAGE2F,IAAanb,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,2JAAC;;;;EAavB,SAASgE,IAAgB,QAAEle,EAAO,QAAExG,EAAO,OAAEkI,EAAM,QAAEzE,I,IA0DxByE,EAAqBA,EAAwCA,EAW9CA,EAGpCA,EAAuBA,EAGvBA,EA1Eb,MAAM0B,GAAQ4T,EAAAA,EAAAA,YACRuD,EAAWva,IAAYwa,GAAAA,GACvBJ,EAAW1Y,EAAO,KAAMmR,EAAAA,EAAAA,IAAcnR,EAAO,KAC5Cyc,EAAUC,IAAaC,EAAAA,GAAAA,KACxBC,GAAOC,EAAAA,EAAAA,cAAY,KACvB,MAAMC,GAAqBC,EAAAA,GAAAA,IAAUze,GACrCwe,GAAsBJ,EAAUI,EAAmB,GAClD,CAACxe,EAASoe,IAEP/D,EAA2B,IAAlB3Y,EAAOrL,OAChBikB,EAAaD,GAAU3Y,EAAO,GAAK,CAAC0Y,GAAUvH,EAAAA,EAAAA,IAAcnR,EAAO,KAAO,CAAC0Y,GAC3EK,EACJza,GACAxG,IACAkhB,EAAAA,GAAAA,GACElhB,EACAwG,EACAua,EAAWI,GAAAA,EAAiBC,OAASP,EAASM,GAAAA,EAAiBE,QAAUF,GAAAA,EAAiBG,OAGxF4D,GAAWC,EAAAA,GAAAA,MACXjG,GAAYC,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAC3DgG,GAAuBL,EAAAA,EAAAA,cAAY,K,IAEE7c,EADpC2Y,GACHqE,GAAS5E,EAAAA,EAAAA,IAAmB,CAAE9Z,QAAkB,QAAT0B,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW1B,QAASuQ,MAAOmI,IACpE,GACC,CAACgG,EAAUhd,EAAQ2Y,EAAQ3B,KAEvBmG,EAAiBC,IAAsBjiB,EAAAA,EAAAA,WAAmC,GAC3EkiB,GAAeR,EAAAA,EAAAA,cAClBS,IACC,GAAIA,EAAS,CACSA,EAAQC,YAAcD,EAAQE,aAEhDJ,GAAoBK,GAAUA,EAAO,OAAS,SAElD,IAKF,CAACN,IAGH,OAAI5hB,GAAY+C,GAAYxG,GAU1B,UAAC0gB,GAAAA,GAAGA,CAACkF,MAAM,gB,WACT,UAAC1B,GAAAA,CACCxJ,cACEmG,EAAS,iBAA0B,QAAT3Y,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,UAAmB,QAAT/T,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,SAAW,kBAA2B,QAAT/T,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,SAEpGkI,aAActD,EACdL,QAAS4E,EACTnnB,IAAKsnB,E,UAEJ1E,GACC,SAACa,GAAAA,GAA0BA,CAAC1hB,QAASA,EAAS8gB,WAAYA,EAAYziB,KAAM,MAE5E,SAACsjB,GAAAA,EAAYA,CAACf,SAAUA,EAAUviB,KAAM,MAE1C,SAACylB,GAAAA,C,SAAWjD,GAAS,SAAC7V,EAAAA,GAAKA,C,SAAC,SAAwB,QAAT9C,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAWqV,QACtD,SAAC6G,GAAAA,C,SACEvD,EACC,GAAY,QAAT3Y,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,YAAqB,QAAT/T,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,UAErC,UAACyE,GAAAA,GAAGA,CAACe,IAAI,M,UACG,QAATvZ,EAAAA,EAAO,UAAPA,IAAAA,OAAAA,EAAAA,EAAW+T,OAAO,KAAC,SAACyD,GAAAA,EAAYA,CAACrhB,KAAM,GAAIF,MAAOyL,EAAMmV,oBAKjE,UAAC0F,GAAAA,C,WACG1D,IACA,SAAC8E,GAAAA,GAAOA,CAACC,UAAU,SAASznB,KAAM0nB,GAAAA,GAAYC,IAAKC,KAAMtB,EAAUuB,KAAMjR,EAAAA,CAAC,S,UACxE,UAACoP,GAAAA,CAAY3J,cAAa,gBAAgBlU,IAAWga,QAASsE,E,WAC3DhD,EAAAA,GAAAA,IAAetb,EAAS6e,EAAkB,OAAIxiB,EAA+B,SAApBwiB,EAA6B,OAAIxiB,IAC3F,SAACyhB,GAAAA,CAAAA,QAINrD,IACC,SAACkF,EAAAA,GAAYA,CAAC3E,KAAMP,EAAavG,cAAa,gBAAgBuG,I,UAC5D,SAACuD,GAAAA,C,SACExkB,IAAYN,EAAAA,QAAQC,SACnB,SAACqjB,GAAAA,EAAaA,CAACxkB,MAAM,OAAOC,OAAO,OAAOE,KAAMiL,EAAMqZ,YAEtD,SAACC,GAAAA,EAAYA,CAAC1kB,MAAM,OAAOC,OAAO,OAAOE,KAAMiL,EAAMqZ,sBAhD/D,UAACvC,GAAAA,GAAGA,CAACe,IAAI,MAAM2E,QAAQ,U,WACrB,SAAC/H,GAAiBA,CAAAA,IAClB,SAACJ,GAAYA,CAACG,OAAQ,QAsD9B,C,wCCvKA,MAAMiI,IAAa/c,EAAAA,EAAAA,SAAOgd,GAAAA,IAAIA,WAAAA,C,4JAAC;;;;uBAIRvC,GAAAA,GAAYC;;;EAK7BuC,IAAejd,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,8JAAuB;;;;gBAIzC,EAAGja,WAAYA,EAAM+U;;;gBAGrB,EAAG6H,YAAaA,GAAU;;uBAEnBzC,GAAAA,GAAYC;;;;;;;;EAU7ByC,IAAiBnd,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,gKAAC;;;;;uBAKdE,GAAAA,GAAY3N;;;EAK7BsQ,IAAqBpd,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,oKAAC;;;uBAGfqD,GAAAA,GAAYC;;;EAK7B2C,IAAiCrd,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,gLAAC;;;;;;uBAM3BqD,GAAAA,GAAYC;;;;;EAO7B3D,IAAa/W,EAAAA,EAAAA,SAAOiC,GAAAA,IAAIA,WAAAA,C,4JAAC;;;WAGpB,EAAG3B,WAAYA,EAAMqZ;IAC5BnE,EAAAA;EAGE8H,GAAqB3E,EAAAA,GAAG;;;4BAGF,EAAGrY,WAAYA,EAAM+U;EAG3CkI,GAAsB5E,EAAAA,GAAG;;;2BAGJ,EAAGrY,WAAYA,EAAM+U;EAG1CmI,GAAmBxd,EAAAA,QAAOG,IAAG,Y,kKAAsD;;WAE9E,EAAGsd,aAAwB,IAAVA;gBACZ,EAAGC,YAAaA;IAC5B,EAAGC,YAAcA,EAASL,GAAqBC;EAG7CK,IAAoB5d,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,mKAAC;;;EAKzCiJ,IAAmB7d,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,kKAAC;;;;EAaxCkJ,GAAwB,EAAGxU,QAAO5S,c,IAKrBqnB,EAJjB,MACMC,GADe1D,EAAAA,GAAAA,MACiB,IAChC,aAAEpP,IAAiBE,EAAAA,EAAAA,MACnB2S,EAAiBrnB,GAAUunB,EAAAA,EAAAA,IAAYvnB,EAAS4S,GAASA,EAEzDgO,GADWyG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAgB7gB,WAAYwa,GAAAA,IAChBhhB,GAAUwnB,EAAAA,GAAAA,IAAcxnB,GAAW4S,EAAMgO,SACtE,OACE,UAAC+F,GAAAA,C,WACGW,IAAoB,SAAC3F,GAAAA,EAAYA,CAACf,SAAUA,EAAUviB,KAAM,GAAIskB,MAAO,CAAE8E,YAAa,SACvFjT,EAAa,CACZ2I,MAAOvK,EAAM8U,IACb7V,KAAMyD,EAAAA,GAAW8H,qBAChB,QAEH,UAACiD,GAAUA,CACT7U,IAAI8U,EAAAA,EAAAA,IAAmB,CACrB9Z,QAAS6gB,EAAe7gB,QACxBuQ,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,M,UAGvDkI,IACC,SAAC3F,GAAAA,EAAYA,CAACf,SAAUA,EAAUviB,KAAM,GAAIskB,MAAO,CAAE8E,YAAa,MAAOE,WAAY,SAEtFN,EAAepL,Y,EAajB,SAAS2L,IAAiB,SAAE9e,EAAQ,WAAEyL,EAAU,QAAEvU,EAAO,QAAEyD,I,IAKlCqF,EAAAA,EACAA,EAAAA,EA6DzBA,EAGAA,EAGAA,EAAwCA,EAxE7C,MACMwe,GADe1D,EAAAA,GAAAA,MACiB,GAChCha,GAAQ4T,EAAAA,EAAAA,YAERqK,GAAYC,EAAAA,GAAAA,IAAYhf,QAAAA,EAAAA,SAAAA,IAAAA,GAAgB,QAAhBA,EAAAA,EAAU3H,cAAV2H,IAAAA,OAAAA,EAAAA,EAAkBtC,QAASxG,GACnD+nB,GAAYD,EAAAA,GAAAA,IAAYhf,QAAAA,EAAAA,SAAAA,IAAAA,GAAgB,QAAhBA,EAAAA,EAAU1H,cAAV0H,IAAAA,OAAAA,EAAAA,EAAkBtC,QAASxG,IAElDmB,EAAQC,IAAUiE,EAAAA,EAAAA,UAAQ,KAC/B,GAAIyD,GAAYA,EAASkf,WAAalf,EAASmP,aAAenP,EAASmf,WAAanf,EAASoP,YAAa,C,IACtFpP,EAAsBA,EAAwBA,EAAsBA,EAEjFA,EACIA,EACFA,EACKA,EAAsBA,EAI7BA,EACIA,EACFA,EACKA,EAAsBA,EAZlC,MAAMof,GAAYpf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkf,YAAYlf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmP,cAAcnP,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmf,YAAYnf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUoP,aAC1FiQ,EAAgC,IACjCrf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OACbkU,MAAOvM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmP,YACjByP,IAAK5e,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkf,UACfjB,SAAUje,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkf,YAAYlf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmP,aAAeiQ,EACzDtH,SAAUiH,GAENO,EAAgC,IACjCtf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OACbiU,MAAOvM,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUoP,YACjBwP,IAAK5e,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmf,UACflB,SAAUje,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUmf,YAAYnf,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUoP,aAAegQ,EACzDtH,SAAUmH,GAEZ,OAAOxT,EAAa,CAAC6T,EAAgBD,GAAkB,CAACA,EAAgBC,EAC1E,CACE,MAAO,MAACvlB,OAAWA,EACrB,GACC,CAACglB,EAAWE,EAAWxT,EAAYzL,IAEtC,OAAIrF,GAAYtC,GAAWC,GAAW0H,GAiBpC,UAACyd,GAAAA,CAAaC,QAAM,E,WAClB,SAACH,GAAAA,C,UACC,SAACrb,EAAAA,GAAKA,C,SAAC,aAET,UAACyb,GAAAA,C,WACC,SAACpc,EAAAA,GAAWwX,cAAa,C,UACvB,SAAC7W,EAAAA,GAAKA,C,SAAC,qBAET,UAAC0b,GAAAA,C,WACC,SAACU,GAAAA,CAAsBxU,MAAOzR,EAAQnB,QAASA,KAC/C,SAAConB,GAAAA,CAAsBxU,MAAOxR,EAAQpB,QAASA,OAEhDsnB,IACC,UAAC5G,GAAAA,GAAGA,CAAChG,cAAY,qB,WACf,SAACoM,GAAAA,CAAiBC,QAAS5lB,EAAO4lB,QAASC,OAAQpd,EAAMzI,OAAQ8lB,QAAQ,KACzE,SAACH,GAAAA,CAAiBC,QAAS3lB,EAAO2lB,QAASC,OAAQpd,EAAMxI,OAAQ6lB,QAAQ,WAI9Ene,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUuf,UACT,SAACC,GAAAA,CAASC,OAAO,SAACvd,EAAAA,GAAKA,C,SAAC,QAAarD,MAAOmB,EAASuf,OAAQG,MAAO1f,EAAS2f,oBAEnD5lB,KAA3BiG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU4f,gBACT,SAACJ,GAAAA,CAASC,OAAO,SAACvd,EAAAA,GAAKA,C,SAAC,eAAoBrD,MAAOmB,EAAS4f,aAAcF,MAAO1f,EAAS6f,0BAEhE9lB,KAA3BiG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU4f,oBAAoD7lB,KAAtBiG,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkK,WACjD,SAACsV,GAAAA,CAASC,OAAO,SAACvd,EAAAA,GAAKA,C,SAAC,aAAkBrD,MAAOmB,EAAS4f,cAAgB5f,EAASkK,QAAU,WAzC/F,UAACuT,GAAAA,C,WACC,SAACF,GAAAA,C,UACC,SAACc,GAAAA,CAAAA,KAEF3f,MAAM2F,KAAK,CAAEtQ,OAAQ,IAAKkE,KAAI,CAAC6nB,EAAGjsB,KACjC,UAACknB,EAAAA,GAAMA,CAACpC,IAAI,K,WACV,SAACxD,GAAYA,CAAAA,IACb,SAACiJ,GAAAA,CAAAA,KAFmB,oBAAoBvqB,SAwCpD,CAEA,MAAMksB,IAAqBvf,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,oKAAC;;;;;uBAKfqD,GAAAA,GAAYC;;;;;EAO7B8E,IAAexf,EAAAA,EAAAA,SAAOgd,GAAAA,IAAIA,WAAAA,C,+JAAC;WACtB,EAAG1c,WAAYA,EAAMqZ;;;;;uBAKTc,GAAAA,GAAYC;;;;EAMnC,SAASsE,IAAS,MAAEC,EAAK,MAAE5gB,EAAK,MAAE6gB,IAChC,MAAM,aAAEhU,EAAY,YAAEuU,IAAgBrU,EAAAA,EAAAA,MAEtC,OACE,UAAC+R,GAAAA,C,WACC,SAACpc,EAAAA,GAAWwX,cAAa,C,SAAE0G,KAC3B,UAACM,GAAAA,C,WACC,SAACC,GAAAA,C,SACEtU,EAAa,CACZ2I,MAAOxV,EACPkK,KAAMyD,EAAAA,GAAW0T,qBAGlBR,IACD,UAAC9H,GAAAA,GAAGA,CAACliB,MAAM,cAAc4nB,QAAQ,U,WAC/B,SAAC6C,GAAAA,GAAUA,CAACT,MAAOA,KACnB,SAACne,EAAAA,GAAWwX,cAAa,C,SAAEkH,EAAYP,aAMnD,C,kTCnQA,MAAMU,IAA6B5f,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,mLAAC;;;;uBAIvBqD,GAAAA,GAAYC;;;;;;;kBAOjB,EAAGpa,WAAYA,EAAMuf;;wBAEf,EAAGvf,WAAYA,EAAM6T;;;;;;eAM9B2L,GAAAA,EAAQC;;uBAEAtF,GAAAA,GAAYja;;;EAK7Bwf,GAAahgB,EAAAA,QAAOigB,OAAM,Y,mKAAqE;;;;;;WAM1F,EAAGC,WAAaA,EAAQ,QAAU;;WAElC,EAAG5f,QAAO4f,WAAaA,EAAQ5f,EAAMqZ,SAAWrZ,EAAM6f;sBAC3C,EAAG7f,QAAO4f,WAAaA,EAAQ5f,EAAMuf,UAAWO,EAAAA,GAAAA,IAAQ,GAAI9f,EAAM6f;;gBAExE,EAAG7f,WAAY,SAASA,EAAM2U,WAAW9G,SAAS+G,UAAU5U,EAAM2U,WAAWoL,OAAOC;YACxF,EAAGhgB,QAAO4f,WAAYA,GAAS,aAAa5f,EAAM6T;IAC1DqB,EAAAA;uBACmBiF,GAAAA,GAAYC;aACtB,EAAG6F,iBAAkBA,GAAe;;uBAE1B9F,GAAAA,GAAY3N;eACpB,EAAG0T,mBAAoBA,GAAiB;aAC1C,EAAGD,kBAAmBA,GAAe;;EAI5CE,IAAWzgB,EAAAA,EAAAA,SAAOuV,GAAAA,GAAYA,WAAAA,C,iKAAC;UAC3B,EAAGjV,WAAYA,EAAM6f;;EAIzBO,IAAe1gB,EAAAA,EAAAA,SAAO4U,GAAAA,GAAaA,WAAAA,C,qKAAC;;;;EAMpC+L,IAAmB3gB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,yKAAqB;;;gBAG3C,EAAGzL,UAAYA,EAAO,UAAY;aACrC,EAAGA,UAAYA,EAAO,IAAM;gBACzB,EAAGA,UAAYA,EAAO,QAAU;gBAChC,EAAGxO,WAAY,cAAcA,EAAM2U,WAAW9G,SAAS+G,UAAU5U,EAAM2U,WAAWoL,OAAOO;oBACrF,EAAG9R,UAAYA,EAAO,OAAS;;IAE/C+R,GAAAA;;;;;;;IAOAC,GAAAA;kBACc,EAAGhS,UAAYA,EAAO,UAAY;;;uBAG7B2L,GAAAA,GAAYC;;;;;;;;;eASpBoF,GAAAA,EAAQiB;kBACL,EAAGzgB,WAAYA,EAAMuf;kBACrB,EAAGvf,WAAY,WAAWA,EAAM2U,WAAW9G,SAAS+G,UAAU5U,EAAM2U,WAAWoL,OAAOO;;EAIlGI,IAAgBhhB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,sKAAC;;;uBAGbE,GAAAA,GAAYC;;;EAyB5B,SAASuG,IAAwB,QAAEvqB,EAAO,OAAEmB,EAAM,OAAEC,EAAM,QAAE4R,EAAO,QAAEvP,I,IAI1DmL,EAoBZ4b,EAAmCrpB,EAAiBC,EA0BlBD,EACAC,EA+EuBD,EAAkBC,EAGpBD,EAAiBC,EApI5E,MAAQpB,QAASyqB,EAAa,QAAEC,IAAY5lB,EAAAA,GAAAA,MACpC6lB,UAAWC,IAAuBC,EAAAA,GAAAA,GAAuBH,GAAW,GAAI1qB,EAAU,CAACA,QAAW6C,GAChG+L,EAAWgc,GAfnB,SAA8BD,EAA2BxpB,EAAgBC,EAAgB4R,G,IAChF2X,EAAP,OAAOA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAW9jB,MACf+H,I,IACEA,EAA2CzN,EAC1CyN,EAA2CxN,EAC5CwN,EAA2CzN,EAC1CyN,EAA2CxN,EAC7CwN,E,QAJCA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQ3pB,OAAOgD,kBAAkBhD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,WAClDoI,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQ3pB,OAAOgD,kBAAkB/C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,aACpDoI,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQ1pB,OAAO+C,kBAAkBhD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,WAClDoI,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQ1pB,OAAO+C,kBAAkB/C,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,YACrDoI,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQ1kB,MAAO4M,IACxBpE,EAASmc,MAAM,GAEtB,CAKyCC,CAAqBJ,EAAoBzpB,EAAQC,EAAQ4R,GAC1FiY,EAAUrc,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkc,QAAQG,QAC5BC,GAAcC,EAAAA,GAAAA,KACdjG,GAAWC,EAAAA,GAAAA,MACX0C,EAAY1mB,IAAUkY,EAAAA,EAAAA,IAAclY,GACpC4mB,EAAY3mB,IAAUiY,EAAAA,EAAAA,IAAcjY,IAGlC8B,KAAMsnB,IAAiBY,EAAAA,GAAAA,OACzB,SAAEC,EAAQ,SAAEC,EAAQ,aAAEC,EAAY,aAAEC,IAAiBnmB,EAAAA,EAAAA,UAAQ,K,IACxCmlB,EAAAA,EAAAA,EAAAA,EAGHiB,EACAA,EAEVC,EACAC,EACID,EAAAA,EACAC,EAAAA,EAThB,MAAMF,EAAmBjB,QAAAA,EAAAA,SAAAA,IAAAA,GAAwB,QAAxBA,EAAAA,EAAcoB,kBAAdpB,IAAAA,GAA6B,QAA7BA,EAAAA,EAA2B,UAA3BA,IAAAA,GAA4C,QAA5CA,EAAAA,EAA+BqB,qBAA/BrB,IAAAA,OAAAA,EAAAA,EAA8C5U,QACpEkW,I,IAAiBA,EAAAA,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,GAAmB,QAAnBA,EAAAA,EAAclZ,aAAdkZ,IAAAA,OAAAA,EAAAA,EAAqB/U,UAAUoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,GAAO,IAEnGsM,EAAgBD,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkB5kB,MAAMilB,I,IAAiBA,EAAAA,EAAiC3qB,E,OAAjC2qB,QAAAA,EAAAA,SAAAA,IAAAA,GAAmB,QAAnBA,EAAAA,EAAclZ,aAAdkZ,IAAAA,OAAAA,EAAAA,EAAqBtlB,YAAYrF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QAAQ,IAC1GmlB,EAAgBF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkB5kB,MAAMilB,I,IAAiBA,EAAAA,EAAiC1qB,E,OAAjC0qB,QAAAA,EAAAA,SAAAA,IAAAA,GAAmB,QAAnBA,EAAAA,EAAclZ,aAAdkZ,IAAAA,OAAAA,EAAAA,EAAqBtlB,YAAYpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,QAAQ,IAChH,MAAO,CACL6kB,UAAUK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAeK,WAAY,EACrCT,UAAUK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAeI,WAAY,EACrCR,cAAcG,QAAAA,EAAAA,SAAAA,IAAAA,GAA+B,QAA/BA,EAAAA,EAAeM,wBAAfN,IAAAA,OAAAA,EAAAA,EAAiC/jB,QAAS,EACxD6jB,cAAcG,QAAAA,EAAAA,SAAAA,IAAAA,GAA+B,QAA/BA,EAAAA,EAAeK,wBAAfL,IAAAA,OAAAA,EAAAA,EAAiChkB,QAAS,EACzD,GACA,CAAC6iB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAcoB,WAAY5rB,EAASmB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QAASpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,WAC1D,aAAEgO,IAAiBE,EAAAA,EAAAA,MACnBuX,EAAoBzX,EAAa,CACrC2I,MAAOkO,EACPxZ,KAAMyD,EAAAA,GAAW4W,aAEbC,EAAoB3X,EAAa,CACrC2I,MAAOmO,EACPzZ,KAAMyD,EAAAA,GAAW4W,aAEbE,EAAiBb,EAAeC,EAChCa,EAAqB7X,EAAa,CACtC2I,MAAOiP,EACPva,KAAMyD,EAAAA,GAAWgX,mBAGbC,EAAqB,W,WAAA,YACrB1E,GAAaE,IACX0C,IAAkBzqB,GAAWA,UAAekrB,EAAYlrB,IAC5DklB,EAAS,SAAQsH,EAAAA,GAAAA,GAAW3E,OAAc2E,EAAAA,GAAAA,GAAWzE,MAAc/U,IAAUiY,EAAU,IAAIA,IAAY,MAE3G,E,mOAL2B,IAMpBwB,EAAeC,IAAuBpK,EAAAA,EAAAA,aAAYqK,IAAWA,IAAO,GACrEC,GAAehJ,EAAAA,GAAAA,MACfiJ,EAA6BD,EAAa,GAC1C1iB,GAAY0iB,EAAa,GACzBE,GAAgBC,EAAAA,GAAAA,IAAgB5rB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QAASxG,GACjDgtB,GAAgBD,EAAAA,GAAAA,IAAgB3rB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,QAASxG,GACjDitB,GAAkBC,EAAAA,GAAAA,IAAmBJ,EAAeE,GAE1D,OAAIvpB,GAAYokB,GAAcE,GAY5B,UAAClE,EAAAA,GAAMA,CAACpC,IAAI,K,WACV,UAACyH,GAAAA,C,UACEwB,IACC,UAACJ,GAAAA,C,WACC,SAACjgB,EAAAA,GAAW8iB,eAAc,C,UACxB,SAACniB,EAAAA,GAAKA,C,SAAC,qBAET,UAAC0V,GAAAA,GAAGA,CAACe,IAAI,M,WACP,UAACpX,EAAAA,GAAW+iB,cAAa,C,UACtBnB,EAAkB,IAAEpE,EAAU5L,WAEjC,SAAC5R,EAAAA,GAAW+iB,cAAa,CAACjvB,MAAM,W,SAAW,OAC3C,UAACkM,EAAAA,GAAW+iB,cAAa,C,UACtBjB,EAAkB,IAAEpE,EAAU9L,UAEhCoR,QAAQjB,KAAoBliB,IAAY,UAACG,EAAAA,GAAWijB,QAAO,C,UAAC,IAAEjB,EAAmB,cAIxF,SAAC/C,GAAAA,CACC9I,QAASkM,EACTlD,MAAOiD,EACP5C,YAAawD,QAAQ3C,GACrBhQ,cAAa,gBAAgB+R,EAAgB,QAAU,gB,SAEtDA,GACC,sB,UACGI,IAA8B,SAACU,GAAAA,EAACA,CAAClvB,KAAM,MACxC,SAACgM,EAAAA,GAAWuX,YAAW,CAAC4L,WAAY,IAAKrvB,MAAM,e,UAC7C,SAAC6M,EAAAA,GAAKA,C,SAAC,gBAIX,sB,UACG6hB,IAA8B,SAAC9C,GAAAA,CAAAA,IAChC,SAAC1f,EAAAA,GAAWuX,YAAW,CAAC4L,WAAY,IAAKrvB,MAAM,e,UAC7C,SAAC6M,EAAAA,GAAKA,C,SAAC,iBAKf,UAACse,GAAAA,CACC9I,QAAS+L,EACT7R,cAAY,oCACZmP,YAAawD,QAAQ3C,GACrBZ,eAAa,E,UAEZ+C,IAA8B,SAAC/uB,GAAAA,EAAIA,CAACO,KAAM,MAC3C,SAACgM,EAAAA,GAAWuX,YAAW,CAAC4L,WAAY,IAAKrvB,MAAM,e,UAC7C,SAAC6M,EAAAA,GAAKA,C,SAAC,2BAIb,UAACif,GAAAA,CAAiB7R,KAAMqU,EAAe/R,cAAY,0B,WACjD,SAAC+S,GAAAA,GAAIA,CACHC,cAAc,EACd1tB,QAASA,EACT2tB,qBAAsB9F,EACtB+F,sBAAuB7F,EACvB8F,SAAO,EACPC,mBAAoB9tB,IAAYyqB,IAEjC4C,QAAQJ,KACP,SAACc,GAAAA,EAAkBA,CACjBC,cAAef,IAAoBH,EAAgB3rB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QAAUpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,UAAY,GACzFynB,QAAShB,GAAmBiB,GAAAA,GAC5BC,OAAQd,QAAQP,GAAiBE,GACjCoB,YAAanB,IAAoBH,EAAgB3rB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,OAAS7a,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,aAIhF,SAACoS,GAAAA,EAAKA,CACJ7E,MAAOiD,IAAkBI,EACzByB,UAAWvK,GAAAA,GAAYC,GACvBuK,QAASnF,GAAAA,EAAQC,OACjB7I,QAASkM,QArFX,UAACxD,GAAAA,CAA2BxO,cAAY,+B,WACtC,SAAC4P,GAAAA,C,UACC,SAACN,GAAAA,CAAAA,MAEH,SAACA,GAAAA,CAAAA,IACD,SAACA,GAAAA,CAAAA,KAoFT,CCpSO,MAAMwE,GAAgB3iB,IAC3B,UAAC4iB,MAAAA,CAAIlwB,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,UAAWkN,E,WACjG,UAAC6iB,IAAAA,CAAEC,SAAS,0B,WACV,SAACC,OAAAA,CACCC,EAAE,+GACFjwB,OAAO,UACPE,cAAc,QACdC,eAAe,WAEjB,SAAC6vB,OAAAA,CAAKC,EAAE,mCAAmCjwB,OAAO,UAAUE,cAAc,QAAQC,eAAe,cAEnG,SAAC+vB,OAAAA,C,UACC,SAACH,WAAAA,CAASI,GAAG,oB,UACX,SAACC,OAAAA,CAAKxwB,MAAM,KAAKC,OAAO,KAAKE,KAAK,iB,4VCD1C,MAAMswB,IAAuB3lB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,8KAAC;;;;EAMrCqL,IAAkB5lB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,yKAAC;;gBAEtB,EAAGja,WAAYA,EAAM+U;;;IAGjCG,EAAAA;;EAIEqQ,IAAU7lB,EAAAA,EAAAA,SAAOe,EAAAA,GAAWqU,YAAU,Y,iKAAC;;gBAE7B,EAAG9U,WAAYA,EAAM+U;EAG/ByQ,IAAgB9lB,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,uKAA6B;;;;;WAKlD,EAAG9W,QAAOylB,YACjBA,IAAWC,GAAeC,SACtB3lB,EAAM4lB,QACNH,IAAWC,GAAeG,aAC1B7lB,EAAM8lB,yBACN9lB,EAAMmV;EAGR4Q,IAAermB,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,sKAAC;;;kCAGEqD,GAAAA,GAAY3N;;;;;EAOxCwZ,IAAoBtmB,EAAAA,EAAAA,UDpCEuC,IAC1B,SAAC4iB,MAAAA,CAAIjwB,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOJ,MAAM,gCAAiCsN,E,UAC/F,SAAC+iB,OAAAA,CACCC,EAAE,2NACFlwB,KAAK,gBCgCiCkxB,WAAAA,C,2KAAC;kCACX9L,GAAAA,GAAY3N;;;EAKxC0Z,IAAYxmB,EAAAA,EAAAA,SAAOe,EAAAA,GAAWijB,SAAO,Y,mKAAC;;;EAKtCyC,GAAYzmB,EAAAA,QAAOG,IAAG,Y,mKAAA;;;;sBAIN,EAAGG,WAAYA,EAAM4lB;MAG3C,GAMA,SAASQ,IAAY,aAAEC,IACrB,MAAM/nB,EAAS,EACb4f,EAAAA,GAAAA,IAAYmI,EAAanF,QAAQ3pB,OAAQ8uB,EAAajwB,UACtD8nB,EAAAA,GAAAA,IAAYmI,EAAanF,QAAQ1pB,OAAQ6uB,EAAajwB,WAEhDA,QAASyqB,IAAkB3lB,EAAAA,GAAAA,KAC7BogB,GAAWC,EAAAA,GAAAA,MACX+F,GAAcC,EAAAA,GAAAA,KACdvhB,GAAQ4T,EAAAA,EAAAA,aACR,gBAAE0S,IAAoBxb,EAAAA,EAAAA,MAEtB8L,GAAUuE,EAAAA,EAAAA,aAAY,gBACtB0F,IAAkBwF,EAAajwB,gBAAekrB,EAAY+E,EAAajwB,UAC3EklB,EAAS,SAAW+K,EAAanF,QAAQG,QAC3C,IAAG,CAAC/F,EAAU+K,EAAajwB,QAASiwB,EAAanF,QAAQG,QAASC,EAAaT,IAEzE4E,EAASY,EAAaE,QACxBb,GAAeC,SACfU,EAAalF,OACbuE,GAAec,OACfd,GAAeG,aAEbY,EAAaJ,EAAarhB,SAAS0hB,iBAAiB1c,SACpD2c,EAAaN,EAAarhB,SAAS4hB,iBAAiB5c,SAEpD6c,EAAe,CACnBC,MAA6C,IAAtC/c,WAAW4c,EAAWnuB,QAAQ,IACrCuuB,MAAOhd,WAAW0c,EAAWjuB,QAAQ,IAAMR,OAAOgvB,kBAGpD,OACE,UAAC1B,GAAAA,CAAgB1O,QAASA,E,WACxB,UAACE,GAAAA,GAAGA,CAACe,IAAI,M,WACP,SAACoP,GAAAA,GAAkBA,CAAC/P,WAAY5Y,EAAQ7J,KAAM,MAC9C,UAACgM,EAAAA,GAAWyS,UAAS,C,UAClBmT,EAAarrB,KAAKzD,OAAO8a,OAAO,IAAEgU,EAAarrB,KAAKxD,OAAO6a,WAE9D,UAACkT,GAAAA,C,UAASc,EAAarrB,KAAKwB,IAAMga,GAAAA,GAAU,QAC5C,UAACgP,GAAAA,CAAcC,OAAQA,E,WACrB,SAAChlB,EAAAA,GAAWijB,QAAO,CAACnvB,MAAM,U,SAAWkxB,IACpCA,IAAWC,GAAeC,WAAY,SAACQ,GAAAA,CAAAA,GACvCV,IAAWC,GAAeG,eAAgB,SAACqB,GAAAA,EAAaA,CAACzyB,KAAM,GAAIF,MAAOyL,EAAM8lB,2BAChFL,IAAWC,GAAec,SAAU,SAAC5B,GAAYA,CAAAA,UAGtD,UAACmB,GAAAA,C,WACC,UAACG,GAAAA,CAAUpV,cAAa,gBAAgB6V,EAAWnuB,QAAQ,K,WACzD,SAAC4I,EAAAA,GAAKA,C,SAAC,SAAY,OAClBklB,EAAgB,CACf7a,MAAOkb,EACPQ,QAASN,EACTO,UAAWC,GAAAA,GAAMP,QAChB,OAEFT,EAAarrB,KAAKzD,OAAO8a,OAAO,QACjC,SAACjR,EAAAA,GAAKA,C,SAAC,QAAW,OACjBilB,EAAarrB,KAAKxD,OAAO6a,WAE5B,SAAC2T,GAAAA,CAAAA,IACD,UAACE,GAAAA,CAAUpV,cAAa,gBAAgB2V,EAAWjuB,QAAQ,K,WACzD,SAAC4I,EAAAA,GAAKA,C,SAAC,SAAY,OAClBklB,EAAgB,CACf7a,MAAOgb,EACPU,QAASN,EACTO,UAAWC,GAAAA,GAAMN,QAChB,OAEFV,EAAarrB,KAAKzD,OAAO8a,OAAO,QACjC,SAACjR,EAAAA,GAAKA,C,SAAC,QAAW,OACjBilB,EAAarrB,KAAKxD,OAAO6a,eAKpC,CAEO,SAASiV,IAA0B,UAAEvG,IAC1C,OACE,SAACsE,GAAAA,C,SACEtE,EAAU5pB,KAAI,CAAC6N,EAAU3G,KACxB,SAAC+nB,GAAAA,CAAYC,aAAcrhB,GAAe,iBAAiB3G,QAInE,E,SA1FKqnB,GAAAA,EACHC,SAAW,WADRD,EAEHG,aAAe,eAFZH,EAGHc,OAAS,Q,EAHNd,KAAAA,GAAAA,CAAAA,I,ICjEE,G,8FAAK6B,GAAAA,EACVC,IAAM,MADID,EAEVE,KAAO,OAFGF,EAGVG,KAAO,OAHGH,EAIVI,KAAO,M,EAJGJ,KAAAA,GAAAA,CAAAA,IA2BZ,MAAMK,GAAkC,G,4BCjBxC,MAAMjQ,IAAqBjY,EAAAA,EAAAA,SAAO6c,EAAAA,IAAYA,WAAAA,C,gLAAC;WACpC,EAAGvc,WAAYA,EAAMmV;YACpB,EAAGnV,WAAYA,EAAMmV;EAG3B0S,GAAenoB,EAAAA,QAAOG,IAAG,Y,0KAAA;;MAS/B,I,SAAKioB,GAAAA,EAAAA,EACHC,UAAAA,GAAAA,YADGD,EAAAA,EAEHE,KAAAA,GAAAA,OAFGF,EAAAA,EAGHG,aAAAA,GAAAA,eAHGH,EAAAA,EAIHI,UAAAA,GAAAA,YAJGJ,EAAAA,EAKHK,YAAAA,GAAAA,cALGL,EAAAA,EAMHM,aAAAA,GAAAA,c,EANGN,KAAAA,GAAAA,CAAAA,IASL,MAAMO,GAAyE,CAC7E,CAACP,GAAsBC,WAAY,IACnC,CAACD,GAAsBE,MAAO,IAC9B,CAACF,GAAsBG,cAAe,IACtC,CAACH,GAAsBI,WAAY,IACnC,CAACJ,GAAsBK,aAAc,IACrC,CAACL,GAAsBM,cAAe,KAGxC,SAASE,GAAkBhsB,EAAgDC,G,IACrEA,EAI+BA,EAAAA,EAJnC,IAAIA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQK,WAAYwa,GAAAA,GAAiB,C,IAEOmR,EAD9C,MAAMnyB,GAAU8Z,EAAAA,EAAAA,IAA6B3T,EAAO4Q,OACpD,OAAO/W,GAAWkG,EAAO6oB,GAAG5qB,iBAAkD,QAAhCguB,EAAAA,GAAAA,GAAwBnyB,UAAxBmyB,IAAAA,OAAAA,EAAAA,EAAkC3rB,QAAQrC,cAC1F,CACA,OAAO+B,EAAO6oB,GAAG5qB,iBAAkBgC,QAAAA,EAAAA,SAAAA,IAAAA,GAAe,QAAfA,EAAAA,EAAQK,eAARL,IAAAA,OAAAA,EAAAA,EAAiBhC,cACtD,CAEO,SAASiuB,IAA6B,YAC3CxuB,EAAW,OACXzC,EAAM,OACNC,EAAM,gBACN4V,I,IAwNE5V,EAjNF,MAAM2V,GAAQsb,EAAAA,EAAAA,KAAyBC,EAAAA,GAAAA,MAAwB,CAAEC,oBAAoB,IAC/EC,GAAsBC,EAAAA,GAAAA,OACtB,aAAEje,EAAY,gBAAEke,IAAoBhe,EAAAA,EAAAA,OACnCie,EAAmBC,IAAqBtQ,EAAAA,EAAAA,aAAYC,IAAOA,IAAG,IAC9D3M,EAAQid,IAAcxvB,EAAAA,EAAAA,UAAqC,CAChE8tB,GAAyBC,IACzBD,GAAyBE,KACzBF,GAAyBG,KACzBH,GAAyBI,QAGpBuB,IAAazvB,EAAAA,EAAAA,UAA+B,CACjD0vB,OAAQC,GAAAA,GAAoBrB,UAC5BsB,cAAeC,GAAAA,GAAeC,QAE1B,aAAEC,EAAY,QAAE3vB,EAAO,SAAE4vB,EAAQ,MAAE7vB,GD/CpC,SACLgD,EACAxG,EAEA4V,EAAqC,CACnCub,GAAyBC,IACzBD,GAAyBE,KACzBF,GAAyBG,KACzBH,GAAyBI,MAE3BpwB,EACA6V,EAAmCO,EAAAA,IAAgBC,GACnD8b,EAAQ9B,I,IAwBc+B,EAAAA,EACAC,EAAAA,EAiFIryB,EAxG1B,MAAMsyB,GAAmBC,EAAAA,GAAAA,IAAeC,GAAAA,GAAaC,YAEnDnwB,QAASowB,EACTrwB,MAAOswB,EACP5wB,KAAMqwB,EACNQ,UAAWC,IACTC,EAAAA,EAAAA,KAA2B,CAC7B/vB,UAAW,CAAEovB,QAAOvc,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAAS5Y,WACnF7C,KAAMqT,IAAoBO,EAAAA,IAAgBC,MAG1C/T,QAASywB,EACT1wB,MAAO2wB,EACPjxB,KAAMswB,EACNO,UAAWK,IACTC,EAAAA,EAAAA,KAA2B,CAC7BnwB,UAAW,CAAEovB,QAAOvc,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAAS5Y,WACnF7C,MAAO3D,GAAWgX,IAAoBO,EAAAA,IAAgBgJ,IAAOvgB,IAAYN,EAAAA,QAAQC,UAAY8zB,IAEzFa,GAAcvrB,EAAAA,EAAAA,SAAO,IACrB,aAAEqqB,EAAY,QAAE3vB,EAAO,UAAEswB,EAAS,MAAEvwB,GACxCwT,IAAoBO,EAAAA,IAAgBC,GAChC,CAAE4b,aAAcG,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAQxb,cAARwb,IAAAA,OAAAA,EAAAA,EAAgBH,aAAc3vB,QAASowB,EAAWE,UAAWC,EAAaxwB,MAAOswB,GACjG,CAAEV,aAAcI,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAQ1b,cAAR0b,IAAAA,OAAAA,EAAAA,EAAgBJ,aAAc3vB,QAASywB,EAAWH,UAAWK,EAAa5wB,MAAO2wB,GAEjGd,GAAWtO,EAAAA,EAAAA,cACf,EAAGwP,iB,IAOWnB,EAAAA,EANRkB,EAAYnrB,UAGhBmrB,EAAYnrB,SAAU,EACtB4qB,EAAU,CACR7vB,UAAW,CACTswB,OAAQpB,QAAAA,EAAAA,SAAAA,IAAAA,GAAuC,QAAvCA,EAAAA,EAAeA,EAAav2B,OAAS,UAArCu2B,IAAAA,OAAAA,EAAAA,EAAyCjb,WAEnDsc,YAAa,CAAC9O,GAAQ+O,sB,IAEpBH,EAOgB,EASA,EAjBhB,IAAKG,EAAiB,OAAO/O,EAC7B4O,QAAAA,EAAAA,SAAAA,IAAAA,GAAAA,IACA,MAAMI,EACJ3d,IAAoBO,EAAAA,IAAgBC,GAChC,CACEO,OAAQ,IACH2c,EAAgB3c,OACnBqb,aAAc,KACgC,QAAxC,IAAkCrb,cAAlC,eAA0Cqb,eAAgB,MAC3DsB,EAAgB3c,OAAOqb,gBAIhC,CACEtb,OAAQ,IACH4c,EAAgB5c,OACnBsb,aAAc,KACgC,QAAxC,IAAkCtb,cAAlC,eAA0Csb,eAAgB,MAC3DsB,EAAgB5c,OAAOsb,gBAKtC,OADAkB,EAAYnrB,SAAU,EACfwrB,CAAU,IAEnB,GAEJ,CAACZ,EAAWX,EAAcpc,IAGtB4d,GAAuBvvB,EAAAA,EAAAA,UAAQ,K,IAC3B+tB,EAAR,OAA0B,QAAlBA,EAAAA,GAAgB,UAAhBA,IAAAA,OAAAA,EAAD,EACHryB,KAAK8zB,I,IAKUC,EAAAA,EAAoC3zB,EAAAA,EAJnD,IAAK0zB,EACH,OAEF,MACME,GAASD,QAAAA,EADCnhB,WAAWkhB,EAAGG,gBAAkB,EAAIH,EAAG1zB,OAAS0zB,EAAGzzB,cACpD0zB,IAAAA,GAAgB,QAAhBA,EAAAA,EAAStuB,eAATsuB,IAAAA,OAAAA,EAAAA,EAAkB3wB,kBAAkBhD,QAAAA,EAAAA,SAAAA,IAAAA,GAAe,QAAfA,EAAAA,EAAQqF,eAARrF,IAAAA,OAAAA,EAAAA,EAAiBgD,eAC9D0N,EACJgjB,EAAGhjB,OAASojB,EAAAA,IAAoBxH,KAC5BsH,EACE5D,GAAyBE,KACzBF,GAAyBC,IAC3ByD,EAAGhjB,OAASojB,EAAAA,IAAoBC,OAChC/D,GAAyBG,KACzBH,GAAyBI,KAC/B,OAAK3b,EAAOuf,SAAStjB,GACd,CACLsG,UAAW0c,EAAG1c,UACdid,YAAaP,EAAGQ,KAChBzwB,KAAM,CACJzD,OAAQ,CACN4tB,GAAI8F,EAAG1zB,OAAOqF,SAAW,GACzByV,OAAQ4Y,EAAG1zB,OAAO8a,QAAU,IAE9B7a,OAAQ,CACN2tB,GAAI8F,EAAGzzB,OAAOoF,SAAW,GACzByV,OAAQ4Y,EAAGzzB,OAAO6a,QAAU,KAGhCqZ,MAAOT,EAAGnK,QACV6K,QAAS5hB,WAAWkhB,EAAGG,gBACvBQ,QAAS7hB,WAAWkhB,EAAGY,gBACvBC,UAAWb,EAAGc,SAAShuB,MACvBkK,aAlBF,CAmBC,IAEF+D,QAAQjO,QAAqF9E,IAAV8E,GAAoB,GACzG,CAACyrB,EAAcxd,EAAQzU,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,UAElC,OAAOnB,EAAAA,EAAAA,UAAQ,KACN,CACL+tB,aAAcwB,EACdnxB,UACA4vB,WACA7vB,WAED,CAACoxB,EAAsBnxB,EAAS4vB,EAAU7vB,GAC/C,CCjFqDoyB,CACjDhyB,EACAmT,EAAMgY,GACNnZ,EACAzU,EACA6V,GAGI6e,EAAsBpyB,KAAaD,EACnCsyB,GAAUzwB,EAAAA,EAAAA,UAAQ,KACtB,MAAM0wB,GAAeC,EAAAA,GAAAA,MACrB,MAAO,CACLD,EAAaE,UAAUC,GAAQA,GAAK,CAClCnH,GAAI,YACJoH,OAAQ,KACN,SAACC,GAAAA,EAAIA,CAACC,SAAUpE,GAA2BP,GAAsBC,WAAY2E,eAAe,a,UAC1F,UAAC5V,GAAAA,GAAGA,CAACe,IAAI,M,UACNqR,EAAUC,SAAWC,GAAAA,GAAoBrB,YAAa,SAAC4E,GAAAA,GAAWA,CAACvF,UAAWkC,GAAAA,GAAeC,QAC9F,SAACqD,GAAAA,GAAcA,CAACC,QAAS3D,EAAUC,SAAWC,GAAAA,GAAoBrB,U,UAChE,SAAC3mB,EAAAA,GAAKA,C,SAAC,gBAKf0rB,KAAOR,I,IAOiBA,EAAAA,EACcA,EAAAA,E,OAPpC,SAACE,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBC,WAC3D2E,eAAe,a,UAEf,SAACK,GAAAA,GAAaA,CACZxe,UAAWvW,OAAmB,QAAZs0B,GAAAA,EAAAA,GAAIU,gBAAJV,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAiB/d,WACnCzX,MAAMwgB,EAAAA,GAAAA,GAAgBnK,EAAMgY,GAAgB,QAAZmH,GAAAA,EAAAA,GAAIU,gBAAJV,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAiBd,YAAajU,GAAAA,EAAiB0V,gB,IAKvFd,EAAaE,UACVC,IACC,IAAI/3B,EAAO+nB,E,IAKoB/kB,EAJ/B,GAAI+0B,EAAIrkB,OAASsf,GAAyBC,IACxCjzB,EAAQ,UACR+nB,GACE,UAAC4Q,OAAAA,C,WACC,SAAC9rB,EAAAA,GAAKA,C,SAAC,QAAW,OAAO7J,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,eAGhC,GAAIia,EAAIrkB,OAASsf,GAAyBE,KAAM,C,IAIvBlwB,EAH9BhD,EAAQ,WACR+nB,GACE,UAAC4Q,OAAAA,C,WACC,SAAC9rB,EAAAA,GAAKA,C,SAAC,SAAY,OAAO7J,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,SAGxC,MACE9d,EAAQ+3B,EAAIrkB,OAASsf,GAAyBI,KAAO,UAAY,WACjErL,EAAOgQ,EAAIrkB,OAASsf,GAAyBI,MAAO,SAACvmB,EAAAA,GAAKA,C,SAAC,SAAc,SAACA,EAAAA,GAAKA,C,SAAC,WAElF,OAAO,SAACX,EAAAA,GAAWuX,YAAW,CAACzjB,MAAOA,E,SAAQ+nB,G,GAEhD,CACE6I,GAAI,YACJoH,OAAQ,KACN,SAACC,GAAAA,EAAIA,CAACC,SAAUpE,GAA2BP,GAAsBE,MAAO0E,eAAe,a,UACrF,UAACS,GAAAA,GAAeA,CAACC,UAAWrE,EAAmBnS,QAAS,IAAMoS,I,WAC5D,SAACqE,GAAAA,EAAMA,CACLC,WAAY16B,OAAO26B,OAAOhG,IAC1BiG,aAAcxhB,EACdid,WAAYA,EACZhQ,OAAQ8P,EACRC,kBAAmBA,KAErB,SAACvoB,EAAAA,GAAWwX,cAAa,C,UACvB,SAAC7W,EAAAA,GAAKA,C,SAAC,gBAKf0rB,KAAOW,I,IAMFA,EAAAA,E,OALH,SAACjB,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBE,MAC3D0E,eAAe,a,SAEmB,QAAjCe,GAAAA,EAAAA,GAAyBT,gBAAzBS,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,I,IAKTtB,EAAaE,UAAUC,GAAQA,EAAIR,WAAW,CAC5C3G,GAAI,aACJoH,OAAQ,KACN,SAACC,GAAAA,EAAIA,CAACC,SAAUpE,GAA2BP,GAAsBI,WAAYwE,eAAe,WAAWgB,MAAI,E,UACzG,SAACjtB,EAAAA,GAAWwX,cAAa,C,SAAE2Q,MAG/BkE,KAAOa,I,IAO+CA,EAAAA,E,OANpD,SAACnB,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBI,WAC3DwE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWuX,YAAW,C,SAAE8Q,EAAgB,CAAErd,MAAoB,QAAbkiB,GAAAA,EAAAA,GAAKX,gBAALW,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,Q,IAIxDxB,EAAaE,UAAUC,GAAShE,GAAkBgE,EAAItxB,KAAKzD,OAAQA,GAAU+0B,EAAIX,QAAUW,EAAIV,SAAU,CACvGzG,GAAI,eACJoH,OAAQ,K,IAOuBh1B,E,OAN7B,SAACi1B,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBK,aAC3DuE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWwX,cAAa,C,SAAE1gB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ8a,U,EAGvCya,KAAOc,I,IAQ+BA,EAAAA,E,OAPpC,SAACpB,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBK,aAC3DuE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWuX,YAAW,C,SACpBpN,EAAa,CAAE2I,MAAOza,KAAK+0B,KAA6B,QAAzBD,GAAAA,EAAAA,GAAiBZ,gBAAjBY,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,KAAiC,GAAI3lB,KAAMyD,EAAAA,GAAWoiB,a,IAK9F3B,EAAaE,UAAUC,GAAShE,GAAkBgE,EAAItxB,KAAKzD,OAAQA,GAAU+0B,EAAIV,QAAUU,EAAIX,SAAU,CACvGxG,GAAI,gBACJoH,OAAQ,K,IAOuB/0B,E,OAN7B,SAACg1B,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBM,cAC3DsE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWwX,cAAa,C,SAAEzgB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,U,EAGvCya,KAAOiB,I,IAQ+BA,EAAAA,E,OAPpC,SAACvB,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBM,cAC3DsE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWuX,YAAW,C,SACpBpN,EAAa,CAAE2I,MAAOza,KAAK+0B,KAA8B,QAA1BE,GAAAA,EAAAA,GAAkBf,gBAAlBe,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,KAAkC,GAAI9lB,KAAMyD,EAAAA,GAAWoiB,a,IAK/F3B,EAAaE,UAAUC,GAAQA,EAAIZ,OAAO,CACxCvG,GAAI,gBACJoH,OAAQ,KACN,SAACC,GAAAA,EAAIA,CACHC,SAAUpE,GAA2BP,GAAsBG,cAC3DyE,eAAe,WACfgB,MAAI,E,UAEJ,SAACjtB,EAAAA,GAAWwX,cAAa,C,UACvB,SAAC7W,EAAAA,GAAKA,C,SAAC,eAIb0rB,KAAOkB,I,IAOiDA,EAAAA,EACVA,EAAAA,E,OAP5C,SAACxB,GAAAA,EAAIA,CACH3yB,QAASoyB,EACTQ,SAAUpE,GAA2BP,GAAsBG,cAC3DyE,eAAe,WACfgB,MAAI,E,UAEJ,SAAC/V,GAAAA,CAAmBC,MAAMN,EAAAA,GAAAA,GAAgBnK,EAAMgY,GAAyB,QAArB6I,GAAAA,EAAAA,GAAahB,gBAAbgB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAA2BzW,GAAAA,EAAiBE,S,UAC9F,SAAChX,EAAAA,GAAWuX,YAAW,C,UAAEE,EAAAA,GAAAA,IAAoC,QAArB8V,GAAAA,EAAAA,GAAahB,gBAAbgB,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAA2B,Q,IAK5E,GACA,CACDpF,EACAzb,EAAMgY,GACNnZ,EACA+c,EACAD,EACAle,EACAqhB,EACA/C,EAAUC,OACV5xB,EACAC,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ6a,SAGV,OACE,SAACwV,GAAAA,CAAa/W,cAAY,kC,UACxB,SAACmd,GAAAA,EAAKA,CACJ/B,QAASA,EACT5yB,KAAMkwB,EACN3vB,QAASA,EACTD,MAAOA,EACP6vB,SAAUA,EACVyE,UAAW,OAInB,C,IC5RA,I,SAAKC,GAAAA,EACHC,aAAe,eADZD,EAEHE,UAAY,W,EAFTF,KAAAA,GAAAA,CAAAA,IAKL,MAAMG,IAAc5uB,EAAAA,EAAAA,SAAOe,EAAAA,GAAWI,gBAAc,Y,6JAAsB;WAC/D,EAAGb,QAAOuuB,aAAcA,GAAUvuB,EAAMmV;IAC/C,EAAGqZ,eAAgBA,GAAYtZ,EAAAA;;EAI5B,SAASuZ,IAAoB,YAClCz0B,EAAW,OACXzC,EAAM,OACNC,EAAM,gBACN4V,I,IAoCgBshB,EA7BhB,MAAOC,EAAaC,IAAkBn1B,EAAAA,EAAAA,UAA+B00B,GAAqBC,cACpFjhB,GAAQsb,EAAAA,EAAAA,KAAyBC,EAAAA,GAAAA,MAAwB,CAAEC,oBAAoB,KAC/E,QAAE7H,IAAY5lB,EAAAA,GAAAA,MACd,UAAE6lB,IAAcE,EAAAA,GAAAA,GAAuBH,GAAW,GAAI,CAAC3T,EAAMgY,KAC7DuJ,GAAsBjzB,EAAAA,EAAAA,UAC1B,K,IACEslB,E,OAAAA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAW/U,QACRhH,GACC/K,EAAAA,KAAKC,WAAW8K,EAAShK,KAAKzD,OAAQyN,EAAShK,KAAKxD,OAAQwN,EAAShK,KAAKwB,KAAKjC,gBAC/EP,EAAYO,kBACX,EAAE,GACT,CAACP,EAAa+mB,IAEhB,OACE,UAAC9G,EAAAA,GAAMA,CAACpC,IAAI,K,WACV,UAACf,GAAAA,GAAGA,CAACe,IAAI,O,WACP,SAACyW,GAAAA,CACCC,OAAQI,IAAgBR,GAAqBC,aAC7CxX,QAAS,IAAMgY,EAAeT,GAAqBC,cACnDI,UAAWE,EAAoBz7B,O,UAE/B,SAACmO,EAAAA,GAAKA,C,SAAC,mBAERqiB,QAAQiL,EAAoBz7B,UAC3B,UAACq7B,GAAAA,CACCC,OAAQI,IAAgBR,GAAqBE,UAC7CzX,QAAS,IAAMgY,EAAeT,GAAqBE,W,WAEnD,SAACjtB,EAAAA,GAAKA,C,SAAC,cACN,KAAKstB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAqBz7B,gBAIhC07B,IAAgBR,GAAqBC,cACpC,SAAC5F,GAA4BA,CAC3BxuB,YAAaA,EACbzC,OAAQA,EACRC,OAAQA,EACR4V,gBAAiBA,KAGnB,SAACka,GAAyBA,CAACvG,UAAW2N,MAI9C,C,uCCvCA,SAASG,GAAiB3f,GACxB,IAAKA,EACH,OAEF,MAAM4f,GAAc,IAAIC,MAAOC,UACzBC,GAAUH,EAAcr0B,KAAG,OAAS,IACpCy0B,GAAcJ,EAAcr0B,KAAG,OAAS,IAExC00B,EAAYjgB,EACflD,QAAQH,I,IAAiCA,E,YAAqB5S,KAArB4S,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO0C,YAA2B1C,EAAM0C,WAAa0gB,CAAM,IACpGG,QAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIvxB,OAAO,GACnCwxB,EAAYrgB,EACflD,QACEH,I,IACCA,E,YAAqB5S,KAArB4S,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAO0C,YAA2B1C,EAAM0C,WAAa2gB,GAAcrjB,EAAM0C,UAAY0gB,CAAM,IAE9FG,QAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIvxB,OAAO,GACzC,OAASoxB,EAAYI,GAAaA,EAAa,GACjD,C,2BC3DO,MAAMC,GAA0BtwB,I,IAChBA,EACAA,EADrB,MAAMuwB,EAAevwB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAO8a,OAChCqd,EAAexwB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAO6a,OAChCsd,EAAYtkB,EAAAA,CAAC,0BACnB,OAAKokB,GAAiBC,EAIf,GAAGD,KAAgBC,MAAiBC,IAHlCA,CAG6C,E,0BCexD,MAAM5vB,IAAcL,EAAAA,EAAAA,SAAOoX,GAAAA,IAAGA,WAAAA,C,sIAAC;;;;;;;kCAOG,EAAG9W,WAAYA,EAAMC,WAAWC;;;kCAGhC,EAAGF,WAAYA,EAAMC,WAAWma;;;;;kCAKhC,EAAGpa,WAAYA,EAAMC,WAAW2vB;;;EAK5DC,IAAanwB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,qIAAC;;;;;;uBAMVE,GAAAA,GAAYC;;;;EAM7B0V,GAAKpwB,EAAAA,QAAOqwB,GAAE,Y,6HAAA;wBACI,EAAG/vB,WAAYA,EAAM6T;;EAIvCmc,IAActwB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,sIAAC;;;;uBAIXE,GAAAA,GAAYC;;;;;;;;EAU7B6V,IAAsBvwB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,8IAAC;;;;uBAInBE,GAAAA,GAAYC,yBAAyBD,GAAAA,GAAY3N;;;;;;uBAMjD2N,GAAAA,GAAY3N;;;EAK7B0jB,IAAqBxwB,EAAAA,EAAAA,SAAOgd,GAAAA,IAAIA,WAAAA,C,6IAAC;;;;;EAOjCyT,IAAiBzwB,EAAAA,EAAAA,SAAOua,EAAAA,IAAMA,WAAAA,C,yIAAC;;;EAWtB,SAASmW,K,IAG0Bp2B,EAAkCq2B,EAE1BA,EACjBC,EAAsBA,EAyBzDD,EAAkBnxB,EAAyBA,EAgB9BmxB,EACAnxB,EACMA,EACAA,EACDA,EACAA,EACFA,EACAA,EASKmxB,EAOAA,EAIAnxB,EACQA,EASZmxB,EAQQnxB,EAKRmxB,EAGAnxB,EAG4DmxB,EAQxDA,EAKA94B,EACA84B,EAKA74B,EACA64B,EA1HzB,MAAM,YAAEr2B,IAAgBu2B,EAAAA,GAAAA,MAClBF,GAAY5H,EAAAA,EAAAA,KAAyBC,EAAAA,GAAAA,QACnCpvB,KAAM4F,EAAQ,QAAErF,GF3CnB,SACLG,EACA5D,G,IAsDawzB,EAAgBD,EAhD7B,MAAME,GAAmBC,EAAAA,GAAAA,IAAeC,GAAAA,GAAaC,YAEnDnwB,QAASowB,EACTrwB,MAAOswB,EACP5wB,KAAMqwB,IACJ6G,EAAAA,EAAAA,KAAe,CACjBl2B,UAAW,CAAE6S,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAAS5Y,QAAS5C,GACrFy2B,YAAa,SAGb52B,QAASywB,EACT1wB,MAAO2wB,EACPjxB,KAAMswB,IACJ8G,EAAAA,EAAAA,KAAe,CACjBp2B,UAAW,CAAE6S,OAAOoI,EAAAA,GAAAA,IAAsB,CAAEnf,UAASof,cAAc,IAAS5Y,QAAS5C,GACrFD,MAAO3D,GAAYA,IAAYN,EAAAA,QAAQC,UAAY8zB,EACnD4G,YAAa,QAGf,OAAOh1B,EAAAA,EAAAA,UAAQ,K,IAIAkuB,EAAkBC,EACfD,EAAAA,EAUK3uB,EAAAA,EAAAA,EAAAA,EAAAA,EAGAA,EAAAA,EAAAA,EAAAA,EAAAA,EAECA,EACuBA,EAC7BA,EACMA,EAtBtB,MAAM21B,EAAWlN,QAAQyG,GAAYK,IAAYn0B,IAAYN,EAAAA,QAAQC,SAAW8zB,IAC1E+G,EAAanN,QAAQwG,GAAcK,IAAcl0B,IAAYN,EAAAA,QAAQC,SAAW8zB,IAEhF7uB,GAAO2uB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQxb,UAAUyb,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ1b,cAAUjV,EAC3CmQ,GAAUugB,QAAAA,EAAAA,SAAAA,IAAAA,GAAc,QAAdA,EAAAA,EAAQxb,cAARwb,IAAAA,OAAAA,EAAAA,EAAgBvgB,UAAWynB,GAAAA,GAE3C,MAAO,CACLv3B,KAAM0B,EACF,CACE4B,QAAS5B,EAAK4B,QACdk0B,QAAS91B,EAAK81B,QACd1jB,gBAAiBpS,EAAKoS,gBACtB7V,OAAQyD,EAAKzD,OACb6mB,UAAWpjB,EAAK+1B,aAChB1iB,YAAwB,QAAXrT,EAAAA,EAAKzD,cAALyD,IAAAA,GAAoB,QAApBA,EAAAA,EAAag2B,eAAbh2B,IAAAA,GAA6B,QAA7BA,EAAAA,EAAsBi2B,eAAtBj2B,IAAAA,GAAkC,QAAlCA,EAAAA,EAAgC,UAAhCA,IAAAA,GAAyC,QAAzCA,EAAAA,EAAoCyQ,aAApCzQ,IAAAA,OAAAA,EAAAA,EAA2C+C,MACxDvG,OAAQwD,EAAKxD,OACb6mB,UAAWrjB,EAAKk2B,aAChB5iB,YAAwB,QAAXtT,EAAAA,EAAKxD,cAALwD,IAAAA,GAAoB,QAApBA,EAAAA,EAAag2B,eAAbh2B,IAAAA,GAA6B,QAA7BA,EAAAA,EAAsBi2B,eAAtBj2B,IAAAA,GAAkC,QAAlCA,EAAAA,EAAgC,UAAhCA,IAAAA,GAAyC,QAAzCA,EAAAA,EAAoCyQ,aAApCzQ,IAAAA,OAAAA,EAAAA,EAA2C+C,MACxDqL,UACA0V,aAA4B,QAAd9jB,EAAAA,EAAKm0B,iBAALn0B,IAAAA,OAAAA,EAAAA,EAAgB+C,MAC9BghB,mBAAoB8P,GAAsC,QAArB7zB,EAAAA,EAAKkU,wBAALlU,IAAAA,OAAAA,EAAAA,EAAuBjE,UAC5D0nB,OAA2B,QAAnBzjB,EAAAA,EAAKm2B,sBAALn2B,IAAAA,OAAAA,EAAAA,EAAqB+C,MAC7B8gB,aAAiD,QAAnC7jB,EAAAA,EAAKo2B,sCAALp2B,IAAAA,OAAAA,EAAAA,EAAqC+C,YAErD9E,EACJW,MAAO+2B,EACP92B,QAAS+2B,EACV,GACA,CAACx6B,EAASwzB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQ1b,OAAQyb,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQxb,OAAQoc,EAASL,EAASI,EAAWL,EAAWJ,GACvF,CEdsCwH,EAAYr3B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAaO,gBAAiB,GAAI81B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,KACtFxa,EAAYyL,IAAkBsC,EAAAA,EAAAA,aAAYzV,IAAOA,IAAG,GACrDqtB,EAXR,SAA+BpxB,EAAqB9I,G,IAC3C8I,EAAoBA,EACDA,EAAwCA,EADlE,OAAOA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,UAAU2H,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,SAAUpB,EAC3C,EAACunB,EAAAA,EAAAA,IAAYvnB,EAAS8I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,SAASomB,EAAAA,EAAAA,IAAYvnB,EAAS8I,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,SACxE,MAACyB,OAAWA,EAClB,CAO0Bq4B,CAAsBpyB,EAAUmxB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,KAC5D5tB,EAAQC,GAAUmT,EAAa,CAAC2lB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkB,GAAIA,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAkB,IAAMA,GAE/E,SAAEiB,EAAQ,SAAExc,EAAQ,QAAE8K,IAAYjM,EAAAA,EAAAA,YAClC4d,GAASC,EAAAA,GAAAA,GAASl6B,IAAUkY,EAAAA,EAAAA,IAAclY,GAAS,CACvDm6B,gBAAiB3c,EACjBwc,aAEII,GAASF,EAAAA,GAAAA,GAASj6B,IAAUiY,EAAAA,EAAAA,IAAcjY,GAAS,CACvDk6B,gBAAiB3c,EACjBwc,aAGIK,IAAiB53B,IAAgBq2B,KAAchV,EAAAA,GAAAA,IAAUrhB,GACzD63B,IAAiBh4B,IAAYqF,GAAa0yB,GAE1CE,IAAoBr2B,EAAAA,EAAAA,UAAQ,K,IACXyD,EACAA,EAEHmxB,EAHlB,MAEMra,EAAW,GAFI9W,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAO8a,UACjBnT,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAO6a,SAEhCiD,GAAY+a,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAW0B,QAAS,WACtC,MAAO,CACLpT,MAAO3I,EACP5e,IAAK46B,OAAOC,SAASra,KACrBsa,YAAa,QAAQlc,QAAeV,+FACrC,GACA,CAAC+a,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAW0B,MAAO7yB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAO8a,OAAQnT,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAO6a,SAC1D8f,IAAWC,EAAAA,GAAAA,GAAmBN,IAEpC,OAAID,IAAqB,SAAC1xB,GAAAA,QAAQA,CAAAA,IAEhC,UAACkyB,GAAAA,GAAaA,CAAC96B,OAAQi6B,IAAW3R,EAAU2R,OAASv4B,EAAWzB,OAAQm6B,IAAW9R,EAAU8R,OAAS14B,E,WACpG,UAACq5B,GAAAA,OAAMA,C,WACL,SAAC3T,QAAAA,C,SAAO6Q,GAAuBtwB,KAC9BizB,GAASh7B,KAAI,CAACo7B,EAAKl0B,KAClB,SAACm0B,OAAAA,IAAqBD,GAAXl0B,SAGf,SAAC0C,EAAAA,GAAKA,CACJC,KAAMC,EAAAA,GAAkBwxB,kBACxBC,WAAY,CACV14B,cACA5D,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpB/b,QAASlK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkK,QACnBupB,cAAezzB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAOqF,QAChCg2B,cAAe1zB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAOoF,QAChC6yB,aAAcvwB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAO8a,OAC/Bqd,aAAcxwB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAO6a,OAC/BwgB,WAAY3zB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU3H,OAAOoc,KAC7Bmf,WAAY5zB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAU1H,OAAOmc,MAE/BxS,qBAAsBtH,E,UAEtB,UAACkG,GAAAA,C,WACC,UAAC8vB,GAAAA,C,WACC,UAAC5V,EAAAA,GAAMA,CAACpC,IAAI,O,WACV,UAACoC,EAAAA,GAAMA,C,WACL,SAAC5E,GAAqBA,CACpBjf,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpBnrB,YAAaA,EACbzC,OAAQA,EACRC,OAAQA,EACRqC,QAASA,KAEX,SAACigB,GAAiBA,CAChB1jB,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpBnrB,YAAaA,EACbzC,OAAQA,EACRC,OAAQA,EACR4R,QAASlK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkK,QACnBgE,gBAAiBlO,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkO,gBAC3BgJ,eAAgBA,EAChBvc,QAASA,QAGb,SAAC2V,GAAYA,CACXtQ,SAAUA,EACVrF,QAASA,EACT8Q,WAAYA,EACZwC,MAAOkjB,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAW0C,aAAa5lB,YAGnC,SAAC2iB,GAAAA,CAAAA,IACD,SAACrB,GAAmBA,CAClBz0B,YAAaA,EACbzC,OAAQA,EACRC,OAAQA,EACR4V,gBAAiBlO,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkO,sBAG/B,UAAC4iB,GAAAA,C,WACC,SAACrP,GAAuBA,CACtBvqB,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpB5tB,OAAQA,EACRC,OAAQA,EACR4R,QAASlK,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAUkK,QACnBvP,QAASA,KAEX,SAACmkB,GAAgBA,CAAC9e,SAAUA,EAAUyL,WAAYA,EAAYvU,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GAAItrB,QAASA,KAC/F,UAACo2B,GAAAA,C,WACC,SAACC,GAAkBA,C,UACjB,SAAC9uB,EAAAA,GAAKA,C,SAAC,aAET,UAAC+uB,GAAAA,C,WACC,SAACrV,GAAeA,CACdle,QAAS5C,EACT5D,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpB7mB,OAAQ,CAAC/G,EAAQC,GACjBqC,QAASA,KAEX,SAACihB,GAAeA,CACdle,QAASrF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQqF,QACjBxG,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpB7mB,OAAQ,CAAC/G,GACTsC,QAASA,KAEX,SAACihB,GAAeA,CACdle,QAASpF,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAQoF,QACjBxG,QAASi6B,QAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAWlL,GACpB7mB,OAAQ,CAAC9G,GACTqC,QAASA,oBAS3B,C","sources":["../../../node_modules/react-feather/dist/icons/plus.js","graphql/thegraph/apollo.ts","utils/computeSurroundingTicks.ts","hooks/usePoolTickData.ts","hooks/usePools.ts","pages/NotFound/index.tsx","components/Charts/LiquidityChart/renderer.tsx","components/Charts/LiquidityChart/liquidity-bar-series.tsx","components/Charts/LiquidityChart/index.tsx","components/Pools/PoolDetails/ChartSection/index.tsx","components/Pools/PoolDetails/ChartSection/hooks.ts","components/Pools/PoolDetails/shared.ts","components/Pools/PoolDetails/PoolDetailsHeader.tsx","components/Pools/PoolDetails/PoolDetailsLink.tsx","components/Pools/PoolDetails/PoolDetailsStats.tsx","components/Pools/PoolDetails/PoolDetailsStatsButtons.tsx","components/Pools/PoolDetails/icons.tsx","components/Pools/PoolDetails/PoolDetailsPositionsTable.tsx","graphql/data/pools/usePoolTransactions.ts","components/Pools/PoolDetails/PoolDetailsTransactionsTable.tsx","components/Pools/PoolDetails/PoolDetailsTable.tsx","graphql/data/pools/usePoolData.ts","pages/PoolDetails/utils.ts","pages/PoolDetails/index.tsx"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Plus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"12\",y1:\"5\",x2:\"12\",y2:\"19\"}),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Plus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Plus.displayName=\"Plus\";export default Plus;","import { ApolloClient, ApolloLink, concat, HttpLink, InMemoryCache, NormalizedCacheObject } from '@apollo/client'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { CHAIN_SUBGRAPH_URL, isSupportedChainId } from 'constants/chains'\n\nimport store from '../../state/index'\n\nconst httpLink = new HttpLink({ uri: CHAIN_SUBGRAPH_URL[ChainId.MAINNET] })\n\n// This middleware will allow us to dynamically update the uri for the requests based off chainId\n// For more information: https://www.apollographql.com/docs/react/networking/advanced-http-networking/\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  const chainId = store.getState().application.chainId\n\n  operation.setContext(() => ({\n    uri:\n      isSupportedChainId(chainId) && CHAIN_SUBGRAPH_URL[chainId]\n        ? CHAIN_SUBGRAPH_URL[chainId]\n        : CHAIN_SUBGRAPH_URL[ChainId.MAINNET],\n  }))\n\n  return forward(operation)\n})\n\nexport const apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n})\n\nexport const chainToApolloClient: Record<number, ApolloClient<NormalizedCacheObject>> = Object.fromEntries(\n  Object.entries(CHAIN_SUBGRAPH_URL).map(([chainId, url]) => [\n    chainId,\n    new ApolloClient({\n      cache: new InMemoryCache(),\n      uri: url,\n    }),\n  ])\n)\n","import { Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\nimport { TickProcessed } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\n\nimport { Ticks } from '../graphql/thegraph/AllV3TicksQuery'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Computes the numSurroundingTicks above or below the active tick.\nexport default function computeSurroundingTicks(\n  token0: Token,\n  token1: Token,\n  activeTickProcessed: TickProcessed,\n  sortedTickData: Ticks,\n  pivot: number,\n  ascending: boolean\n): TickProcessed[] {\n  let previousTickProcessed: TickProcessed = {\n    ...activeTickProcessed,\n  }\n  // Iterate outwards (either up or down depending on direction) from the active tick,\n  // building active liquidity for every tick.\n  let processedTicks: TickProcessed[] = []\n  for (let i = pivot + (ascending ? 1 : -1); ascending ? i < sortedTickData.length : i >= 0; ascending ? i++ : i--) {\n    const tick = Number(sortedTickData[i].tick)\n    const sdkPrice = tickToPrice(token0, token1, tick)\n    const currentTickProcessed: TickProcessed = {\n      liquidityActive: previousTickProcessed.liquidityActive,\n      tick,\n      liquidityNet: JSBI.BigInt(sortedTickData[i].liquidityNet),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    // Update the active liquidity.\n    // If we are iterating ascending and we found an initialized tick we immediately apply\n    // it to the current processed tick we are building.\n    // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\n    if (ascending) {\n      currentTickProcessed.liquidityActive = JSBI.add(\n        previousTickProcessed.liquidityActive,\n        JSBI.BigInt(sortedTickData[i].liquidityNet)\n      )\n    } else if (!ascending && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\n      // We are iterating descending, so look at the previous tick and apply any net liquidity.\n      currentTickProcessed.liquidityActive = JSBI.subtract(\n        previousTickProcessed.liquidityActive,\n        previousTickProcessed.liquidityNet\n      )\n    }\n\n    processedTicks.push(currentTickProcessed)\n    previousTickProcessed = currentTickProcessed\n  }\n\n  if (!ascending) {\n    processedTicks = processedTicks.reverse()\n  }\n\n  return processedTicks\n}\n","import { ChainId, Currency, Price, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, tickToPrice } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { TickData, Ticks } from 'graphql/thegraph/AllV3TicksQuery'\nimport { useAllV3TicksQuery } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport JSBI from 'jsbi'\nimport ms from 'ms'\nimport { useEffect, useMemo, useState } from 'react'\nimport computeSurroundingTicks from 'utils/computeSurroundingTicks'\n\nimport { chainToApolloClient } from 'graphql/thegraph/apollo'\nimport { PoolState, usePoolMultichain } from './usePools'\n\nconst PRICE_FIXED_DIGITS = 8\n\n// Tick with fields parsed to JSBIs, and active liquidity computed.\nexport interface TickProcessed {\n  tick: number\n  liquidityActive: JSBI\n  liquidityNet: JSBI\n  price0: string\n  sdkPrice: Price<Token, Token>\n}\n\nconst getActiveTick = (tickCurrent: number | undefined, feeAmount: FeeAmount | undefined) =>\n  tickCurrent && feeAmount ? Math.floor(tickCurrent / TICK_SPACINGS[feeAmount]) * TICK_SPACINGS[feeAmount] : undefined\n\nfunction useTicksFromSubgraph(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  skip = 0,\n  chainId: ChainId\n) {\n  const apolloClient = chainToApolloClient[chainId]\n  const poolAddress =\n    currencyA && currencyB && feeAmount\n      ? Pool.getAddress(\n          currencyA?.wrapped,\n          currencyB?.wrapped,\n          feeAmount,\n          undefined,\n          chainId ? V3_CORE_FACTORY_ADDRESSES[chainId] : undefined\n        )\n      : undefined\n\n  return useAllV3TicksQuery({\n    variables: { poolAddress: poolAddress?.toLowerCase(), skip },\n    skip: !poolAddress,\n    pollInterval: ms(`30s`),\n    client: apolloClient,\n  })\n}\n\nconst MAX_THE_GRAPH_TICK_FETCH_VALUE = 1000\n// Fetches all ticks for a given pool\nfunction useAllV3Ticks(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId: ChainId\n): {\n  isLoading: boolean\n  error: unknown\n  ticks?: TickData[]\n} {\n  const [skipNumber, setSkipNumber] = useState(0)\n  const [subgraphTickData, setSubgraphTickData] = useState<Ticks>([])\n  const { data, error, loading: isLoading } = useTicksFromSubgraph(currencyA, currencyB, feeAmount, skipNumber, chainId)\n\n  useEffect(() => {\n    if (data?.ticks.length) {\n      setSubgraphTickData((tickData) => [...tickData, ...data.ticks])\n      if (data.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE) {\n        setSkipNumber((skipNumber) => skipNumber + MAX_THE_GRAPH_TICK_FETCH_VALUE)\n      }\n    }\n  }, [data?.ticks])\n\n  return {\n    isLoading: isLoading || data?.ticks.length === MAX_THE_GRAPH_TICK_FETCH_VALUE,\n    error,\n    ticks: subgraphTickData,\n  }\n}\n\nexport function usePoolActiveLiquidity(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  chainId?: ChainId\n): {\n  isLoading: boolean\n  error: any\n  currentTick?: number\n  activeTick?: number\n  liquidity?: JSBI\n  sqrtPriceX96?: JSBI\n  data?: TickProcessed[]\n} {\n  const defaultChainId = useWeb3React().chainId ?? ChainId.MAINNET\n  const pool = usePoolMultichain(currencyA?.wrapped, currencyB?.wrapped, feeAmount, chainId ?? defaultChainId)\n  const liquidity = pool[1]?.liquidity\n  const sqrtPriceX96 = pool[1]?.sqrtRatioX96\n\n  const currentTick = pool[1]?.tickCurrent\n  // Find nearest valid tick for pool in case tick is not initialized.\n  const activeTick = useMemo(() => getActiveTick(currentTick, feeAmount), [currentTick, feeAmount])\n\n  const { isLoading, error, ticks } = useAllV3Ticks(currencyA, currencyB, feeAmount, chainId ?? defaultChainId)\n\n  return useMemo(() => {\n    if (\n      !currencyA ||\n      !currencyB ||\n      activeTick === undefined ||\n      pool[0] !== PoolState.EXISTS ||\n      !ticks ||\n      ticks.length === 0 ||\n      isLoading\n    ) {\n      return {\n        isLoading: isLoading || pool[0] === PoolState.LOADING,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const token0 = currencyA?.wrapped\n    const token1 = currencyB?.wrapped\n\n    // find where the active tick would be to partition the array\n    // if the active tick is initialized, the pivot will be an element\n    // if not, take the previous tick as pivot\n    const pivot = ticks.findIndex(({ tick }) => tick > activeTick) - 1\n\n    if (pivot < 0) {\n      // consider setting a local error\n      console.error('TickData pivot not found')\n      return {\n        isLoading,\n        error,\n        activeTick,\n        data: undefined,\n      }\n    }\n\n    const sdkPrice = tickToPrice(token0, token1, activeTick)\n    const activeTickProcessed: TickProcessed = {\n      liquidityActive: JSBI.BigInt(pool[1]?.liquidity ?? 0),\n      tick: activeTick,\n      liquidityNet: Number(ticks[pivot].tick) === activeTick ? JSBI.BigInt(ticks[pivot].liquidityNet) : JSBI.BigInt(0),\n      price0: sdkPrice.toFixed(PRICE_FIXED_DIGITS),\n      sdkPrice,\n    }\n\n    const subsequentTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, true)\n\n    const previousTicks = computeSurroundingTicks(token0, token1, activeTickProcessed, ticks, pivot, false)\n\n    const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\n\n    return {\n      isLoading,\n      error,\n      currentTick,\n      activeTick,\n      liquidity,\n      sqrtPriceX96,\n      data: ticksProcessed,\n    }\n  }, [currencyA, currencyB, activeTick, pool, ticks, isLoading, error, currentTick, liquidity, sqrtPriceX96])\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, ChainId, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { FeeAmount, Pool, computePoolAddress } from '@uniswap/v3-sdk'\nimport { useContractMultichain } from 'components/AccountDrawer/MiniPortfolio/Pools/hooks'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { IUniswapV3PoolStateInterface } from 'uniswap/src/abis/types/v3/IUniswapV3PoolState'\nimport { UniswapV3Pool } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { useChainId } from 'wagmi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const chainId = useChainId()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n\nexport function usePoolMultichain(\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  fee: number | undefined,\n  chainId: ChainId\n): [PoolState, Pool | null] {\n  const poolData = useRef<[PoolState, Pool | null]>([PoolState.LOADING, null])\n  const poolAddress =\n    tokenA && tokenB && fee\n      ? PoolCache.getPoolAddress(V3_CORE_FACTORY_ADDRESSES[chainId], tokenA, tokenB, fee)\n      : undefined\n\n  const contractMap = useMemo(() => (poolAddress ? { [chainId]: poolAddress } : {}), [chainId, poolAddress])\n  const contract = useContractMultichain<UniswapV3Pool>(contractMap, IUniswapV3PoolStateJSON.abi)[chainId]\n\n  useEffect(() => {\n    async function getPool() {\n      try {\n        if (!tokenA || !tokenB || !fee || !poolAddress || !contract) {\n          poolData.current = [PoolState.INVALID, null]\n          return\n        }\n\n        const slot0 = await contract.slot0()\n        const liquidity = await contract.liquidity()\n        poolData.current = [PoolState.NOT_EXISTS, null]\n\n        const pool = new Pool(tokenA, tokenB, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick)\n        poolData.current = [PoolState.EXISTS, pool]\n      } catch (e) {\n        poolData.current = [PoolState.INVALID, null]\n      }\n    }\n    getPool()\n  }, [contract, fee, poolAddress, tokenA, tokenB])\n  return poolData.current\n}\n","import { InterfacePageName } from '@uniswap/analytics-events'\nimport { Trace } from 'analytics'\nimport { SmallButtonPrimary } from 'components/Button'\nimport { useIsMobile } from 'hooks/screenSize'\nimport { Trans } from 'i18n'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useIsDarkMode } from 'theme/components/ThemeToggle'\n\nimport darkImage from '../../assets/images/404-page-dark.png'\nimport lightImage from '../../assets/images/404-page-light.png'\n\nconst Image = styled.img`\n  max-width: 510px;\n  width: 100%;\n  padding: 0 75px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst Header = styled(Container)`\n  gap: 30px;\n`\n\nconst PageWrapper = styled(Container)`\n  flex: 1;\n  justify-content: center;\n  gap: 50px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    justify-content: space-between;\n    padding-top: 64px;\n  }\n`\n\nexport default function NotFound() {\n  const isDarkMode = useIsDarkMode()\n  const isMobile = useIsMobile()\n\n  const Title = isMobile ? ThemedText.LargeHeader : ThemedText.Hero\n  const Paragraph = isMobile ? ThemedText.HeadlineMedium : ThemedText.HeadlineLarge\n\n  return (\n    <PageWrapper>\n      <Trace page={InterfacePageName.NOT_FOUND} shouldLogImpression>\n        <Header>\n          <Container>\n            <Title>404</Title>\n            <Paragraph color=\"neutral2\">\n              <Trans>Page not found!</Trans>\n            </Paragraph>\n          </Container>\n          <Image src={isDarkMode ? darkImage : lightImage} alt=\"Liluni\" />\n        </Header>\n        <SmallButtonPrimary as={Link} to=\"/\">\n          <Trans>Oops, take me back to Swap</Trans>\n        </SmallButtonPrimary>\n      </Trace>\n    </PageWrapper>\n  )\n}\n","import { BitmapCoordinatesRenderingScope, CanvasRenderingTarget2D } from 'fancy-canvas'\nimport {\n  CustomData,\n  CustomSeriesOptions,\n  ICustomSeriesPaneRenderer,\n  PaneRendererCustomData,\n  PriceToCoordinateConverter,\n  Time,\n  UTCTimestamp,\n} from 'lightweight-charts'\nimport { ColumnPosition, calculateColumnPositionsInPlace, positionsBox } from '../VolumeChart/utils'\n\nexport interface LiquidityBarData extends CustomData {\n  time: UTCTimestamp\n  tick: number\n  price0: string\n  price1: string\n  liquidity: number\n  amount0Locked: number\n  amount1Locked: number\n}\n\ninterface LiquidityBarItem {\n  x: number\n  y: number\n  column?: ColumnPosition\n  tick: number\n}\n\nexport interface LiquidityBarProps {\n  tokenAColor: string\n  tokenBColor: string\n  highlightColor: string\n  activeTick?: number\n  activeTickProgress?: number\n}\n\nexport interface LiquidityBarSeriesOptions extends CustomSeriesOptions, LiquidityBarProps {\n  hoveredTick?: number\n}\n\nexport class LiquidityBarSeriesRenderer<TData extends LiquidityBarData> implements ICustomSeriesPaneRenderer {\n  _data: PaneRendererCustomData<Time, TData> | null = null\n  _options: LiquidityBarProps & Partial<LiquidityBarSeriesOptions>\n\n  constructor(props: LiquidityBarProps) {\n    this._options = props\n    this._options.hoveredTick = props.activeTick\n  }\n\n  draw(target: CanvasRenderingTarget2D, priceConverter: PriceToCoordinateConverter): void {\n    target.useBitmapCoordinateSpace((scope) => this._drawImpl(scope, priceConverter))\n  }\n\n  update(data: PaneRendererCustomData<Time, TData>, options: LiquidityBarSeriesOptions): void {\n    this._data = data\n    this._options = { ...this._options, ...options }\n  }\n\n  _drawImpl(renderingScope: BitmapCoordinatesRenderingScope, priceToCoordinate: PriceToCoordinateConverter): void {\n    if (\n      this._data === null ||\n      this._data.bars.length === 0 ||\n      this._data.visibleRange === null ||\n      this._options === null\n    ) {\n      return\n    }\n    const ctx = renderingScope.context\n    const bars: LiquidityBarItem[] = this._data.bars.map((bar) => {\n      return {\n        x: bar.x,\n        y: priceToCoordinate(bar.originalData.liquidity) ?? 0,\n        tick: bar.originalData.tick,\n      }\n    })\n    calculateColumnPositionsInPlace(\n      bars,\n      this._data.barSpacing,\n      renderingScope.horizontalPixelRatio,\n      this._data.visibleRange.from,\n      this._data.visibleRange.to\n    )\n    const zeroY = priceToCoordinate(0) ?? 0\n    ctx.fillStyle = this._options.tokenAColor\n\n    for (let i = this._data.visibleRange.from; i < this._data.visibleRange.to; i++) {\n      const stack = bars[i]\n      const column = stack.column\n      const isCurrentTick = this._options.activeTick === stack.tick\n      const isHoveredTick = this._options.hoveredTick === stack.tick\n\n      if (!column) return\n      const width = Math.min(\n        Math.max(renderingScope.horizontalPixelRatio, column.right - column.left),\n        this._data.barSpacing * renderingScope.horizontalPixelRatio\n      )\n\n      // Create margin to make visual bars thin\n      const margin = 0.3 * width\n      const widthWithMargin = width - margin * 2\n      const totalBox = positionsBox(zeroY, stack.y, renderingScope.verticalPixelRatio)\n\n      if (isHoveredTick) {\n        const highlightOffset = 0.3 * ctx.canvas.height\n        const highlightLength = ctx.canvas.height - highlightOffset\n\n        // Draw background highlight bar\n        ctx.fillStyle = this._options.highlightColor\n        ctx.beginPath()\n        ctx.roundRect(column.left + margin, highlightOffset, widthWithMargin, highlightLength, 8)\n        ctx.fill()\n\n        ctx.globalAlpha = 1\n      } else {\n        // Reduce opacity of non-hovered bars\n        ctx.globalAlpha = 0.4\n      }\n\n      // Select color based on where current bar is in relation to activeTick\n      if (isCurrentTick) {\n        ctx.fillStyle = this._options.tokenBColor\n      } else if (this._options.activeTick === undefined) {\n        ctx.fillStyle = this._options.color ?? 'white'\n      } else if (this._options.activeTick > stack.tick) {\n        ctx.fillStyle = this._options.tokenBColor\n      } else if (this._options.activeTick < stack.tick) {\n        ctx.fillStyle = this._options.tokenAColor\n      }\n\n      // Draw bar\n      ctx.beginPath()\n      ctx.roundRect(column.left + margin, totalBox.position, widthWithMargin, totalBox.length, 8)\n      ctx.fill()\n\n      // Reset opacity\n      ctx.globalAlpha = 1\n\n      if (isCurrentTick && this._options.activeTickProgress) {\n        // Draw token A color on top of token B color for active range\n        ctx.globalCompositeOperation = 'source-atop'\n\n        // Token A color takes up activeTickProgress % of the bar height\n        const activeRangeAdjustedHeight = totalBox.length * this._options.activeTickProgress\n        const activeRangeAdjustedPosition = totalBox.position + (totalBox.length - activeRangeAdjustedHeight)\n\n        ctx.fillStyle = this._options.tokenAColor\n        ctx.beginPath()\n        ctx.fillRect(column.left, activeRangeAdjustedPosition, width, activeRangeAdjustedHeight)\n\n        // Reset composite operation to default\n        ctx.globalCompositeOperation = 'source-over'\n      }\n    }\n  }\n}\n","import {\n  customSeriesDefaultOptions,\n  CustomSeriesPricePlotValues,\n  ICustomSeriesPaneView,\n  PaneRendererCustomData,\n  Time,\n  WhitespaceData,\n} from 'lightweight-charts'\n\nimport { LiquidityBarData, LiquidityBarProps, LiquidityBarSeriesOptions, LiquidityBarSeriesRenderer } from './renderer'\n\nexport class LiquidityBarSeries<TData extends LiquidityBarData>\n  implements ICustomSeriesPaneView<Time, TData, LiquidityBarSeriesOptions>\n{\n  _renderer: LiquidityBarSeriesRenderer<TData>\n  _tokenAColor: string\n  _tokenBColor: string\n  _highlightColor: string\n\n  constructor(props: LiquidityBarProps) {\n    this._tokenAColor = props.tokenAColor\n    this._renderer = new LiquidityBarSeriesRenderer(props)\n    this._tokenBColor = props.tokenBColor\n    this._highlightColor = props.highlightColor\n  }\n\n  priceValueBuilder(plotRow: TData): CustomSeriesPricePlotValues {\n    return [0, plotRow.liquidity]\n  }\n\n  isWhitespace(data: TData | WhitespaceData): data is WhitespaceData {\n    return !(data as TData).liquidity\n  }\n\n  renderer(): LiquidityBarSeriesRenderer<TData> {\n    return this._renderer\n  }\n\n  update(data: PaneRendererCustomData<Time, TData>, options: LiquidityBarSeriesOptions): void {\n    this._renderer.update(data, options)\n  }\n\n  defaultOptions() {\n    return {\n      ...customSeriesDefaultOptions,\n      tokenAColor: this._tokenAColor,\n      tokenBColor: this._tokenBColor,\n      highlightColor: this._highlightColor,\n    }\n  }\n}\n","import { ChartHoverData, ChartModel, ChartModelParams } from 'components/Charts/ChartModel'\nimport { ISeriesApi, UTCTimestamp } from 'lightweight-charts'\n\nimport { ChainId, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, TICK_SPACINGS, TickMath, tickToPrice } from '@uniswap/v3-sdk'\nimport { BigNumber } from 'ethers/lib/ethers'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport JSBI from 'jsbi'\nimport { useEffect, useState } from 'react'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { LiquidityBarSeries } from './liquidity-bar-series'\nimport { LiquidityBarData, LiquidityBarProps, LiquidityBarSeriesOptions } from './renderer'\n\ninterface LiquidityBarChartModelParams extends ChartModelParams<LiquidityBarData>, LiquidityBarProps {}\n\nexport class LiquidityBarChartModel extends ChartModel<LiquidityBarData> {\n  protected series: ISeriesApi<'Custom'>\n  private activeTick?: number\n\n  constructor(chartDiv: HTMLDivElement, params: LiquidityBarChartModelParams) {\n    super(chartDiv, params)\n    this.series = this.api.addCustomSeries(new LiquidityBarSeries(params))\n\n    this.series.setData(this.data)\n\n    this.updateOptions(params)\n    this.fitContent()\n  }\n\n  updateOptions(params: LiquidityBarChartModelParams) {\n    super.updateOptions(params, {\n      localization: {\n        locale: params.locale,\n      },\n      rightPriceScale: {\n        visible: false,\n        borderVisible: false,\n        scaleMargins: {\n          top: 0.35,\n          bottom: 0,\n        },\n        autoScale: true,\n      },\n      timeScale: {\n        visible: false,\n        fixLeftEdge: true,\n        fixRightEdge: true,\n        borderVisible: false,\n      },\n      crosshair: {\n        horzLine: {\n          visible: false,\n          labelVisible: false,\n        },\n        vertLine: {\n          visible: false,\n          labelVisible: false,\n        },\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n    })\n    const { data, activeTick } = params\n\n    this.activeTick = activeTick\n\n    if (this.data !== data) {\n      this.data = data\n      this.series.setData(data)\n      this.fitContent()\n    }\n\n    this.series.applyOptions({\n      priceFormat: {\n        type: 'volume',\n      },\n      priceLineVisible: false,\n      lastValueVisible: false,\n    })\n\n    this.series.applyOptions(params)\n  }\n\n  override onSeriesHover(hoverData?: ChartHoverData<LiquidityBarData>) {\n    super.onSeriesHover(hoverData)\n    const updatedOptions: Partial<LiquidityBarSeriesOptions> = { hoveredTick: hoverData?.item.tick ?? this.activeTick }\n    this.series.applyOptions(updatedOptions)\n  }\n\n  activeTickIndex() {\n    return this.data.findIndex((bar) => bar.tick === this.activeTick)\n  }\n\n  fitContent() {\n    const length = this.data.length\n    const activeTickIndex = this.data.findIndex((bar) => bar.tick === this.activeTick)\n    const midPoint = activeTickIndex !== -1 ? activeTickIndex : length / 2\n\n    this.api\n      .timeScale()\n      .setVisibleLogicalRange({ from: Math.max(midPoint - 50, 0), to: Math.min(midPoint + 50, this.data.length) })\n  }\n}\n\nconst MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\n\nfunction maxAmount(token: Token) {\n  return CurrencyAmount.fromRawAmount(token, MAX_UINT128.toString())\n}\n\n/** Calculates tokens locked in the active tick range based on the current tick */\nasync function calculateActiveRangeTokensLocked(\n  token0: Token,\n  token1: Token,\n  feeTier: FeeAmount,\n  tick: TickProcessed,\n  poolData: {\n    sqrtPriceX96?: JSBI\n    currentTick?: number\n    liquidity?: JSBI\n  }\n): Promise<{ amount0Locked: number; amount1Locked: number } | undefined> {\n  if (!poolData.currentTick || !poolData.sqrtPriceX96 || !poolData.liquidity) {\n    return undefined\n  }\n\n  try {\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0))\n      ? tick.liquidityNet\n      : JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1'))\n\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1')),\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet,\n      },\n    ]\n    // Initialize pool containing only the active range\n    const pool1 = new Pool(\n      token0,\n      token1,\n      feeTier,\n      poolData.sqrtPriceX96,\n      tick.liquidityActive,\n      poolData.currentTick,\n      mockTicks\n    )\n    // Calculate amount of token0 that would need to be swapped to reach the bottom of the range\n    const bottomOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[0].index)\n    const token1Amount = (await pool1.getOutputAmount(maxAmount(token0), bottomOfRangePrice))[0]\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact())\n\n    // Calculate amount of token1 that would need to be swapped to reach the top of the range\n    const topOfRangePrice = TickMath.getSqrtRatioAtTick(mockTicks[1].index)\n    const token0Amount = (await pool1.getOutputAmount(maxAmount(token1), topOfRangePrice))[0]\n    const amount1Locked = parseFloat(tick.sdkPrice.quote(token0Amount).toExact())\n\n    return { amount0Locked, amount1Locked }\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 }\n  }\n}\n\n/** Returns amounts of tokens locked in the given tick. Reference: https://docs.uniswap.org/sdk/v3/guides/advanced/active-liquidity */\nasync function calculateTokensLocked(\n  token0: Token,\n  token1: Token,\n  feeTier: FeeAmount,\n  tick: TickProcessed\n): Promise<{ amount0Locked: number; amount1Locked: number }> {\n  try {\n    const tickSpacing = TICK_SPACINGS[feeTier]\n    const liqGross = JSBI.greaterThan(tick.liquidityNet, JSBI.BigInt(0))\n      ? tick.liquidityNet\n      : JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1'))\n\n    const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(tick.tick)\n    const mockTicks = [\n      {\n        index: tick.tick,\n        liquidityGross: liqGross,\n        liquidityNet: JSBI.multiply(tick.liquidityNet, JSBI.BigInt('-1')),\n      },\n      {\n        index: tick.tick + TICK_SPACINGS[feeTier],\n        liquidityGross: liqGross,\n        liquidityNet: tick.liquidityNet,\n      },\n    ]\n\n    // Initialize pool containing only the current range\n    const pool = new Pool(token0, token1, Number(feeTier), sqrtPriceX96, tick.liquidityActive, tick.tick, mockTicks)\n\n    // Calculate token amounts that would need to be swapped to reach the next range\n    const nextSqrtX96 = TickMath.getSqrtRatioAtTick(tick.tick - tickSpacing)\n    const maxAmountToken0 = CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString())\n    const token1Amount = (await pool.getOutputAmount(maxAmountToken0, nextSqrtX96))[0]\n    const amount0Locked = parseFloat(tick.sdkPrice.invert().quote(token1Amount).toExact())\n    const amount1Locked = parseFloat(token1Amount.toExact())\n\n    return { amount0Locked, amount1Locked }\n  } catch {\n    return { amount0Locked: 0, amount1Locked: 0 }\n  }\n}\n\nexport function useLiquidityBarData({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n}: {\n  tokenA: Token\n  tokenB: Token\n  feeTier: FeeAmount\n  isReversed: boolean\n  chainId: ChainId\n}) {\n  const { formatNumber, formatPrice } = useFormatter()\n  const activePoolData = usePoolActiveLiquidity(tokenA, tokenB, feeTier, chainId)\n\n  const [tickData, setTickData] = useState<{\n    barData: LiquidityBarData[]\n    activeRangeData?: LiquidityBarData\n    activeRangePercentage?: number\n  }>()\n\n  useEffect(() => {\n    async function formatData() {\n      const ticksProcessed = activePoolData.data\n      if (!ticksProcessed) return\n\n      let activeRangePercentage: number | undefined = undefined\n      let activeRangeIndex: number | undefined = undefined\n\n      const barData: LiquidityBarData[] = []\n      for (let index = 0; index < ticksProcessed.length; index++) {\n        const t = ticksProcessed[index]\n\n        // Lightweight-charts require the x-axis to be time; a fake time base on index is provided\n        const fakeTime = (isReversed ? index * 1000 : (ticksProcessed.length - index) * 1000) as UTCTimestamp\n        const isActive = activePoolData.activeTick === t.tick\n\n        let price0 = t.sdkPrice\n        let price1 = t.sdkPrice.invert()\n\n        if (isActive && activePoolData.activeTick && activePoolData.currentTick) {\n          activeRangeIndex = index\n          activeRangePercentage = (activePoolData.currentTick - t.tick) / TICK_SPACINGS[feeTier]\n\n          price0 = tickToPrice(tokenA, tokenB, t.tick)\n          price1 = price0.invert()\n        }\n\n        const { amount0Locked, amount1Locked } = await calculateTokensLocked(tokenA, tokenB, feeTier, t)\n\n        barData.push({\n          tick: t.tick,\n          liquidity: parseFloat(t.liquidityActive.toString()),\n          price0: formatPrice({ price: price0, type: NumberType.SwapDetailsAmount }),\n          price1: formatPrice({ price: price1, type: NumberType.SwapDetailsAmount }),\n          time: fakeTime,\n          amount0Locked,\n          amount1Locked,\n        })\n      }\n\n      // offset the values to line off bars with TVL used to swap across bar\n      barData?.map((entry, i) => {\n        if (i > 0) {\n          barData[i - 1].amount0Locked = entry.amount0Locked\n          barData[i - 1].amount1Locked = entry.amount1Locked\n        }\n      })\n\n      const activeRangeData = activeRangeIndex !== undefined ? barData[activeRangeIndex] : undefined\n      // For active range, adjust amounts locked to adjust for where current tick/price is within the range\n      if (activeRangeIndex !== undefined && activeRangeData) {\n        const activeTickTvl = await calculateActiveRangeTokensLocked(\n          tokenA,\n          tokenB,\n          feeTier,\n          ticksProcessed[activeRangeIndex],\n          activePoolData\n        )\n        barData[activeRangeIndex] = { ...activeRangeData, ...activeTickTvl }\n      }\n\n      // Reverse data so that token0 is on the left by default\n      if (!isReversed) {\n        barData.reverse()\n      }\n\n      // TODO(WEB-3672): investigate why negative/inaccurate liquidity values that are appearing from computeSurroundingTicks\n      setTickData({ barData: barData.filter((t) => t.liquidity > 0), activeRangeData, activeRangePercentage })\n    }\n\n    formatData()\n  }, [activePoolData, tokenA, tokenB, formatNumber, formatPrice, isReversed, feeTier])\n\n  return { tickData, activeTick: activePoolData.activeTick, loading: activePoolData.isLoading || !tickData }\n}\n","import { ChainId, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ChartHeader } from 'components/Charts/ChartHeader'\nimport { Chart } from 'components/Charts/ChartModel'\nimport { LiquidityBarChartModel, useLiquidityBarData } from 'components/Charts/LiquidityChart'\nimport { LiquidityBarData } from 'components/Charts/LiquidityChart/renderer'\nimport { ChartSkeleton } from 'components/Charts/LoadingState'\nimport { PriceChartData, PriceChartDelta, PriceChartModel } from 'components/Charts/PriceChart'\nimport { refitChartContentAtom } from 'components/Charts/TimeSelector'\nimport { VolumeChart } from 'components/Charts/VolumeChart'\nimport { SingleHistogramData } from 'components/Charts/VolumeChart/renderer'\nimport { ChartType, PriceChartType } from 'components/Charts/utils'\nimport PillMultiToggle from 'components/Toggle/PillMultiToggle'\nimport { ChartActionsContainer, DEFAULT_PILL_TIME_SELECTOR_OPTIONS } from 'components/Tokens/TokenDetails/ChartSection'\nimport { ChartTypeDropdown } from 'components/Tokens/TokenDetails/ChartSection/ChartTypeSelector'\nimport { ChartQueryResult, DataQuality } from 'components/Tokens/TokenDetails/ChartSection/util'\nimport { LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { DISPLAYS, TimePeriodDisplay, getTimePeriodFromDisplay } from 'components/Tokens/TokenTable/TimeSelector'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { TimePeriod, gqlToCurrency, supportedChainIdFromGQLChain, toHistoryDuration } from 'graphql/data/util'\nimport useStablecoinPrice from 'hooks/useStablecoinPrice'\nimport { Trans, t } from 'i18n'\nimport { useAtomValue } from 'jotai/utils'\nimport { useMemo, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { EllipsisStyle, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { Chain, ProtocolVersion } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { usePDPPriceChartData, usePDPVolumeChartData } from './hooks'\n\nconst PDP_CHART_HEIGHT_PX = 356\nconst PDP_CHART_SELECTOR_OPTIONS = [ChartType.VOLUME, ChartType.PRICE, ChartType.LIQUIDITY] as const\nexport type PoolsDetailsChartType = (typeof PDP_CHART_SELECTOR_OPTIONS)[number]\n\nconst TimePeriodSelectorContainer = styled.div`\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`\nconst ChartTypeSelectorContainer = styled.div`\n  display: flex;\n  gap: 8px;\n\n  @media only screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    width: 100%;\n  }\n`\n\nconst StyledChart: typeof Chart = styled(Chart)`\n  height: ${PDP_CHART_HEIGHT_PX}px;\n`\n\nconst PDPChartTypeSelector = ({\n  chartType,\n  onChartTypeChange,\n}: {\n  chartType: PoolsDetailsChartType\n  onChartTypeChange: (c: PoolsDetailsChartType) => void\n}) => (\n  <ChartTypeSelectorContainer>\n    <ChartTypeDropdown\n      options={PDP_CHART_SELECTOR_OPTIONS}\n      currentChartType={chartType}\n      onSelectOption={onChartTypeChange}\n    />\n  </ChartTypeSelectorContainer>\n)\n\ninterface ChartSectionProps {\n  poolData?: PoolData\n  loading: boolean\n  isReversed: boolean\n  chain?: Chain\n}\n\n/** Represents a variety of query result shapes, discriminated via additional `chartType` field. */\ntype ActiveQuery =\n  | ChartQueryResult<PriceChartData, ChartType.PRICE>\n  | ChartQueryResult<SingleHistogramData, ChartType.VOLUME>\n  | ChartQueryResult<undefined, ChartType.LIQUIDITY>\n\ntype TDPChartState = {\n  timePeriod: TimePeriod\n  setTimePeriod: (timePeriod: TimePeriod) => void\n  setChartType: (chartType: PoolsDetailsChartType) => void\n  activeQuery: ActiveQuery\n  dataQuality?: DataQuality\n}\n\nfunction usePDPChartState(\n  poolData: PoolData | undefined,\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  isReversed: boolean,\n  chain: Chain,\n  protocolVersion: ProtocolVersion\n): TDPChartState {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>(TimePeriod.DAY)\n  const [chartType, setChartType] = useState<PoolsDetailsChartType>(ChartType.VOLUME)\n\n  const isV3 = protocolVersion === ProtocolVersion.V3\n  const variables = { address: poolData?.address ?? '', chain, duration: toHistoryDuration(timePeriod), isV3 }\n\n  const priceQuery = usePDPPriceChartData(variables, poolData, tokenA, tokenB, isReversed)\n  const volumeQuery = usePDPVolumeChartData(variables)\n\n  return useMemo(() => {\n    const activeQuery = (() => {\n      switch (chartType) {\n        case ChartType.PRICE:\n          return priceQuery\n        case ChartType.VOLUME:\n          return volumeQuery\n        case ChartType.LIQUIDITY:\n          return {\n            chartType: ChartType.LIQUIDITY as const,\n            entries: [],\n            loading: false,\n            dataQuality: DataQuality.VALID,\n          }\n      }\n    })()\n\n    return {\n      timePeriod,\n      setTimePeriod,\n      setChartType,\n      activeQuery,\n    }\n  }, [chartType, volumeQuery, priceQuery, timePeriod])\n}\n\nexport default function ChartSection(props: ChartSectionProps) {\n  const [currencyA, currencyB] = [\n    props.poolData?.token0 && gqlToCurrency(props.poolData.token0),\n    props.poolData?.token1 && gqlToCurrency(props.poolData.token1),\n  ]\n\n  const { setChartType, timePeriod, setTimePeriod, activeQuery } = usePDPChartState(\n    props.poolData,\n    currencyA?.wrapped,\n    currencyB?.wrapped,\n    props.isReversed,\n    props.chain ?? Chain.Ethereum,\n    props.poolData?.protocolVersion ?? ProtocolVersion.V3\n  )\n\n  const refitChartContent = useAtomValue(refitChartContentAtom)\n\n  // TODO(WEB-3740): Integrate BE tick query, remove special casing for liquidity chart\n  const loading = props.loading || (activeQuery.chartType !== ChartType.LIQUIDITY ? activeQuery?.loading : false)\n\n  const ChartBody = (() => {\n    if (!currencyA || !currencyB || !props.poolData || !props.chain) {\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} />\n    }\n\n    const selectedChartProps = {\n      ...props,\n      feeTier: Number(props.poolData.feeTier),\n      height: PDP_CHART_HEIGHT_PX,\n      timePeriod,\n      tokenA: currencyA.wrapped,\n      tokenB: currencyB.wrapped,\n      chainId: supportedChainIdFromGQLChain(props.chain) ?? ChainId.MAINNET,\n    }\n\n    // TODO(WEB-3740): Integrate BE tick query, remove special casing for liquidity chart\n    if (activeQuery.chartType === ChartType.LIQUIDITY) {\n      return <LiquidityChart {...selectedChartProps} />\n    }\n    if (activeQuery.dataQuality === DataQuality.INVALID || !currencyA || !currencyB) {\n      const errorText = loading ? undefined : <Trans>Unable to display historical data for the current pool.</Trans>\n      return <ChartSkeleton type={activeQuery.chartType} height={PDP_CHART_HEIGHT_PX} errorText={errorText} />\n    }\n\n    const stale = activeQuery.dataQuality === DataQuality.STALE\n\n    switch (activeQuery.chartType) {\n      case ChartType.PRICE:\n        return <PriceChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />\n      case ChartType.VOLUME:\n        return <VolumeChart {...selectedChartProps} data={activeQuery.entries} stale={stale} />\n    }\n  })()\n\n  // BE does not support hourly price data for pools\n  const filteredTimeOptions = useMemo(() => {\n    if (activeQuery.chartType === ChartType.PRICE) {\n      return DEFAULT_PILL_TIME_SELECTOR_OPTIONS.filter((option) => option.value !== TimePeriodDisplay.HOUR)\n    }\n    return DEFAULT_PILL_TIME_SELECTOR_OPTIONS\n  }, [activeQuery.chartType])\n\n  return (\n    <div data-testid=\"pdp-chart-container\">\n      {ChartBody}\n      <ChartActionsContainer>\n        <PDPChartTypeSelector chartType={activeQuery.chartType} onChartTypeChange={setChartType} />\n        {activeQuery.chartType !== ChartType.LIQUIDITY && (\n          <TimePeriodSelectorContainer>\n            <PillMultiToggle\n              options={filteredTimeOptions}\n              currentSelected={DISPLAYS[timePeriod]}\n              onSelectOption={(option) => {\n                const time = getTimePeriodFromDisplay(option as TimePeriodDisplay)\n                if (time === timePeriod) {\n                  refitChartContent?.()\n                } else {\n                  setTimePeriod(time)\n                }\n              }}\n            />\n          </TimePeriodSelectorContainer>\n        )}\n      </ChartActionsContainer>\n    </div>\n  )\n}\n\nconst PriceDisplayContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 4px;\n`\n\nconst ChartPriceText = styled(ThemedText.HeadlineMedium)`\n  ${EllipsisStyle}\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 24px !important;\n    line-height: 32px !important;\n  }\n`\n\nfunction PriceChart({\n  tokenA,\n  tokenB,\n  isReversed,\n  data,\n  stale,\n}: {\n  tokenA: Token\n  tokenB: Token\n  isReversed: boolean\n  data: PriceChartData[]\n  stale: boolean\n}) {\n  const { formatCurrencyAmount, formatPrice } = useFormatter()\n  const [primaryToken, referenceToken] = isReversed ? [tokenB, tokenA] : [tokenA, tokenB]\n\n  const params = useMemo(() => ({ data, stale, type: PriceChartType.LINE }), [data, stale])\n\n  const stablecoinPrice = useStablecoinPrice(primaryToken)\n\n  const lastPrice = data[data.length - 1]\n  return (\n    <StyledChart Model={PriceChartModel} params={params}>\n      {(crosshairData) => {\n        const displayValue = crosshairData ?? lastPrice\n        const currencyBAmountRaw = Math.floor(\n          (displayValue.value ?? displayValue.close) * 10 ** referenceToken.decimals\n        )\n        const priceDisplay = (\n          <PriceDisplayContainer>\n            <ChartPriceText>\n              {`1 ${primaryToken.symbol} = ${formatCurrencyAmount({\n                amount: CurrencyAmount.fromRawAmount(referenceToken, currencyBAmountRaw),\n              })} \n            ${referenceToken.symbol}`}\n            </ChartPriceText>\n            <ChartPriceText color=\"neutral2\">\n              {stablecoinPrice ? '(' + formatPrice({ price: stablecoinPrice }) + ')' : ''}\n            </ChartPriceText>\n          </PriceDisplayContainer>\n        )\n        return (\n          <ChartHeader\n            value={priceDisplay}\n            additionalFields={<PriceChartDelta startingPrice={data[0]} endingPrice={displayValue} />}\n            valueFormatterType={NumberType.FiatTokenPrice}\n            time={crosshairData?.time}\n          />\n        )\n      }}\n    </StyledChart>\n  )\n}\n\nconst FadeInHeading = styled(ThemedText.H1Medium)`\n  ${textFadeIn};\n  line-height: 32px;\n`\nconst FadeInSubheader = styled(ThemedText.SubHeader)`\n  ${textFadeIn}\n`\n\nfunction LiquidityTooltipDisplay({\n  data,\n  tokenADescriptor,\n  tokenBDescriptor,\n  currentTick,\n}: {\n  data: LiquidityBarData\n  tokenADescriptor: string\n  tokenBDescriptor: string\n  currentTick?: number\n}) {\n  const { formatNumber } = useFormatter()\n  if (!currentTick) return null\n\n  const displayValue0 =\n    data.tick >= currentTick\n      ? formatNumber({\n          input: data.amount0Locked,\n          type: NumberType.TokenQuantityStats,\n        })\n      : 0\n  const displayValue1 =\n    data.tick <= currentTick\n      ? formatNumber({\n          input: data.amount1Locked,\n          type: NumberType.TokenQuantityStats,\n        })\n      : 0\n\n  return (\n    <>\n      <ThemedText.BodySmall>\n        {t(`{{token}} liquidity: {{name}}`, { token: tokenADescriptor, name: displayValue0 })}\n      </ThemedText.BodySmall>\n      <ThemedText.BodySmall>\n        {t(`{{token}} liquidity: {{name}}`, { token: tokenBDescriptor, name: displayValue1 })}\n      </ThemedText.BodySmall>\n    </>\n  )\n}\n\nfunction LiquidityChart({\n  tokenA,\n  tokenB,\n  feeTier,\n  isReversed,\n  chainId,\n}: {\n  tokenA: Token\n  tokenB: Token\n  feeTier: FeeAmount\n  isReversed: boolean\n  chainId: ChainId\n}) {\n  const tokenADescriptor = tokenA.symbol ?? tokenA.name ?? t`Token A`\n  const tokenBDescriptor = tokenB.symbol ?? tokenB.name ?? t`Token B`\n\n  const { tickData, activeTick, loading } = useLiquidityBarData({\n    tokenA,\n    tokenB,\n    feeTier,\n    isReversed,\n    chainId,\n  })\n\n  const theme = useTheme()\n  const params = useMemo(() => {\n    return {\n      data: tickData?.barData ?? [],\n      tokenAColor: isReversed ? theme.token1 : theme.token0,\n      tokenBColor: isReversed ? theme.token0 : theme.token1,\n      highlightColor: theme.surface3,\n      activeTick,\n      activeTickProgress: tickData?.activeRangePercentage,\n    }\n  }, [activeTick, isReversed, theme, tickData])\n\n  if (loading) return <LoadingChart />\n\n  return (\n    <StyledChart\n      Model={LiquidityBarChartModel}\n      params={params}\n      TooltipBody={\n        // TODO(WEB-3628): investigate potential off-by-one or subgraph issues causing calculated TVL issues on 1 bip pools\n        feeTier !== FeeAmount.LOWEST\n          ? ({ data }: { data: LiquidityBarData }) => (\n              <LiquidityTooltipDisplay\n                data={data}\n                tokenADescriptor={tokenADescriptor}\n                tokenBDescriptor={tokenBDescriptor}\n                currentTick={tickData?.activeRangeData?.tick}\n              />\n            )\n          : undefined\n      }\n    >\n      {(crosshair) => {\n        const displayPoint = crosshair ?? tickData?.activeRangeData\n        const display = (\n          <div>\n            <FadeInHeading>{`1 ${tokenADescriptor} = ${displayPoint?.price0} ${tokenBDescriptor}`}</FadeInHeading>\n            <FadeInHeading>{`1 ${tokenBDescriptor} = ${displayPoint?.price1} ${tokenADescriptor}`}</FadeInHeading>\n            {displayPoint && displayPoint.tick === activeTick && (\n              <FadeInSubheader color=\"neutral2\" paddingTop=\"4px\">\n                <Trans>Active tick range</Trans>\n              </FadeInSubheader>\n            )}\n          </div>\n        )\n        return <ChartHeader value={display} />\n      }}\n    </StyledChart>\n  )\n}\n","import { Token } from '@uniswap/sdk-core'\nimport { PriceChartData } from 'components/Charts/PriceChart'\nimport { SingleHistogramData } from 'components/Charts/VolumeChart/renderer'\nimport { ChartType } from 'components/Charts/utils'\nimport {\n  ChartQueryResult,\n  DataQuality,\n  checkDataQuality,\n  withUTCTimestamp,\n} from 'components/Tokens/TokenDetails/ChartSection/util'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { UTCTimestamp } from 'lightweight-charts'\nimport { useMemo } from 'react'\nimport {\n  Chain,\n  HistoryDuration,\n  TimestampedAmount,\n  TimestampedPoolPrice,\n  usePoolPriceHistoryQuery,\n  usePoolVolumeHistoryQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\ntype PDPChartQueryVars = { address: string; chain: Chain; duration: HistoryDuration; isV3: boolean }\nexport function usePDPPriceChartData(\n  variables: PDPChartQueryVars,\n  poolData: PoolData | undefined,\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  isReversed: boolean\n): ChartQueryResult<PriceChartData, ChartType.PRICE> {\n  const { data, loading } = usePoolPriceHistoryQuery({ variables })\n\n  return useMemo(() => {\n    const { priceHistory } = data?.v2Pair ?? data?.v3Pool ?? {}\n    const referenceToken = isReversed ? tokenA : tokenB\n\n    const entries =\n      priceHistory\n        ?.filter((price): price is TimestampedPoolPrice => price !== null)\n        .map((price) => {\n          const value =\n            poolData?.token0.address === referenceToken?.address.toLowerCase() ? price?.token0Price : price?.token1Price\n\n          return {\n            time: price.timestamp as UTCTimestamp,\n            value,\n            open: value,\n            high: value,\n            low: value,\n            close: value,\n          }\n        }) ?? []\n\n    // TODO(WEB-3769): Append current price based on active tick to entries\n    /* const dataQuality = checkDataQuality(entries, ChartType.PRICE, variables.duration) */\n    const dataQuality = loading || !priceHistory ? DataQuality.INVALID : DataQuality.VALID\n\n    return { chartType: ChartType.PRICE, entries, loading, dataQuality }\n  }, [data?.v2Pair, data?.v3Pool, isReversed, loading, poolData?.token0.address, tokenA, tokenB])\n}\n\nexport function usePDPVolumeChartData(\n  variables: PDPChartQueryVars\n): ChartQueryResult<SingleHistogramData, ChartType.VOLUME> {\n  const { data, loading } = usePoolVolumeHistoryQuery({ variables })\n\n  return useMemo(() => {\n    const { historicalVolume } = data?.v2Pair ?? data?.v3Pool ?? {}\n    const entries =\n      historicalVolume?.filter((amt): amt is TimestampedAmount => amt !== null).map(withUTCTimestamp) ?? []\n\n    const dataQuality = checkDataQuality(entries, ChartType.VOLUME, variables.duration)\n\n    return { chartType: ChartType.VOLUME, entries, loading, dataQuality }\n  }, [data?.v2Pair, data?.v3Pool, loading, variables.duration])\n}\n","import { LoadingBubble } from 'components/Tokens/loading'\nimport styled from 'styled-components'\n\nexport const DetailBubble = styled(LoadingBubble)<{ $height?: number; $width?: number }>`\n  height: ${({ $height }) => ($height ? `${$height}px` : '16px')};\n  width: ${({ $width }) => ($width ? `${$width}px` : '80px')};\n`\n\nexport const SmallDetailBubble = styled(LoadingBubble)`\n  height: 20px;\n  width: 20px;\n  border-radius: 100px;\n`\n","import { ChainId, Percent } from '@uniswap/sdk-core'\nimport { BreadcrumbNavContainer, BreadcrumbNavLink, CurrentPageBreadcrumb } from 'components/BreadcrumbNav'\nimport Column from 'components/Column'\nimport { DropdownSelector } from 'components/DropdownSelector'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { ExplorerIcon } from 'components/Icons/ExplorerIcon'\nimport { ReverseArrow } from 'components/Icons/ReverseArrow'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport ShareButton from 'components/Tokens/TokenDetails/ShareButton'\nimport { StyledExternalLink } from 'components/Tokens/TokenDetails/TokenDetailsHeader'\nimport { ActionButtonStyle, ActionMenuFlyoutStyle } from 'components/Tokens/TokenDetails/shared'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { BIPS_BASE } from 'constants/misc'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { Trans, t } from 'i18n'\nimport React, { useMemo, useReducer, useRef } from 'react'\nimport { ChevronRight, ExternalLink as ExternalLinkIcon } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled, { css, useTheme } from 'styled-components'\nimport { ClickableStyle, EllipsisStyle, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { shortenAddress } from 'utilities/src/addresses'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { DoubleCurrencyAndChainLogo } from 'components/DoubleLogo'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { DetailBubble } from './shared'\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: 'flex-start';\n  width: 100%;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`\n\nconst Badge = styled(ThemedText.LabelMicro)`\n  background: ${({ theme }) => theme.surface2};\n  padding: 2px 6px;\n  border-radius: 4px;\n`\n\nconst ToggleReverseArrows = styled(ReverseArrow)`\n  ${ClickableStyle}\n  fill: ${({ theme }) => theme.neutral2};\n`\n\nconst IconBubble = styled(LoadingBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\n\ninterface PoolDetailsBreadcrumbProps {\n  chainId?: SupportedInterfaceChainId\n  poolAddress?: string\n  token0?: Token\n  token1?: Token\n  loading?: boolean\n}\n\nexport function PoolDetailsBreadcrumb({ chainId, poolAddress, token0, token1, loading }: PoolDetailsBreadcrumbProps) {\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true })\n  const exploreOrigin = `/explore/${chainName.toLowerCase()}`\n  const poolsOrigin = `/explore/pools/${chainName.toLowerCase()}`\n\n  return (\n    <BreadcrumbNavContainer aria-label=\"breadcrumb-nav\">\n      <BreadcrumbNavLink to={exploreOrigin}>\n        <Trans>Explore</Trans> <ChevronRight size={14} />\n      </BreadcrumbNavLink>\n      <BreadcrumbNavLink to={poolsOrigin}>\n        <Trans>Pools</Trans> <ChevronRight size={14} />\n      </BreadcrumbNavLink>\n      {loading || !poolAddress ? (\n        <DetailBubble $width={200} />\n      ) : (\n        <CurrentPageBreadcrumb address={poolAddress} poolName={`${token0?.symbol} / ${token1?.symbol}`} />\n      )}\n    </BreadcrumbNavContainer>\n  )\n}\n\nconst StyledPoolDetailsTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n  width: max-content;\n  align-items: center;\n`\n\nconst PoolName = styled(ThemedText.HeadlineMedium)`\n  font-size: 24px !important;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    font-size: 18px !important;\n    line-height: 24px !important;\n  }\n`\n\nconst PoolDetailsTitle = ({\n  token0,\n  token1,\n  chainId,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n}: {\n  token0?: Token\n  token1?: Token\n  chainId?: SupportedInterfaceChainId\n  feeTier?: number\n  protocolVersion?: ProtocolVersion\n  toggleReversed: React.DispatchWithoutAction\n}) => {\n  const { formatPercent } = useFormatter()\n  const feePercent = feeTier && formatPercent(new Percent(feeTier, BIPS_BASE * 100))\n  return (\n    <StyledPoolDetailsTitle>\n      <div>\n        <PoolName>\n          <StyledLink\n            to={getTokenDetailsURL({\n              address: token0?.address,\n              chain: chainIdToBackendChain({ chainId, withFallback: true }),\n            })}\n          >\n            {token0?.symbol}\n          </StyledLink>\n          &nbsp;/&nbsp;\n          <StyledLink\n            to={getTokenDetailsURL({\n              address: token1?.address,\n              chain: chainIdToBackendChain({ chainId, withFallback: true }),\n            })}\n          >\n            {token1?.symbol}\n          </StyledLink>\n        </PoolName>\n      </div>\n      {protocolVersion === ProtocolVersion.V2 && <Badge>v2</Badge>}\n      {!!feePercent && <Badge>{feePercent}</Badge>}\n      <ToggleReverseArrows data-testid=\"toggle-tokens-reverse-arrows\" onClick={toggleReversed} />\n    </StyledPoolDetailsTitle>\n  )\n}\n\nconst ContractsDropdownRowContainer = styled(Row)`\n  align-items: center;\n  text-decoration: none;\n  cursor: pointer;\n  gap: 12px;\n  padding: 10px 8px;\n  border-radius: 8px;\n  &:hover {\n    background: ${({ theme }) => theme.surface3};\n  }\n`\n\nconst ContractsDropdownRow = ({\n  address,\n  chainId,\n  tokens,\n}: {\n  address?: string\n  chainId?: number\n  tokens: (Token | undefined)[]\n}) => {\n  const theme = useTheme()\n  const currency = tokens[0] && gqlToCurrency(tokens[0])\n  const isPool = tokens.length === 2\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency]\n  const isNative = address === NATIVE_CHAIN_ID\n  const explorerUrl =\n    chainId &&\n    address &&\n    getExplorerLink(\n      chainId,\n      address,\n      isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n    )\n\n  if (!chainId || !explorerUrl) {\n    return (\n      <ContractsDropdownRowContainer>\n        <DetailBubble $width={117} />\n      </ContractsDropdownRowContainer>\n    )\n  }\n\n  return (\n    <StyledExternalLink href={explorerUrl}>\n      <ContractsDropdownRowContainer>\n        <Row gap=\"sm\">\n          {isPool ? (\n            <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={24} />\n          ) : (\n            <CurrencyLogo currency={currency} size={24} />\n          )}\n          <ThemedText.BodyPrimary>{isPool ? <Trans>Pool</Trans> : tokens[0]?.symbol}</ThemedText.BodyPrimary>\n          <ThemedText.BodySecondary>{shortenAddress(address)}</ThemedText.BodySecondary>\n        </Row>\n        <ExternalLinkIcon size=\"16px\" stroke={theme.neutral2} />\n      </ContractsDropdownRowContainer>\n    </StyledExternalLink>\n  )\n}\n\nconst ContractsModalContainer = css`\n  ${ActionMenuFlyoutStyle}\n  min-width: 235px;\n  border-radius: 16px;\n  ${EllipsisStyle}\n`\n\nconst PoolDetailsHeaderActions = ({\n  chainId,\n  poolAddress,\n  poolName,\n  token0,\n  token1,\n}: {\n  chainId?: number\n  poolAddress?: string\n  poolName: string\n  token0?: Token\n  token1?: Token\n}) => {\n  const theme = useTheme()\n\n  const [contractsModalIsOpen, toggleContractsModal] = useReducer((s) => !s, false)\n  const contractsRef = useRef<HTMLDivElement>(null)\n  useOnClickOutside(contractsRef, contractsModalIsOpen ? toggleContractsModal : undefined)\n\n  return (\n    <Row width=\"max-content\" justify=\"flex-end\" gap=\"sm\">\n      <div style={{ position: 'relative' }} ref={contractsRef}>\n        <DropdownSelector\n          isOpen={contractsModalIsOpen}\n          toggleOpen={toggleContractsModal}\n          menuLabel={\n            chainId === ChainId.MAINNET ? (\n              <EtherscanLogo width=\"18px\" height=\"18px\" fill={theme.neutral1} />\n            ) : (\n              <ExplorerIcon width=\"18px\" height=\"18px\" fill={theme.neutral1} />\n            )\n          }\n          internalMenuItems={\n            <>\n              <ContractsDropdownRow address={poolAddress} chainId={chainId} tokens={[token0, token1]} />\n              <ContractsDropdownRow address={token0?.address} chainId={chainId} tokens={[token0]} />\n              <ContractsDropdownRow address={token1?.address} chainId={chainId} tokens={[token1]} />\n            </>\n          }\n          tooltipText={t`Explorers`}\n          hideChevron\n          buttonCss={ActionButtonStyle}\n          menuFlyoutCss={ContractsModalContainer}\n        />\n      </div>\n      <ShareButton name={poolName} />\n    </Row>\n  )\n}\n\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.neutral1};\n  text-decoration: none;\n  ${ClickableStyle}\n`\n\ninterface PoolDetailsHeaderProps {\n  chainId?: number\n  poolAddress?: string\n  token0?: Token\n  token1?: Token\n  feeTier?: number\n  protocolVersion?: ProtocolVersion\n  toggleReversed: React.DispatchWithoutAction\n  loading?: boolean\n}\n\nexport function PoolDetailsHeader({\n  chainId,\n  poolAddress,\n  token0,\n  token1,\n  feeTier,\n  protocolVersion,\n  toggleReversed,\n  loading,\n}: PoolDetailsHeaderProps) {\n  const screenSize = useScreenSize()\n  const shouldColumnBreak = !screenSize['sm']\n  const poolName = `${token0?.symbol} / ${token1?.symbol}`\n  const currencies = useMemo(\n    () => (token0 && token1 ? [gqlToCurrency(token0), gqlToCurrency(token1)] : []),\n    [token0, token1]\n  )\n\n  if (loading) {\n    return (\n      <HeaderContainer data-testid=\"pdp-header-loading-skeleton\">\n        {shouldColumnBreak ? (\n          <Column gap=\"sm\" style={{ width: '100%' }}>\n            <IconBubble />\n            <DetailBubble $height={40} $width={137} />\n          </Column>\n        ) : (\n          <Row gap=\"sm\">\n            <IconBubble />\n            <DetailBubble $height={40} $width={137} />\n          </Row>\n        )}\n      </HeaderContainer>\n    )\n  }\n  return (\n    <HeaderContainer>\n      {shouldColumnBreak ? (\n        <Column gap=\"sm\" style={{ width: '100%' }}>\n          <Row gap=\"md\" justify=\"space-between\">\n            {chainId && (\n              <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />\n            )}\n            <PoolDetailsHeaderActions\n              chainId={chainId}\n              poolAddress={poolAddress}\n              poolName={poolName}\n              token0={token0}\n              token1={token1}\n            />\n          </Row>\n          <PoolDetailsTitle\n            token0={token0}\n            token1={token1}\n            chainId={chainId}\n            feeTier={feeTier}\n            protocolVersion={protocolVersion}\n            toggleReversed={toggleReversed}\n          />\n        </Column>\n      ) : (\n        <>\n          <Row gap=\"md\">\n            {chainId && (\n              <DoubleCurrencyAndChainLogo data-testid=\"double-token-logo\" chainId={chainId} currencies={currencies} />\n            )}\n            <PoolDetailsTitle\n              token0={token0}\n              token1={token1}\n              chainId={chainId}\n              feeTier={feeTier}\n              protocolVersion={protocolVersion}\n              toggleReversed={toggleReversed}\n            />\n          </Row>\n          <PoolDetailsHeaderActions\n            chainId={chainId}\n            poolAddress={poolAddress}\n            poolName={poolName}\n            token0={token0}\n            token1={token1}\n          />\n        </>\n      )}\n    </HeaderContainer>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { ExplorerIcon } from 'components/Icons/ExplorerIcon'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport Tooltip, { TooltipSize } from 'components/Tooltip'\nimport { getTokenDetailsURL, gqlToCurrency } from 'graphql/data/util'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { Trans, t } from 'i18n'\nimport { useCallback, useState } from 'react'\nimport { ChevronRight, Copy } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from 'theme/components'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { isAddress, shortenAddress } from 'utilities/src/addresses'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nimport { DoubleCurrencyAndChainLogo } from 'components/DoubleLogo'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { DetailBubble, SmallDetailBubble } from './shared'\n\nconst TokenName = styled(ThemedText.BodyPrimary)`\n  display: none;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    display: block;\n  }\n  ${EllipsisStyle}\n`\n\nconst TokenTextWrapper = styled(Row)<{ isClickable?: boolean }>`\n  gap: 8px;\n  margin-right: 12px;\n  ${EllipsisStyle}\n  ${({ isClickable }) => isClickable && ClickableStyle}\n`\n\nconst SymbolText = styled(ThemedText.BodyPrimary)`\n  flex-shrink: 0;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.xs}px) {\n    color: ${({ theme }) => theme.neutral2};\n  }\n`\n\nconst CopyAddress = styled(Row)`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  flex-shrink: 0;\n  ${ClickableStyle}\n`\nconst StyledCopyIcon = styled(Copy)`\n  width: 16px;\n  height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n  flex-shrink: 0;\n`\n\nconst ExplorerWrapper = styled.div`\n  padding: 8px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.surface3};\n  display: flex;\n  ${ClickableStyle}\n`\n\nconst ButtonsRow = styled(Row)`\n  gap: 8px;\n  flex-shrink: 0;\n  width: max-content;\n`\n\ninterface PoolDetailsLinkProps {\n  address?: string\n  chainId?: SupportedInterfaceChainId\n  tokens: (Token | undefined)[]\n  loading?: boolean\n}\n\nexport function PoolDetailsLink({ address, chainId, tokens, loading }: PoolDetailsLinkProps) {\n  const theme = useTheme()\n  const isNative = address === NATIVE_CHAIN_ID\n  const currency = tokens[0] && gqlToCurrency(tokens[0])\n  const [isCopied, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    const checksummedAddress = isAddress(address)\n    checksummedAddress && setCopied(checksummedAddress)\n  }, [address, setCopied])\n\n  const isPool = tokens.length === 2\n  const currencies = isPool && tokens[1] ? [currency, gqlToCurrency(tokens[1])] : [currency]\n  const explorerUrl =\n    address &&\n    chainId &&\n    getExplorerLink(\n      chainId,\n      address,\n      isNative ? ExplorerDataType.NATIVE : isPool ? ExplorerDataType.ADDRESS : ExplorerDataType.TOKEN\n    )\n\n  const navigate = useNavigate()\n  const chainName = chainIdToBackendChain({ chainId, withFallback: true })\n  const handleTokenTextClick = useCallback(() => {\n    if (!isPool) {\n      navigate(getTokenDetailsURL({ address: tokens[0]?.address, chain: chainName }))\n    }\n  }, [navigate, tokens, isPool, chainName])\n\n  const [truncateAddress, setTruncateAddress] = useState<false | 'start' | 'both'>(false)\n  const onTextRender = useCallback(\n    (textRef: HTMLElement) => {\n      if (textRef) {\n        const hasOverflow = textRef.clientWidth < textRef.scrollWidth\n        if (hasOverflow) {\n          setTruncateAddress((prev) => (prev ? 'both' : 'start'))\n        }\n      }\n    },\n    // This callback must run after it sets truncateAddress to 'start' to see if it needs to 'both'.\n    // It checks if the textRef has overflow, and sets truncateAddress accordingly to avoid it.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [truncateAddress]\n  )\n\n  if (loading || !address || !chainId) {\n    return (\n      <Row gap=\"8px\" padding=\"6px 0px\">\n        <SmallDetailBubble />\n        <DetailBubble $width={117} />\n      </Row>\n    )\n  }\n\n  return (\n    <Row align=\"space-between\">\n      <TokenTextWrapper\n        data-testid={\n          isPool ? `pdp-pool-logo-${tokens[0]?.symbol}-${tokens[1]?.symbol}` : `pdp-token-logo-${tokens[0]?.symbol}`\n        }\n        isClickable={!isPool}\n        onClick={handleTokenTextClick}\n        ref={onTextRender}\n      >\n        {isPool ? (\n          <DoubleCurrencyAndChainLogo chainId={chainId} currencies={currencies} size={20} />\n        ) : (\n          <CurrencyLogo currency={currency} size={20} />\n        )}\n        <TokenName>{isPool ? <Trans>Pool</Trans> : tokens[0]?.name}</TokenName>\n        <SymbolText>\n          {isPool ? (\n            `${tokens[0]?.symbol} / ${tokens[1]?.symbol}`\n          ) : (\n            <Row gap=\"4px\">\n              {tokens[0]?.symbol} <ChevronRight size={16} color={theme.neutral2} />\n            </Row>\n          )}\n        </SymbolText>\n      </TokenTextWrapper>\n      <ButtonsRow>\n        {!isNative && (\n          <Tooltip placement=\"bottom\" size={TooltipSize.Max} show={isCopied} text={t`Copied`}>\n            <CopyAddress data-testid={`copy-address-${address}`} onClick={copy}>\n              {shortenAddress(address, truncateAddress ? 2 : undefined, truncateAddress === 'both' ? 2 : undefined)}\n              <StyledCopyIcon />\n            </CopyAddress>\n          </Tooltip>\n        )}\n        {explorerUrl && (\n          <ExternalLink href={explorerUrl} data-testid={`explorer-url-${explorerUrl}`}>\n            <ExplorerWrapper>\n              {chainId === ChainId.MAINNET ? (\n                <EtherscanLogo width=\"16px\" height=\"16px\" fill={theme.neutral1} />\n              ) : (\n                <ExplorerIcon width=\"16px\" height=\"16px\" fill={theme.neutral1} />\n              )}\n            </ExplorerWrapper>\n          </ExternalLink>\n        )}\n      </ButtonsRow>\n    </Row>\n  )\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport Column from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Row from 'components/Row'\nimport { DeltaArrow } from 'components/Tokens/TokenDetails/Delta'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport { getTokenDetailsURL, unwrapToken } from 'graphql/data/util'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { Trans } from 'i18n'\nimport { ReactNode, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { css, useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens'\nimport { PoolData } from 'graphql/data/pools/usePoolData'\nimport { DetailBubble } from './shared'\n\nconst HeaderText = styled(Text)`\n  font-weight: 485;\n  font-size: 24px;\n  line-height: 36px;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n  }\n`\n\nconst StatsWrapper = styled(Column)<{ loaded?: boolean }>`\n  gap: 24px;\n  padding: 20px;\n  border-radius: 20px;\n  background: ${({ theme }) => theme.surface2};\n  width: 100%;\n  z-index: 1;\n  margin-top: ${({ loaded }) => loaded && '-24px'};\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: row;\n    background: transparent;\n    flex-wrap: wrap;\n    padding: 20px 0px;\n    justify-content: space-between;\n    margin-top: 0px;\n  }\n`\n\nconst StatItemColumn = styled(Column)`\n  gap: 8px;\n  flex: 1;\n  min-width: 180px;\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    min-width: 150px;\n  }\n`\n\nconst PoolBalanceSymbols = styled(Row)`\n  justify-content: space-between;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n  }\n`\n\nconst PoolBalanceTokenNamesContainer = styled(Row)`\n  font-weight: 485;\n  font-size: 16px;\n  line-height: 24px;\n  width: max-content;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n    width: 100%;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  ${ClickableStyle}\n`\n\nconst leftBarChartStyles = css`\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-right: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst rightBarChartStyles = css`\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border-left: 1px solid ${({ theme }) => theme.surface2};\n`\n\nconst BalanceChartSide = styled.div<{ percent: number; $color: string; isLeft: boolean }>`\n  height: 8px;\n  width: ${({ percent }) => percent * 100}%;\n  background: ${({ $color }) => $color};\n  ${({ isLeft }) => (isLeft ? leftBarChartStyles : rightBarChartStyles)}\n`\n\nconst StatSectionBubble = styled(LoadingBubble)`\n  width: 180px;\n  height: 40px;\n`\n\nconst StatHeaderBubble = styled(LoadingBubble)`\n  width: 116px;\n  height: 24px;\n  border-radius: 8px;\n`\n\ntype TokenFullData = Token & {\n  price: number\n  tvl: number\n  percent: number\n  currency?: Currency\n}\n\nconst PoolBalanceTokenNames = ({ token, chainId }: { token: TokenFullData; chainId?: SupportedInterfaceChainId }) => {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const { formatNumber } = useFormatter()\n  const unwrappedToken = chainId ? unwrapToken(chainId, token) : token\n  const isNative = unwrappedToken?.address === NATIVE_CHAIN_ID\n  const currency = isNative && chainId ? nativeOnChain(chainId) : token.currency\n  return (\n    <PoolBalanceTokenNamesContainer>\n      {!screenIsNotLarge && <CurrencyLogo currency={currency} size={20} style={{ marginRight: '8px' }} />}\n      {formatNumber({\n        input: token.tvl,\n        type: NumberType.TokenQuantityStats,\n      })}\n      &nbsp;\n      <StyledLink\n        to={getTokenDetailsURL({\n          address: unwrappedToken.address,\n          chain: chainIdToBackendChain({ chainId, withFallback: true }),\n        })}\n      >\n        {screenIsNotLarge && (\n          <CurrencyLogo currency={currency} size={16} style={{ marginRight: '4px', marginLeft: '4px' }} />\n        )}\n        {unwrappedToken.symbol}\n      </StyledLink>\n    </PoolBalanceTokenNamesContainer>\n  )\n}\n\ninterface PoolDetailsStatsProps {\n  poolData?: PoolData\n  isReversed?: boolean\n  chainId?: number\n  loading?: boolean\n}\n\nexport function PoolDetailsStats({ poolData, isReversed, chainId, loading }: PoolDetailsStatsProps) {\n  const isScreenSize = useScreenSize()\n  const screenIsNotLarge = isScreenSize['lg']\n  const theme = useTheme()\n\n  const currency0 = useCurrency(poolData?.token0?.address, chainId)\n  const currency1 = useCurrency(poolData?.token1?.address, chainId)\n\n  const [token0, token1] = useMemo(() => {\n    if (poolData && poolData.tvlToken0 && poolData.token0Price && poolData.tvlToken1 && poolData.token1Price) {\n      const fullWidth = poolData?.tvlToken0 * poolData?.token0Price + poolData?.tvlToken1 * poolData?.token1Price\n      const token0FullData: TokenFullData = {\n        ...poolData?.token0,\n        price: poolData?.token0Price,\n        tvl: poolData?.tvlToken0,\n        percent: (poolData?.tvlToken0 * poolData?.token0Price) / fullWidth,\n        currency: currency0,\n      }\n      const token1FullData: TokenFullData = {\n        ...poolData?.token1,\n        price: poolData?.token1Price,\n        tvl: poolData?.tvlToken1,\n        percent: (poolData?.tvlToken1 * poolData?.token1Price) / fullWidth,\n        currency: currency1,\n      }\n      return isReversed ? [token1FullData, token0FullData] : [token0FullData, token1FullData]\n    } else {\n      return [undefined, undefined]\n    }\n  }, [currency0, currency1, isReversed, poolData])\n\n  if (loading || !token0 || !token1 || !poolData) {\n    return (\n      <StatsWrapper>\n        <HeaderText>\n          <StatHeaderBubble />\n        </HeaderText>\n        {Array.from({ length: 4 }).map((_, i) => (\n          <Column gap=\"md\" key={`loading-info-row-${i}`}>\n            <DetailBubble />\n            <StatSectionBubble />\n          </Column>\n        ))}\n      </StatsWrapper>\n    )\n  }\n\n  return (\n    <StatsWrapper loaded>\n      <HeaderText>\n        <Trans>Stats</Trans>\n      </HeaderText>\n      <StatItemColumn>\n        <ThemedText.BodySecondary>\n          <Trans>Pool balances</Trans>\n        </ThemedText.BodySecondary>\n        <PoolBalanceSymbols>\n          <PoolBalanceTokenNames token={token0} chainId={chainId} />\n          <PoolBalanceTokenNames token={token1} chainId={chainId} />\n        </PoolBalanceSymbols>\n        {screenIsNotLarge && (\n          <Row data-testid=\"pool-balance-chart\">\n            <BalanceChartSide percent={token0.percent} $color={theme.token0} isLeft={true} />\n            <BalanceChartSide percent={token1.percent} $color={theme.token1} isLeft={false} />\n          </Row>\n        )}\n      </StatItemColumn>\n      {poolData?.tvlUSD && (\n        <StatItem title={<Trans>TVL</Trans>} value={poolData.tvlUSD} delta={poolData.tvlUSDChange} />\n      )}\n      {poolData?.volumeUSD24H !== undefined && (\n        <StatItem title={<Trans>24H volume</Trans>} value={poolData.volumeUSD24H} delta={poolData.volumeUSD24HChange} />\n      )}\n      {poolData?.volumeUSD24H !== undefined && poolData?.feeTier !== undefined && (\n        <StatItem title={<Trans>24H fees</Trans>} value={poolData.volumeUSD24H * (poolData.feeTier / 1000000)} />\n      )}\n    </StatsWrapper>\n  )\n}\n\nconst StatsTextContainer = styled(Row)`\n  gap: 4px;\n  width: 100%;\n  align-items: flex-end;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    flex-direction: column;\n    gap: 0px;\n    align-items: flex-start;\n  }\n`\n\nconst StatItemText = styled(Text)`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 36px;\n  font-weight: 485;\n  line-height: 44px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    font-size: 20px;\n    line-height: 28px;\n  }\n`\n\nfunction StatItem({ title, value, delta }: { title: ReactNode; value: number; delta?: number }) {\n  const { formatNumber, formatDelta } = useFormatter()\n\n  return (\n    <StatItemColumn>\n      <ThemedText.BodySecondary>{title}</ThemedText.BodySecondary>\n      <StatsTextContainer>\n        <StatItemText>\n          {formatNumber({\n            input: value,\n            type: NumberType.FiatTokenStats,\n          })}\n        </StatItemText>\n        {!!delta && (\n          <Row width=\"max-content\" padding=\"4px 0px\">\n            <DeltaArrow delta={delta} />\n            <ThemedText.BodySecondary>{formatDelta(delta)}</ThemedText.BodySecondary>\n          </Row>\n        )}\n      </StatsTextContainer>\n    </StatItemColumn>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Scrim } from 'components/AccountDrawer'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { CurrencySelect } from 'components/CurrencyInputPanel/SwapCurrencyInputPanel'\nimport { ReverseArrow } from 'components/Icons/ReverseArrow'\nimport Row from 'components/Row'\nimport { SwapWrapperOuter } from 'components/swap/styled'\nimport { LoadingBubble } from 'components/Tokens/loading'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport { chainIdToBackendChain, SupportedInterfaceChainId } from 'constants/chains'\nimport { getPriorityWarning, StrongWarning, useTokenWarning } from 'constants/tokenSafety'\nimport { useTokenBalancesQuery } from 'graphql/data/apollo/TokenBalancesProvider'\nimport { gqlToCurrency } from 'graphql/data/util'\nimport { useScreenSize } from 'hooks/screenSize'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { Trans } from 'i18n'\nimport { Swap } from 'pages/Swap'\nimport { useMemo, useReducer } from 'react'\nimport { Plus, X } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { Z_INDEX } from 'theme/zIndex'\nimport { Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { currencyId } from 'utils/currencyId'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst PoolDetailsStatsButtonsRow = styled(Row)`\n  gap: 12px;\n  z-index: 1;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    gap: 8px;\n    position: fixed;\n    bottom: 0px;\n    left: 0;\n    margin: 8px;\n    width: calc(100% - 16px);\n    background: ${({ theme }) => theme.surface1};\n    padding: 12px 32px;\n    border: 1px solid ${({ theme }) => theme.surface3};\n    border-radius: 20px;\n    backdrop-filter: blur(10px);\n    & > :first-child {\n      margin-right: auto;\n    }\n    z-index: ${Z_INDEX.sticky};\n  }\n  @media (max-width: ${BREAKPOINTS.md}px) {\n    bottom: 56px;\n  }\n`\n\nconst PoolButton = styled.button<{ $open?: boolean; $hideOnMobile?: boolean; $fixedWidth?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 16px 12px 12px;\n  border: unset;\n  border-radius: 900px;\n  width: ${({ $open }) => ($open ? '100px' : '50%')};\n  gap: 8px;\n  color: ${({ theme, $open }) => ($open ? theme.neutral1 : theme.accent1)};\n  background-color: ${({ theme, $open }) => ($open ? theme.surface1 : opacify(12, theme.accent1))};\n  justify-content: center;\n  transition: ${({ theme }) => `width ${theme.transition.duration.medium} ${theme.transition.timing.inOut}`};\n  border: ${({ theme, $open }) => $open && `1px solid ${theme.surface3}`};\n  ${ClickableStyle}\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: ${({ $fixedWidth }) => $fixedWidth && '120px'};\n  }\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    display: ${({ $hideOnMobile }) => $hideOnMobile && 'none'};\n    width: ${({ $fixedWidth }) => !$fixedWidth && '100%'};\n  }\n`\n\nconst SwapIcon = styled(ReverseArrow)`\n  fill: ${({ theme }) => theme.accent1};\n  rotate: 90deg;\n`\n\nconst ButtonBubble = styled(LoadingBubble)`\n  height: 44px;\n  width: 175px;\n  border-radius: 900px;\n`\n\nconst SwapModalWrapper = styled(Column)<{ open?: boolean }>`\n  z-index: 0;\n  gap: 24px;\n  visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  max-height: ${({ open }) => (open ? '100vh' : '0')};\n  transition: ${({ theme }) => `max-height ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  padding-bottom: ${({ open }) => (open ? '24px' : '0')};\n\n  ${SwapWrapperOuter} {\n    &:before {\n      background-color: unset;\n    }\n  }\n\n  // Need to override the default visibility to properly hide\n  ${CurrencySelect} {\n    visibility: ${({ open }) => (open ? 'visible' : 'hidden')};\n  }\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    position: fixed;\n    width: calc(100% - 16px);\n    padding: 0px 12px 12px;\n    border-radius: 24px;\n    max-width: 480px;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: ${Z_INDEX.fixed};\n    background: ${({ theme }) => theme.surface1};\n    transition: ${({ theme }) => `opacity ${theme.transition.duration.medium} ${theme.transition.timing.ease}`};\n  }\n`\n\nconst MobileBalance = styled(Column)`\n  gap: 2px;\n  display: none;\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    display: flex;\n  }\n`\n\ninterface PoolDetailsStatsButtonsProps {\n  chainId?: SupportedInterfaceChainId\n  token0?: Token\n  token1?: Token\n  feeTier?: number\n  loading?: boolean\n}\n\nfunction findMatchingPosition(positions: PositionInfo[], token0?: Token, token1?: Token, feeTier?: number) {\n  return positions?.find(\n    (position) =>\n      (position?.details.token0.toLowerCase() === token0?.address ||\n        position?.details.token0.toLowerCase() === token1?.address) &&\n      (position?.details.token1.toLowerCase() === token0?.address ||\n        position?.details.token1.toLowerCase() === token1?.address) &&\n      position?.details.fee == feeTier &&\n      !position.closed\n  )\n}\n\nexport function PoolDetailsStatsButtons({ chainId, token0, token1, feeTier, loading }: PoolDetailsStatsButtonsProps) {\n  const { chainId: walletChainId, account } = useWeb3React()\n  const { positions: userOwnedPositions } = useMultiChainPositions(account ?? '', chainId ? [chainId] : undefined)\n  const position = userOwnedPositions && findMatchingPosition(userOwnedPositions, token0, token1, feeTier)\n  const tokenId = position?.details.tokenId\n  const switchChain = useSwitchChain()\n  const navigate = useNavigate()\n  const currency0 = token0 && gqlToCurrency(token0)\n  const currency1 = token1 && gqlToCurrency(token1)\n\n  // Mobile Balance Data\n  const { data: balanceQuery } = useTokenBalancesQuery()\n  const { balance0, balance1, balance0Fiat, balance1Fiat } = useMemo(() => {\n    const filteredBalances = balanceQuery?.portfolios?.[0]?.tokenBalances?.filter(\n      (tokenBalance) => tokenBalance?.token?.chain === chainIdToBackendChain({ chainId, withFallback: true })\n    )\n    const tokenBalance0 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token0?.address)\n    const tokenBalance1 = filteredBalances?.find((tokenBalance) => tokenBalance?.token?.address === token1?.address)\n    return {\n      balance0: tokenBalance0?.quantity ?? 0,\n      balance1: tokenBalance1?.quantity ?? 0,\n      balance0Fiat: tokenBalance0?.denominatedValue?.value ?? 0,\n      balance1Fiat: tokenBalance1?.denominatedValue?.value ?? 0,\n    }\n  }, [balanceQuery?.portfolios, chainId, token0?.address, token1?.address])\n  const { formatNumber } = useFormatter()\n  const formattedBalance0 = formatNumber({\n    input: balance0,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedBalance1 = formatNumber({\n    input: balance1,\n    type: NumberType.TokenNonTx,\n  })\n  const totalFiatValue = balance0Fiat + balance1Fiat\n  const formattedFiatValue = formatNumber({\n    input: totalFiatValue,\n    type: NumberType.PortfolioBalance,\n  })\n\n  const handleAddLiquidity = async () => {\n    if (currency0 && currency1) {\n      if (walletChainId !== chainId && chainId) await switchChain(chainId)\n      navigate(`/add/${currencyId(currency0)}/${currencyId(currency1)}/${feeTier}${tokenId ? `/${tokenId}` : ''}`)\n    }\n  }\n  const [swapModalOpen, toggleSwapModalOpen] = useReducer((state) => !state, false)\n  const isScreenSize = useScreenSize()\n  const screenSizeLargerThanTablet = isScreenSize['lg']\n  const isMobile = !isScreenSize['sm']\n  const token0Warning = useTokenWarning(token0?.address, chainId)\n  const token1Warning = useTokenWarning(token1?.address, chainId)\n  const priorityWarning = getPriorityWarning(token0Warning, token1Warning)\n\n  if (loading || !currency0 || !currency1)\n    return (\n      <PoolDetailsStatsButtonsRow data-testid=\"pdp-buttons-loading-skeleton\">\n        <MobileBalance>\n          <ButtonBubble />\n        </MobileBalance>\n        <ButtonBubble />\n        <ButtonBubble />\n      </PoolDetailsStatsButtonsRow>\n    )\n\n  return (\n    <Column gap=\"lg\">\n      <PoolDetailsStatsButtonsRow>\n        {account && (\n          <MobileBalance>\n            <ThemedText.SubHeaderSmall>\n              <Trans>Your balances</Trans>\n            </ThemedText.SubHeaderSmall>\n            <Row gap=\"8px\">\n              <ThemedText.HeadlineSmall>\n                {formattedBalance0} {currency0.symbol}\n              </ThemedText.HeadlineSmall>\n              <ThemedText.HeadlineSmall color=\"neutral3\">|</ThemedText.HeadlineSmall>\n              <ThemedText.HeadlineSmall>\n                {formattedBalance1} {currency1.symbol}\n              </ThemedText.HeadlineSmall>\n              {Boolean(totalFiatValue) && !isMobile && <ThemedText.Caption>({formattedFiatValue})</ThemedText.Caption>}\n            </Row>\n          </MobileBalance>\n        )}\n        <PoolButton\n          onClick={toggleSwapModalOpen}\n          $open={swapModalOpen}\n          $fixedWidth={Boolean(account)}\n          data-testid={`pool-details-${swapModalOpen ? 'close' : 'swap'}-button`}\n        >\n          {swapModalOpen ? (\n            <>\n              {screenSizeLargerThanTablet && <X size={20} />}\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Close</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          ) : (\n            <>\n              {screenSizeLargerThanTablet && <SwapIcon />}\n              <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n                <Trans>Swap</Trans>\n              </ThemedText.BodyPrimary>\n            </>\n          )}\n        </PoolButton>\n        <PoolButton\n          onClick={handleAddLiquidity}\n          data-testid=\"pool-details-add-liquidity-button\"\n          $fixedWidth={Boolean(account)}\n          $hideOnMobile\n        >\n          {screenSizeLargerThanTablet && <Plus size={20} />}\n          <ThemedText.BodyPrimary fontWeight={535} color=\"accentActive\">\n            <Trans>Add liquidity</Trans>\n          </ThemedText.BodyPrimary>\n        </PoolButton>\n      </PoolDetailsStatsButtonsRow>\n      <SwapModalWrapper open={swapModalOpen} data-testid=\"pool-details-swap-modal\">\n        <Swap\n          syncTabToUrl={false}\n          chainId={chainId}\n          initialInputCurrency={currency0}\n          initialOutputCurrency={currency1}\n          compact\n          disableTokenInputs={chainId !== walletChainId}\n        />\n        {Boolean(priorityWarning) && (\n          <TokenSafetyMessage\n            tokenAddress={(priorityWarning === token0Warning ? token0?.address : token1?.address) ?? ''}\n            warning={priorityWarning ?? StrongWarning}\n            plural={Boolean(token0Warning && token1Warning)}\n            tokenSymbol={priorityWarning === token0Warning ? token0?.symbol : token1?.symbol}\n          />\n        )}\n      </SwapModalWrapper>\n      <Scrim\n        $open={swapModalOpen && !screenSizeLargerThanTablet}\n        $maxWidth={BREAKPOINTS.lg}\n        $zIndex={Z_INDEX.sticky}\n        onClick={toggleSwapModalOpen}\n      />\n    </Column>\n  )\n}\n","type SVGProps = React.SVGProps<SVGSVGElement> & {\n  fill?: string\n  height?: string | number\n  width?: string | number\n  gradientId?: string\n}\n\nexport const ClosedCircle = (props: SVGProps) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" {...props}>\n    <g clipPath=\"url(#clip0_2958_135280)\">\n      <path\n        d=\"M6 11C8.76142 11 11 8.76142 11 6C11 3.23858 8.76142 1 6 1C3.23858 1 1 3.23858 1 6C1 8.76142 3.23858 11 6 11Z\"\n        stroke=\"#9B9B9B\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path d=\"M2.46484 2.46509L9.53484 9.53509\" stroke=\"#9B9B9B\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2958_135280\">\n        <rect width=\"12\" height=\"12\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n\nexport const DoubleArrow = (props: SVGProps) => (\n  <svg width=\"14\" height=\"9\" viewBox=\"0 0 14 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M4.00284 8.5L0.184659 4.68182L4.00284 0.863636L4.65909 1.51136L1.95739 4.21307H12.1335L9.43182 1.51136L10.0881 0.863636L13.9062 4.68182L10.0881 8.5L9.43182 7.84375L12.1335 5.15057H1.95739L4.65909 7.84375L4.00284 8.5Z\"\n      fill=\"#5E5E5E\"\n    />\n  </svg>\n)\n","import { useWeb3React } from '@web3-react/core'\nimport { PositionInfo } from 'components/AccountDrawer/MiniPortfolio/Pools/cache'\nimport Column from 'components/Column'\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\nimport { ClosedCircle, DoubleArrow } from 'components/Pools/PoolDetails/icons'\nimport Row from 'components/Row'\nimport { BIPS_BASE } from 'constants/misc'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useSwitchChain } from 'hooks/useSwitchChain'\nimport { Trans } from 'i18n'\nimport { useCallback } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nconst PositionTableWrapper = styled(Column)`\n  gap: 24px;\n  margin-top: 24px;\n  width: 100%;\n`\n\nconst PositionWrapper = styled(Column)`\n  gap: 4px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 12px;\n  width: 100%;\n  ${ClickableStyle}\n  padding: 16px;\n`\n\nconst FeeTier = styled(ThemedText.LabelMicro)`\n  padding: 4px 6px;\n  background: ${({ theme }) => theme.surface2};\n`\n\nconst StatusWrapper = styled(Row)<{ status: PositionStatus }>`\n  gap: 8px;\n  width: max-content;\n  margin-right: 0;\n  margin-left: auto;\n  color: ${({ theme, status }) =>\n    status === PositionStatus.IN_RANGE\n      ? theme.success\n      : status === PositionStatus.OUT_OF_RANGE\n      ? theme.deprecated_accentWarning\n      : theme.neutral2};\n`\n\nconst RangeWrapper = styled(Row)`\n  gap: 10px;\n\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: column;\n    gap: 4px;\n    align-items: flex-start;\n  }\n`\n\nconst StyledDoubleArrow = styled(DoubleArrow)`\n  @media screen and (max-width: ${BREAKPOINTS.sm}px) {\n    display: none;\n  }\n`\n\nconst RangeText = styled(ThemedText.Caption)`\n  width: max-content;\n  white-space: nowrap;\n`\n\nconst StyledDot = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.success};\n`\n\nenum PositionStatus {\n  IN_RANGE = 'In range',\n  OUT_OF_RANGE = 'Out of range',\n  CLOSED = 'Closed',\n}\n\nfunction PositionRow({ positionInfo }: { positionInfo: PositionInfo }) {\n  const tokens = [\n    useCurrency(positionInfo.details.token0, positionInfo.chainId),\n    useCurrency(positionInfo.details.token1, positionInfo.chainId),\n  ]\n  const { chainId: walletChainId } = useWeb3React()\n  const navigate = useNavigate()\n  const switchChain = useSwitchChain()\n  const theme = useTheme()\n  const { formatTickPrice } = useFormatter()\n\n  const onClick = useCallback(async () => {\n    if (walletChainId !== positionInfo.chainId) await switchChain(positionInfo.chainId)\n    navigate('/pool/' + positionInfo.details.tokenId)\n  }, [navigate, positionInfo.chainId, positionInfo.details.tokenId, switchChain, walletChainId])\n\n  const status = positionInfo.inRange\n    ? PositionStatus.IN_RANGE\n    : positionInfo.closed\n    ? PositionStatus.CLOSED\n    : PositionStatus.OUT_OF_RANGE\n\n  const priceUpper = positionInfo.position.token0PriceLower.invert()\n  const priceLower = positionInfo.position.token0PriceUpper.invert()\n\n  const ticksAtLimit = {\n    LOWER: parseFloat(priceLower.toFixed(0)) === 0,\n    UPPER: parseFloat(priceUpper.toFixed(0)) > Number.MAX_SAFE_INTEGER,\n  }\n\n  return (\n    <PositionWrapper onClick={onClick}>\n      <Row gap=\"8px\">\n        <DoubleCurrencyLogo currencies={tokens} size={16} />\n        <ThemedText.SubHeader>\n          {positionInfo.pool.token0.symbol}/{positionInfo.pool.token1.symbol}\n        </ThemedText.SubHeader>\n        <FeeTier>{positionInfo.pool.fee / BIPS_BASE}%</FeeTier>\n        <StatusWrapper status={status}>\n          <ThemedText.Caption color=\"inherit\">{status}</ThemedText.Caption>\n          {status === PositionStatus.IN_RANGE && <StyledDot />}\n          {status === PositionStatus.OUT_OF_RANGE && <AlertTriangle size={12} color={theme.deprecated_accentWarning} />}\n          {status === PositionStatus.CLOSED && <ClosedCircle />}\n        </StatusWrapper>\n      </Row>\n      <RangeWrapper>\n        <RangeText data-testid={`position-min-${priceLower.toFixed(0)}`}>\n          <Trans>Min:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceLower,\n            atLimit: ticksAtLimit,\n            direction: Bound.LOWER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n        <StyledDoubleArrow />\n        <RangeText data-testid={`position-max-${priceUpper.toFixed(0)}`}>\n          <Trans>Max:</Trans>&nbsp;\n          {formatTickPrice({\n            price: priceUpper,\n            atLimit: ticksAtLimit,\n            direction: Bound.UPPER,\n          })}\n          &nbsp;\n          {positionInfo.pool.token0.symbol}&nbsp;\n          <Trans>per</Trans>&nbsp;\n          {positionInfo.pool.token1.symbol}\n        </RangeText>\n      </RangeWrapper>\n    </PositionWrapper>\n  )\n}\n\nexport function PoolDetailsPositionsTable({ positions }: { positions: PositionInfo[] }) {\n  return (\n    <PositionTableWrapper>\n      {positions.map((position, index) => (\n        <PositionRow positionInfo={position} key={`pool-position-${index}`} />\n      ))}\n    </PositionTableWrapper>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { useCallback, useMemo, useRef } from 'react'\nimport {\n  PoolTransactionType,\n  ProtocolVersion,\n  Token,\n  V2PairTransactionsQuery,\n  V3PoolTransactionsQuery,\n  useV2PairTransactionsQuery,\n  useV3PoolTransactionsQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { FeatureFlags } from 'uniswap/src/features/gating/flags'\nimport { useFeatureFlag } from 'uniswap/src/features/gating/hooks'\n\nexport enum PoolTableTransactionType {\n  BUY = 'Buy',\n  SELL = 'Sell',\n  BURN = 'Burn',\n  MINT = 'Mint',\n}\n\nexport interface PoolTableTransaction {\n  timestamp: number\n  transaction: string\n  pool: {\n    token0: {\n      id: string\n      symbol: string\n    }\n    token1: {\n      id: string\n      symbol: string\n    }\n  }\n  maker: string\n  amount0: number\n  amount1: number\n  amountUSD: number\n  type: PoolTableTransactionType\n}\n\nconst PoolTransactionDefaultQuerySize = 25\n\nexport function usePoolTransactions(\n  address: string,\n  chainId?: SupportedInterfaceChainId,\n  // sortState: PoolTxTableSortState, TODO(WEB-3706): Implement sorting when BE supports\n  filter: PoolTableTransactionType[] = [\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.BURN,\n    PoolTableTransactionType.MINT,\n  ],\n  token0?: Token,\n  protocolVersion: ProtocolVersion = ProtocolVersion.V3,\n  first = PoolTransactionDefaultQuerySize\n) {\n  const v2ExploreEnabled = useFeatureFlag(FeatureFlags.V2Explore)\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n    fetchMore: fetchMoreV3,\n  } = useV3PoolTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: protocolVersion !== ProtocolVersion.V3,\n  })\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n    fetchMore: fetchMoreV2,\n  } = useV2PairTransactionsQuery({\n    variables: { first, chain: chainIdToBackendChain({ chainId, withFallback: true }), address },\n    skip: !chainId || protocolVersion !== ProtocolVersion.V2 || (chainId !== ChainId.MAINNET && !v2ExploreEnabled),\n  })\n  const loadingMore = useRef(false)\n  const { transactions, loading, fetchMore, error } =\n    protocolVersion === ProtocolVersion.V3\n      ? { transactions: dataV3?.v3Pool?.transactions, loading: loadingV3, fetchMore: fetchMoreV3, error: errorV3 }\n      : { transactions: dataV2?.v2Pair?.transactions, loading: loadingV2, fetchMore: fetchMoreV2, error: errorV2 }\n\n  const loadMore = useCallback(\n    ({ onComplete }: { onComplete?: () => void }) => {\n      if (loadingMore.current) {\n        return\n      }\n      loadingMore.current = true\n      fetchMore({\n        variables: {\n          cursor: transactions?.[transactions.length - 1]?.timestamp,\n        },\n        updateQuery: (prev, { fetchMoreResult }: any) => {\n          if (!fetchMoreResult) return prev\n          onComplete?.()\n          const mergedData =\n            protocolVersion === ProtocolVersion.V3\n              ? {\n                  v3Pool: {\n                    ...fetchMoreResult.v3Pool,\n                    transactions: [\n                      ...((prev as V3PoolTransactionsQuery).v3Pool?.transactions ?? []),\n                      ...fetchMoreResult.v3Pool.transactions,\n                    ],\n                  },\n                }\n              : {\n                  v2Pair: {\n                    ...fetchMoreResult.v2Pair,\n                    transactions: [\n                      ...((prev as V2PairTransactionsQuery).v2Pair?.transactions ?? []),\n                      ...fetchMoreResult.v2Pair.transactions,\n                    ],\n                  },\n                }\n          loadingMore.current = false\n          return mergedData\n        },\n      })\n    },\n    [fetchMore, transactions, protocolVersion]\n  )\n\n  const filteredTransactions = useMemo(() => {\n    return (transactions ?? [])\n      ?.map((tx) => {\n        if (!tx) {\n          return undefined\n        }\n        const tokenIn = parseFloat(tx.token0Quantity) > 0 ? tx.token0 : tx.token1\n        const isSell = tokenIn?.address?.toLowerCase() === token0?.address?.toLowerCase()\n        const type =\n          tx.type === PoolTransactionType.Swap\n            ? isSell\n              ? PoolTableTransactionType.SELL\n              : PoolTableTransactionType.BUY\n            : tx.type === PoolTransactionType.Remove\n            ? PoolTableTransactionType.BURN\n            : PoolTableTransactionType.MINT\n        if (!filter.includes(type)) return undefined\n        return {\n          timestamp: tx.timestamp,\n          transaction: tx.hash,\n          pool: {\n            token0: {\n              id: tx.token0.address ?? '',\n              symbol: tx.token0.symbol ?? '',\n            },\n            token1: {\n              id: tx.token1.address ?? '',\n              symbol: tx.token1.symbol ?? '',\n            },\n          },\n          maker: tx.account,\n          amount0: parseFloat(tx.token0Quantity),\n          amount1: parseFloat(tx.token1Quantity),\n          amountUSD: tx.usdValue.value,\n          type,\n        }\n      })\n      .filter((value: PoolTableTransaction | undefined): value is PoolTableTransaction => value !== undefined)\n  }, [transactions, filter, token0?.address])\n\n  return useMemo(() => {\n    return {\n      transactions: filteredTransactions,\n      loading,\n      loadMore,\n      error,\n    }\n  }, [filteredTransactions, loading, loadMore, error])\n}\n","import { createColumnHelper } from '@tanstack/react-table'\nimport Row from 'components/Row'\nimport { Table } from 'components/Table'\nimport { Cell } from 'components/Table/Cell'\nimport { Filter } from 'components/Table/Filter'\nimport { FilterHeaderRow, HeaderArrow, HeaderSortText, TimestampCell } from 'components/Table/styled'\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { NATIVE_CHAIN_ID, WRAPPED_NATIVE_CURRENCY } from 'constants/tokens'\nimport {\n  PoolTableTransaction,\n  PoolTableTransactionType,\n  usePoolTransactions,\n} from 'graphql/data/pools/usePoolTransactions'\nimport { getSupportedGraphQlChain, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { OrderDirection, Transaction_OrderBy } from 'graphql/thegraph/__generated__/types-and-hooks'\nimport { useActiveLocalCurrency } from 'hooks/useActiveLocalCurrency'\nimport { Trans } from 'i18n'\nimport { useMemo, useReducer, useState } from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { shortenAddress } from 'utilities/src/addresses'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nconst StyledExternalLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.neutral2};\n  stroke: ${({ theme }) => theme.neutral2};\n`\n\nconst TableWrapper = styled.div`\n  min-height: 256px;\n`\n\ntype PoolTxTableSortState = {\n  sortBy: Transaction_OrderBy\n  sortDirection: OrderDirection\n}\n\nenum PoolTransactionColumn {\n  Timestamp,\n  Type,\n  MakerAddress,\n  FiatValue,\n  InputAmount,\n  OutputAmount,\n}\n\nconst PoolTransactionColumnWidth: { [key in PoolTransactionColumn]: number } = {\n  [PoolTransactionColumn.Timestamp]: 120,\n  [PoolTransactionColumn.Type]: 144,\n  [PoolTransactionColumn.MakerAddress]: 100,\n  [PoolTransactionColumn.FiatValue]: 125,\n  [PoolTransactionColumn.InputAmount]: 125,\n  [PoolTransactionColumn.OutputAmount]: 125,\n}\n\nfunction comparePoolTokens(tokenA: PoolTableTransaction['pool']['token0'], tokenB?: Token) {\n  if (tokenB?.address === NATIVE_CHAIN_ID) {\n    const chainId = supportedChainIdFromGQLChain(tokenB.chain)\n    return chainId && tokenA.id.toLowerCase() === WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase()\n  }\n  return tokenA.id.toLowerCase() === tokenB?.address?.toLowerCase()\n}\n\nexport function PoolDetailsTransactionsTable({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n  protocolVersion?: ProtocolVersion\n}) {\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true })\n  const activeLocalCurrency = useActiveLocalCurrency()\n  const { formatNumber, formatFiatPrice } = useFormatter()\n  const [filterModalIsOpen, toggleFilterModal] = useReducer((s) => !s, false)\n  const [filter, setFilters] = useState<PoolTableTransactionType[]>([\n    PoolTableTransactionType.BUY,\n    PoolTableTransactionType.SELL,\n    PoolTableTransactionType.BURN,\n    PoolTableTransactionType.MINT,\n  ])\n\n  const [sortState] = useState<PoolTxTableSortState>({\n    sortBy: Transaction_OrderBy.Timestamp,\n    sortDirection: OrderDirection.Desc,\n  })\n  const { transactions, loading, loadMore, error } = usePoolTransactions(\n    poolAddress,\n    chain.id,\n    filter,\n    token0,\n    protocolVersion\n  )\n\n  const showLoadingSkeleton = loading || !!error\n  const columns = useMemo(() => {\n    const columnHelper = createColumnHelper<PoolTableTransaction>()\n    return [\n      columnHelper.accessor((row) => row, {\n        id: 'timestamp',\n        header: () => (\n          <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Timestamp]} justifyContent=\"flex-start\">\n            <Row gap=\"4px\">\n              {sortState.sortBy === Transaction_OrderBy.Timestamp && <HeaderArrow direction={OrderDirection.Desc} />}\n              <HeaderSortText $active={sortState.sortBy === Transaction_OrderBy.Timestamp}>\n                <Trans>Time</Trans>\n              </HeaderSortText>\n            </Row>\n          </Cell>\n        ),\n        cell: (row) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Timestamp]}\n            justifyContent=\"flex-start\"\n          >\n            <TimestampCell\n              timestamp={Number(row.getValue?.().timestamp)}\n              link={getExplorerLink(chain.id, row.getValue?.().transaction, ExplorerDataType.TRANSACTION)}\n            />\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor(\n        (row) => {\n          let color, text\n          if (row.type === PoolTableTransactionType.BUY) {\n            color = 'success'\n            text = (\n              <span>\n                <Trans>Buy</Trans>&nbsp;{token0?.symbol}\n              </span>\n            )\n          } else if (row.type === PoolTableTransactionType.SELL) {\n            color = 'critical'\n            text = (\n              <span>\n                <Trans>Sell</Trans>&nbsp;{token0?.symbol}\n              </span>\n            )\n          } else {\n            color = row.type === PoolTableTransactionType.MINT ? 'success' : 'critical'\n            text = row.type === PoolTableTransactionType.MINT ? <Trans>Add</Trans> : <Trans>Remove</Trans>\n          }\n          return <ThemedText.BodyPrimary color={color}>{text}</ThemedText.BodyPrimary>\n        },\n        {\n          id: 'swap-type',\n          header: () => (\n            <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Type]} justifyContent=\"flex-start\">\n              <FilterHeaderRow modalOpen={filterModalIsOpen} onClick={() => toggleFilterModal()}>\n                <Filter\n                  allFilters={Object.values(PoolTableTransactionType)}\n                  activeFilter={filter}\n                  setFilters={setFilters}\n                  isOpen={filterModalIsOpen}\n                  toggleFilterModal={toggleFilterModal}\n                />\n                <ThemedText.BodySecondary>\n                  <Trans>Type</Trans>\n                </ThemedText.BodySecondary>\n              </FilterHeaderRow>\n            </Cell>\n          ),\n          cell: (PoolTransactionTableType) => (\n            <Cell\n              loading={showLoadingSkeleton}\n              minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.Type]}\n              justifyContent=\"flex-start\"\n            >\n              {PoolTransactionTableType.getValue?.()}\n            </Cell>\n          ),\n        }\n      ),\n      columnHelper.accessor((row) => row.amountUSD, {\n        id: 'fiat-value',\n        header: () => (\n          <Cell minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.FiatValue]} justifyContent=\"flex-end\" grow>\n            <ThemedText.BodySecondary>{activeLocalCurrency}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (fiat) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.FiatValue]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>{formatFiatPrice({ price: fiat.getValue?.() })}</ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => (comparePoolTokens(row.pool.token0, token0) ? row.amount0 : row.amount1), {\n        id: 'input-amount',\n        header: () => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.InputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>{token0?.symbol}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (inputTokenAmount) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.InputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>\n              {formatNumber({ input: Math.abs(inputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n            </ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => (comparePoolTokens(row.pool.token0, token0) ? row.amount1 : row.amount0), {\n        id: 'output-amount',\n        header: () => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.OutputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>{token1?.symbol}</ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (outputTokenAmount) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.OutputAmount]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodyPrimary>\n              {formatNumber({ input: Math.abs(outputTokenAmount.getValue?.() ?? 0), type: NumberType.TokenTx })}\n            </ThemedText.BodyPrimary>\n          </Cell>\n        ),\n      }),\n      columnHelper.accessor((row) => row.maker, {\n        id: 'maker-address',\n        header: () => (\n          <Cell\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.MakerAddress]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <ThemedText.BodySecondary>\n              <Trans>Wallet</Trans>\n            </ThemedText.BodySecondary>\n          </Cell>\n        ),\n        cell: (makerAddress) => (\n          <Cell\n            loading={showLoadingSkeleton}\n            minWidth={PoolTransactionColumnWidth[PoolTransactionColumn.MakerAddress]}\n            justifyContent=\"flex-end\"\n            grow\n          >\n            <StyledExternalLink href={getExplorerLink(chain.id, makerAddress.getValue?.(), ExplorerDataType.ADDRESS)}>\n              <ThemedText.BodyPrimary>{shortenAddress(makerAddress.getValue?.(), 0)}</ThemedText.BodyPrimary>\n            </StyledExternalLink>\n          </Cell>\n        ),\n      }),\n    ]\n  }, [\n    activeLocalCurrency,\n    chain.id,\n    filter,\n    filterModalIsOpen,\n    formatFiatPrice,\n    formatNumber,\n    showLoadingSkeleton,\n    sortState.sortBy,\n    token0,\n    token1?.symbol,\n  ])\n\n  return (\n    <TableWrapper data-testid=\"pool-details-transactions-table\">\n      <Table\n        columns={columns}\n        data={transactions}\n        loading={loading}\n        error={error}\n        loadMore={loadMore}\n        maxHeight={600}\n      />\n    </TableWrapper>\n  )\n}\n","import { Pool } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport useMultiChainPositions from 'components/AccountDrawer/MiniPortfolio/Pools/useMultiChainPositions'\nimport Column from 'components/Column'\nimport { PoolDetailsPositionsTable } from 'components/Pools/PoolDetails/PoolDetailsPositionsTable'\nimport Row from 'components/Row'\nimport { getSupportedGraphQlChain } from 'graphql/data/util'\nimport { Trans } from 'i18n'\nimport { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { ClickableStyle, ThemedText } from 'theme/components'\nimport { ProtocolVersion, Token } from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\n\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { PoolDetailsTransactionsTable } from './PoolDetailsTransactionsTable'\n\nenum PoolDetailsTableTabs {\n  TRANSACTIONS = 'transactions',\n  POSITIONS = 'positions',\n}\n\nconst TableHeader = styled(ThemedText.HeadlineMedium)<{ active: boolean }>`\n  color: ${({ theme, active }) => !active && theme.neutral2};\n  ${({ disabled }) => !disabled && ClickableStyle}\n  user-select: none;\n`\n\nexport function PoolDetailsTableTab({\n  poolAddress,\n  token0,\n  token1,\n  protocolVersion,\n}: {\n  poolAddress: string\n  token0?: Token\n  token1?: Token\n  protocolVersion?: ProtocolVersion\n}) {\n  const [activeTable, setActiveTable] = useState<PoolDetailsTableTabs>(PoolDetailsTableTabs.TRANSACTIONS)\n  const chain = getSupportedGraphQlChain(useChainFromUrlParam(), { fallbackToEthereum: true })\n  const { account } = useWeb3React()\n  const { positions } = useMultiChainPositions(account ?? '', [chain.id])\n  const positionsInThisPool = useMemo(\n    () =>\n      positions?.filter(\n        (position) =>\n          Pool.getAddress(position.pool.token0, position.pool.token1, position.pool.fee).toLowerCase() ===\n          poolAddress.toLowerCase()\n      ) ?? [],\n    [poolAddress, positions]\n  )\n  return (\n    <Column gap=\"lg\">\n      <Row gap=\"16px\">\n        <TableHeader\n          active={activeTable === PoolDetailsTableTabs.TRANSACTIONS}\n          onClick={() => setActiveTable(PoolDetailsTableTabs.TRANSACTIONS)}\n          disabled={!positionsInThisPool.length}\n        >\n          <Trans>Transactions</Trans>\n        </TableHeader>\n        {Boolean(positionsInThisPool.length) && (\n          <TableHeader\n            active={activeTable === PoolDetailsTableTabs.POSITIONS}\n            onClick={() => setActiveTable(PoolDetailsTableTabs.POSITIONS)}\n          >\n            <Trans>Positions</Trans>\n            {` (${positionsInThisPool?.length})`}\n          </TableHeader>\n        )}\n      </Row>\n      {activeTable === PoolDetailsTableTabs.TRANSACTIONS ? (\n        <PoolDetailsTransactionsTable\n          poolAddress={poolAddress}\n          token0={token0}\n          token1={token1}\n          protocolVersion={protocolVersion}\n        />\n      ) : (\n        <PoolDetailsPositionsTable positions={positionsInThisPool} />\n      )}\n    </Column>\n  )\n}\n","import { ChainId } from '@uniswap/sdk-core'\nimport { SupportedInterfaceChainId, chainIdToBackendChain } from 'constants/chains'\nimport { V2_BIPS } from 'graphql/data/pools/useTopPools'\nimport ms from 'ms'\nimport { useMemo } from 'react'\nimport {\n  ProtocolVersion,\n  Token,\n  useV2PairQuery,\n  useV3PoolQuery,\n} from 'uniswap/src/data/graphql/uniswap-data-api/__generated__/types-and-hooks'\nimport { FeatureFlags } from 'uniswap/src/features/gating/flags'\nimport { useFeatureFlag } from 'uniswap/src/features/gating/hooks'\n\nexport interface PoolData {\n  // basic pool info\n  address: string\n  feeTier?: number\n  txCount?: number\n  protocolVersion?: ProtocolVersion\n\n  // token info\n  token0: Token\n  tvlToken0?: number\n  token0Price?: number\n\n  token1: Token\n  tvlToken1?: number\n  token1Price?: number\n\n  // volume\n  volumeUSD24H?: number\n  volumeUSD24HChange?: number\n\n  // liquidity\n  tvlUSD?: number\n  tvlUSDChange?: number\n}\n\ntype VolumeChange = { value: number; timestamp: number }\n\n/**\n * Given an array of historical volume, calculate the 24h % change in volume\n */\nfunction calc24HVolChange(historicalVolume?: (VolumeChange | undefined)[]) {\n  if (!historicalVolume) {\n    return undefined\n  }\n  const currentTime = new Date().getTime()\n  const dayAgo = (currentTime - ms('1d')) / 1000\n  const twoDaysAgo = (currentTime - ms('2d')) / 1000\n\n  const volume24h = historicalVolume\n    .filter((entry): entry is VolumeChange => entry?.timestamp !== undefined && entry.timestamp >= dayAgo)\n    .reduce((acc, cur) => acc + cur.value, 0)\n  const volume48h = historicalVolume\n    .filter(\n      (entry): entry is VolumeChange =>\n        entry?.timestamp !== undefined && entry.timestamp >= twoDaysAgo && entry.timestamp < dayAgo\n    )\n    .reduce((acc, cur) => acc + cur.value, 0)\n  return ((volume24h - volume48h) / volume48h) * 100\n}\n\n/**\n * Queries both v3 and v2 for pool data\n * @param poolAddress\n * @param chainId\n * @returns\n */\nexport function usePoolData(\n  poolAddress: string,\n  chainId?: SupportedInterfaceChainId\n): {\n  loading: boolean\n  error: boolean\n  data?: PoolData\n} {\n  const v2ExploreEnabled = useFeatureFlag(FeatureFlags.V2Explore)\n  const {\n    loading: loadingV3,\n    error: errorV3,\n    data: dataV3,\n  } = useV3PoolQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    errorPolicy: 'all',\n  })\n  const {\n    loading: loadingV2,\n    error: errorV2,\n    data: dataV2,\n  } = useV2PairQuery({\n    variables: { chain: chainIdToBackendChain({ chainId, withFallback: true }), address: poolAddress },\n    skip: !chainId || (chainId !== ChainId.MAINNET && !v2ExploreEnabled),\n    errorPolicy: 'all',\n  })\n\n  return useMemo(() => {\n    const anyError = Boolean(errorV3 || (errorV2 && (chainId === ChainId.MAINNET || v2ExploreEnabled)))\n    const anyLoading = Boolean(loadingV3 || (loadingV2 && (chainId === ChainId.MAINNET || v2ExploreEnabled)))\n\n    const pool = dataV3?.v3Pool ?? dataV2?.v2Pair ?? undefined\n    const feeTier = dataV3?.v3Pool?.feeTier ?? V2_BIPS\n\n    return {\n      data: pool\n        ? {\n            address: pool.address,\n            txCount: pool.txCount,\n            protocolVersion: pool.protocolVersion,\n            token0: pool.token0 as Token,\n            tvlToken0: pool.token0Supply,\n            token0Price: pool.token0?.project?.markets?.[0]?.price?.value,\n            token1: pool.token1 as Token,\n            tvlToken1: pool.token1Supply,\n            token1Price: pool.token1?.project?.markets?.[0]?.price?.value,\n            feeTier,\n            volumeUSD24H: pool.volume24h?.value,\n            volumeUSD24HChange: calc24HVolChange(pool.historicalVolume?.concat()),\n            tvlUSD: pool.totalLiquidity?.value,\n            tvlUSDChange: pool.totalLiquidityPercentChange24h?.value,\n          }\n        : undefined,\n      error: anyError,\n      loading: anyLoading,\n    }\n  }, [chainId, dataV2?.v2Pair, dataV3?.v3Pool, errorV2, errorV3, loadingV2, loadingV3, v2ExploreEnabled])\n}\n","import { PoolData } from 'graphql/data/pools/usePoolData'\nimport { t } from 'i18n'\n\nexport const getPoolDetailPageTitle = (poolData?: PoolData) => {\n  const token0Symbol = poolData?.token0.symbol\n  const token1Symbol = poolData?.token1.symbol\n  const baseTitle = t`Buy and sell on Uniswap`\n  if (!token0Symbol || !token1Symbol) {\n    return baseTitle\n  }\n\n  return `${token0Symbol}/${token1Symbol}: ${baseTitle}`\n}\n","import { InterfacePageName } from '@uniswap/analytics-events'\nimport { Trace } from 'analytics'\nimport Column from 'components/Column'\nimport ChartSection from 'components/Pools/PoolDetails/ChartSection'\nimport { PoolDetailsBreadcrumb, PoolDetailsHeader } from 'components/Pools/PoolDetails/PoolDetailsHeader'\nimport { PoolDetailsLink } from 'components/Pools/PoolDetails/PoolDetailsLink'\nimport { PoolDetailsStats } from 'components/Pools/PoolDetails/PoolDetailsStats'\nimport { PoolDetailsStatsButtons } from 'components/Pools/PoolDetails/PoolDetailsStatsButtons'\nimport { PoolDetailsTableTab } from 'components/Pools/PoolDetails/PoolDetailsTable'\nimport Row from 'components/Row'\nimport { useChainFromUrlParam } from 'constants/chains'\nimport { PoolData, usePoolData } from 'graphql/data/pools/usePoolData'\nimport { getSupportedGraphQlChain, gqlToCurrency, unwrapToken } from 'graphql/data/util'\nimport { useColor } from 'hooks/useColor'\nimport { Trans } from 'i18n'\nimport NotFound from 'pages/NotFound'\nimport { getPoolDetailPageTitle } from 'pages/PoolDetails/utils'\nimport { useDynamicMetatags } from 'pages/metatags'\nimport { useMemo, useReducer } from 'react'\nimport { Helmet } from 'react-helmet-async/lib/index'\nimport { useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS, ThemeProvider } from 'theme'\nimport { isAddress } from 'utilities/src/addresses'\n\nconst PageWrapper = styled(Row)`\n  padding: 0 16px 52px;\n  justify-content: center;\n  width: 100%;\n  gap: 40px;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    padding: 48px 20px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 0px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    gap: 60px;\n  }\n`\n\nconst LeftColumn = styled(Column)`\n  gap: 40px;\n  max-width: 780px;\n  overflow: hidden;\n  justify-content: flex-start;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    width: 100%;\n    max-width: unset;\n  }\n`\n\nconst HR = styled.hr`\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  width: 100%;\n`\n\nconst RightColumn = styled(Column)`\n  gap: 24px;\n  width: 360px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) {\n    margin: 44px 0px;\n    width: 100%;\n    min-width: unset;\n    & > *:first-child {\n      margin-top: -24px;\n    }\n  }\n`\n\nconst TokenDetailsWrapper = styled(Column)`\n  gap: 24px;\n  padding: 20px;\n\n  @media (max-width: ${BREAKPOINTS.lg}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: unset;\n  }\n\n  @media (max-width: ${BREAKPOINTS.sm}px) {\n    padding: unset;\n  }\n`\n\nconst TokenDetailsHeader = styled(Text)`\n  width: 100%;\n  font-size: 24px;\n  font-weight: 485;\n  line-height: 32px;\n`\n\nconst LinksContainer = styled(Column)`\n  gap: 16px;\n  width: 100%;\n`\n\nfunction getUnwrappedPoolToken(poolData?: PoolData, chainId?: number) {\n  return poolData?.token0 && poolData?.token1 && chainId\n    ? [unwrapToken(chainId, poolData?.token0), unwrapToken(chainId, poolData?.token1)]\n    : [undefined, undefined]\n}\n\nexport default function PoolDetailsPage() {\n  const { poolAddress } = useParams<{ poolAddress: string }>()\n  const chainInfo = getSupportedGraphQlChain(useChainFromUrlParam())\n  const { data: poolData, loading } = usePoolData(poolAddress?.toLowerCase() ?? '', chainInfo?.id)\n  const [isReversed, toggleReversed] = useReducer((x) => !x, false)\n  const unwrappedTokens = getUnwrappedPoolToken(poolData, chainInfo?.id)\n  const [token0, token1] = isReversed ? [unwrappedTokens?.[1], unwrappedTokens?.[0]] : unwrappedTokens\n\n  const { darkMode, surface2, accent1 } = useTheme()\n  const color0 = useColor(token0 && gqlToCurrency(token0), {\n    backgroundColor: surface2,\n    darkMode,\n  })\n  const color1 = useColor(token1 && gqlToCurrency(token1), {\n    backgroundColor: surface2,\n    darkMode,\n  })\n\n  const isInvalidPool = !poolAddress || !chainInfo || !isAddress(poolAddress)\n  const poolNotFound = (!loading && !poolData) || isInvalidPool\n\n  const metatagProperties = useMemo(() => {\n    const token0Symbol = poolData?.token0.symbol\n    const token1Symbol = poolData?.token1.symbol\n    const poolName = `${token0Symbol}/${token1Symbol}`\n    const chainName = chainInfo?.label ?? 'Ethereum'\n    return {\n      title: poolName,\n      url: window.location.href,\n      description: `Swap ${poolName} on ${chainName}. Trade tokens and provide liquidity. Real-time prices, charts, transaction data, and more.`,\n    }\n  }, [chainInfo?.label, poolData?.token0.symbol, poolData?.token1.symbol])\n  const metatags = useDynamicMetatags(metatagProperties)\n\n  if (poolNotFound) return <NotFound />\n  return (\n    <ThemeProvider token0={color0 !== accent1 ? color0 : undefined} token1={color1 !== accent1 ? color1 : undefined}>\n      <Helmet>\n        <title>{getPoolDetailPageTitle(poolData)}</title>\n        {metatags.map((tag, index) => (\n          <meta key={index} {...tag} />\n        ))}\n      </Helmet>\n      <Trace\n        page={InterfacePageName.POOL_DETAILS_PAGE}\n        properties={{\n          poolAddress,\n          chainId: chainInfo?.id,\n          feeTier: poolData?.feeTier,\n          token0Address: poolData?.token0.address,\n          token1Address: poolData?.token1.address,\n          token0Symbol: poolData?.token0.symbol,\n          token1Symbol: poolData?.token1.symbol,\n          token0Name: poolData?.token0.name,\n          token1Name: poolData?.token1.name,\n        }}\n        shouldLogImpression={!loading}\n      >\n        <PageWrapper>\n          <LeftColumn>\n            <Column gap=\"20px\">\n              <Column>\n                <PoolDetailsBreadcrumb\n                  chainId={chainInfo?.id}\n                  poolAddress={poolAddress}\n                  token0={token0}\n                  token1={token1}\n                  loading={loading}\n                />\n                <PoolDetailsHeader\n                  chainId={chainInfo?.id}\n                  poolAddress={poolAddress}\n                  token0={token0}\n                  token1={token1}\n                  feeTier={poolData?.feeTier}\n                  protocolVersion={poolData?.protocolVersion}\n                  toggleReversed={toggleReversed}\n                  loading={loading}\n                />\n              </Column>\n              <ChartSection\n                poolData={poolData}\n                loading={loading}\n                isReversed={isReversed}\n                chain={chainInfo?.backendChain.chain}\n              />\n            </Column>\n            <HR />\n            <PoolDetailsTableTab\n              poolAddress={poolAddress}\n              token0={token0}\n              token1={token1}\n              protocolVersion={poolData?.protocolVersion}\n            />\n          </LeftColumn>\n          <RightColumn>\n            <PoolDetailsStatsButtons\n              chainId={chainInfo?.id}\n              token0={token0}\n              token1={token1}\n              feeTier={poolData?.feeTier}\n              loading={loading}\n            />\n            <PoolDetailsStats poolData={poolData} isReversed={isReversed} chainId={chainInfo?.id} loading={loading} />\n            <TokenDetailsWrapper>\n              <TokenDetailsHeader>\n                <Trans>Links</Trans>\n              </TokenDetailsHeader>\n              <LinksContainer>\n                <PoolDetailsLink\n                  address={poolAddress}\n                  chainId={chainInfo?.id}\n                  tokens={[token0, token1]}\n                  loading={loading}\n                />\n                <PoolDetailsLink\n                  address={token0?.address}\n                  chainId={chainInfo?.id}\n                  tokens={[token0]}\n                  loading={loading}\n                />\n                <PoolDetailsLink\n                  address={token1?.address}\n                  chainId={chainInfo?.id}\n                  tokens={[token1]}\n                  loading={loading}\n                />\n              </LinksContainer>\n            </TokenDetailsWrapper>\n          </RightColumn>\n        </PageWrapper>\n      </Trace>\n    </ThemeProvider>\n  )\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","httpLink","HttpLink","uri","CHAIN_SUBGRAPH_URL","ChainId","MAINNET","authMiddleware","ApolloLink","operation","forward","chainId","store","getState","application","setContext","isSupportedChainId","apolloClient","ApolloClient","cache","InMemoryCache","link","concat","chainToApolloClient","fromEntries","entries","map","url","PRICE_FIXED_DIGITS","computeSurroundingTicks","token0","token1","activeTickProcessed","sortedTickData","pivot","ascending","previousTickProcessed","processedTicks","tick","Number","sdkPrice","tickToPrice","currentTickProcessed","liquidityActive","liquidityNet","JSBI","price0","toFixed","push","reverse","getActiveTick","tickCurrent","feeAmount","Math","floor","TICK_SPACINGS","undefined","MAX_THE_GRAPH_TICK_FETCH_VALUE","useAllV3Ticks","currencyA","currencyB","data","skipNumber","setSkipNumber","useState","subgraphTickData","setSubgraphTickData","error","loading","isLoading","skip","poolAddress","Pool","getAddress","wrapped","V3_CORE_FACTORY_ADDRESSES","useAllV3TicksQuery","variables","toLowerCase","pollInterval","ms","client","useTicksFromSubgraph","useEffect","ticks","tickData","usePoolActiveLiquidity","pool","defaultChainId","useWeb3React","usePoolMultichain","liquidity","sqrtPriceX96","sqrtRatioX96","currentTick","activeTick","useMemo","PoolState","EXISTS","LOADING","findIndex","console","subsequentTicks","ticksProcessed","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","tokenA","tokenB","fee","addresses","MAX_ENTRIES","slice","address","addressA","addressB","toString","found","find","computePoolAddress","unshift","getPool","pools","usePools","poolKeys","useChainId","poolTokens","equals","sortsBefore","Array","poolAddresses","v3CoreFactoryAddress","value","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","INVALID","result","slot0","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","NOT_EXISTS","eq","usePool","poolData","useRef","contractMap","contract","useContractMultichain","current","e","Image","styled","img","Container","div","Header","PageWrapper","theme","breakpoint","md","NotFound","isDarkMode","useIsDarkMode","isMobile","useIsMobile","Title","ThemedText","LargeHeader","Hero","Paragraph","HeadlineMedium","HeadlineLarge","Trace","page","InterfacePageName","NOT_FOUND","shouldLogImpression","Trans","src","darkImage","lightImage","alt","SmallButtonPrimary","as","Link","to","LiquidityBarSeriesRenderer","_data","_options","constructor","props","hoveredTick","draw","priceConverter","useBitmapCoordinateSpace","scope","_drawImpl","update","options","renderingScope","priceToCoordinate","bars","visibleRange","ctx","context","bar","x","y","originalData","calculateColumnPositionsInPlace","barSpacing","horizontalPixelRatio","from","zeroY","fillStyle","tokenAColor","stack","column","isCurrentTick","isHoveredTick","min","max","right","left","margin","widthWithMargin","totalBox","positionsBox","verticalPixelRatio","highlightOffset","canvas","highlightLength","highlightColor","beginPath","roundRect","globalAlpha","tokenBColor","position","activeTickProgress","globalCompositeOperation","activeRangeAdjustedHeight","activeRangeAdjustedPosition","fillRect","LiquidityBarSeries","_renderer","_tokenAColor","_tokenBColor","_highlightColor","priceValueBuilder","plotRow","isWhitespace","renderer","defaultOptions","customSeriesDefaultOptions","LiquidityBarChartModel","ChartModel","series","chartDiv","params","super","api","addCustomSeries","setData","updateOptions","fitContent","localization","locale","rightPriceScale","visible","borderVisible","scaleMargins","top","bottom","autoScale","timeScale","fixLeftEdge","fixRightEdge","crosshair","horzLine","labelVisible","vertLine","grid","vertLines","horzLines","applyOptions","priceFormat","type","priceLineVisible","lastValueVisible","onSeriesHover","hoverData","updatedOptions","item","activeTickIndex","midPoint","setVisibleLogicalRange","MAX_UINT128","BigNumber","pow","sub","maxAmount","token","CurrencyAmount","fromRawAmount","calculateActiveRangeTokensLocked","feeTier","liqGross","mockTicks","liquidityGross","pool1","bottomOfRangePrice","TickMath","getSqrtRatioAtTick","token1Amount","getOutputAmount","amount0Locked","parseFloat","invert","quote","toExact","topOfRangePrice","token0Amount","amount1Locked","calculateTokensLocked","tickSpacing","nextSqrtX96","maxAmountToken0","useLiquidityBarData","isReversed","formatNumber","formatPrice","useFormatter","activePoolData","setTickData","formatData","barData","activeRangePercentage","activeRangeIndex","t","fakeTime","isActive","price1","price","NumberType","SwapDetailsAmount","time","entry","activeRangeData","activeTickTvl","filter","PDP_CHART_HEIGHT_PX","PDP_CHART_SELECTOR_OPTIONS","ChartType","VOLUME","PRICE","LIQUIDITY","TimePeriodSelectorContainer","sm","ChartTypeSelectorContainer","StyledChart","Chart","PDPChartTypeSelector","chartType","onChartTypeChange","ChartTypeDropdown","currentChartType","onSelectOption","usePDPChartState","chain","protocolVersion","timePeriod","setTimePeriod","TimePeriod","DAY","setChartType","isV3","ProtocolVersion","V3","duration","toHistoryDuration","priceQuery","usePoolPriceHistoryQuery","priceHistory","v2Pair","v3Pool","referenceToken","token0Price","token1Price","timestamp","open","high","low","close","dataQuality","DataQuality","VALID","usePDPPriceChartData","volumeQuery","usePoolVolumeHistoryQuery","historicalVolume","amt","withUTCTimestamp","checkDataQuality","usePDPVolumeChartData","activeQuery","ChartSection","gqlToCurrency","Chain","Ethereum","refitChartContent","useAtomValue","refitChartContentAtom","ChartBody","ChartSkeleton","selectedChartProps","supportedChainIdFromGQLChain","LiquidityChart","errorText","stale","STALE","PriceChart","VolumeChart","filteredTimeOptions","DEFAULT_PILL_TIME_SELECTOR_OPTIONS","option","TimePeriodDisplay","HOUR","data-testid","ChartActionsContainer","PillMultiToggle","currentSelected","DISPLAYS","getTimePeriodFromDisplay","PriceDisplayContainer","ChartPriceText","EllipsisStyle","formatCurrencyAmount","primaryToken","PriceChartType","LINE","stablecoinPrice","useStablecoinPrice","lastPrice","Model","PriceChartModel","crosshairData","displayValue","currencyBAmountRaw","decimals","priceDisplay","symbol","amount","ChartHeader","additionalFields","PriceChartDelta","startingPrice","endingPrice","valueFormatterType","FiatTokenPrice","FadeInHeading","H1Medium","textFadeIn","FadeInSubheader","SubHeader","LiquidityTooltipDisplay","tokenADescriptor","tokenBDescriptor","displayValue0","input","TokenQuantityStats","displayValue1","BodySmall","name","useTheme","surface3","LoadingChart","TooltipBody","FeeAmount","LOWEST","displayPoint","display","paddingTop","DetailBubble","LoadingBubble","$height","$width","SmallDetailBubble","HeaderContainer","transition","medium","Badge","LabelMicro","surface2","ToggleReverseArrows","ReverseArrow","ClickableStyle","neutral2","IconBubble","PoolDetailsBreadcrumb","chainName","chainIdToBackendChain","withFallback","exploreOrigin","poolsOrigin","BreadcrumbNavContainer","aria-label","BreadcrumbNavLink","ChevronRight","CurrentPageBreadcrumb","poolName","StyledPoolDetailsTitle","PoolName","PoolDetailsTitle","toggleReversed","formatPercent","feePercent","Percent","BIPS_BASE","StyledLink","getTokenDetailsURL","V2","onClick","ContractsDropdownRowContainer","Row","ContractsDropdownRow","currency","isPool","currencies","isNative","NATIVE_CHAIN_ID","explorerUrl","getExplorerLink","ExplorerDataType","NATIVE","ADDRESS","TOKEN","StyledExternalLink","href","gap","DoubleCurrencyAndChainLogo","CurrencyLogo","BodyPrimary","BodySecondary","shortenAddress","ExternalLinkIcon","ContractsModalContainer","css","ActionMenuFlyoutStyle","PoolDetailsHeaderActions","contractsModalIsOpen","toggleContractsModal","useReducer","s","contractsRef","useOnClickOutside","justify","style","DropdownSelector","isOpen","toggleOpen","menuLabel","EtherscanLogo","neutral1","ExplorerIcon","internalMenuItems","tooltipText","hideChevron","buttonCss","ActionButtonStyle","menuFlyoutCss","ShareButton","PoolDetailsHeader","shouldColumnBreak","useScreenSize","Column","TokenName","BREAKPOINTS","lg","xs","TokenTextWrapper","isClickable","SymbolText","CopyAddress","StyledCopyIcon","Copy","ExplorerWrapper","ButtonsRow","PoolDetailsLink","isCopied","setCopied","useCopyClipboard","copy","useCallback","checksummedAddress","isAddress","navigate","useNavigate","handleTokenTextClick","truncateAddress","setTruncateAddress","onTextRender","textRef","clientWidth","scrollWidth","prev","align","Tooltip","placement","TooltipSize","Max","show","text","ExternalLink","padding","HeaderText","Text","StatsWrapper","loaded","StatItemColumn","PoolBalanceSymbols","PoolBalanceTokenNamesContainer","leftBarChartStyles","rightBarChartStyles","BalanceChartSide","percent","$color","isLeft","StatSectionBubble","StatHeaderBubble","PoolBalanceTokenNames","unwrappedToken","screenIsNotLarge","unwrapToken","nativeOnChain","marginRight","tvl","marginLeft","PoolDetailsStats","currency0","useCurrency","currency1","tvlToken0","tvlToken1","fullWidth","token0FullData","token1FullData","tvlUSD","StatItem","title","delta","tvlUSDChange","volumeUSD24H","volumeUSD24HChange","_","StatsTextContainer","StatItemText","formatDelta","FiatTokenStats","DeltaArrow","PoolDetailsStatsButtonsRow","surface1","Z_INDEX","sticky","PoolButton","button","$open","accent1","opacify","timing","inOut","$fixedWidth","$hideOnMobile","SwapIcon","ButtonBubble","SwapModalWrapper","ease","SwapWrapperOuter","CurrencySelect","fixed","MobileBalance","PoolDetailsStatsButtons","balanceQuery","walletChainId","account","positions","userOwnedPositions","useMultiChainPositions","details","closed","findMatchingPosition","tokenId","switchChain","useSwitchChain","useTokenBalancesQuery","balance0","balance1","balance0Fiat","balance1Fiat","filteredBalances","tokenBalance0","tokenBalance1","portfolios","tokenBalances","tokenBalance","quantity","denominatedValue","formattedBalance0","TokenNonTx","formattedBalance1","totalFiatValue","formattedFiatValue","PortfolioBalance","handleAddLiquidity","currencyId","swapModalOpen","toggleSwapModalOpen","state","isScreenSize","screenSizeLargerThanTablet","token0Warning","useTokenWarning","token1Warning","priorityWarning","getPriorityWarning","SubHeaderSmall","HeadlineSmall","Boolean","Caption","X","fontWeight","Swap","syncTabToUrl","initialInputCurrency","initialOutputCurrency","compact","disableTokenInputs","TokenSafetyMessage","tokenAddress","warning","StrongWarning","plural","tokenSymbol","Scrim","$maxWidth","$zIndex","ClosedCircle","svg","g","clipPath","path","d","defs","id","rect","PositionTableWrapper","PositionWrapper","FeeTier","StatusWrapper","status","PositionStatus","IN_RANGE","success","OUT_OF_RANGE","deprecated_accentWarning","RangeWrapper","StyledDoubleArrow","DoubleArrow","RangeText","StyledDot","PositionRow","positionInfo","formatTickPrice","inRange","CLOSED","priceUpper","token0PriceLower","priceLower","token0PriceUpper","ticksAtLimit","LOWER","UPPER","MAX_SAFE_INTEGER","DoubleCurrencyLogo","AlertTriangle","atLimit","direction","Bound","PoolDetailsPositionsTable","PoolTableTransactionType","BUY","SELL","BURN","MINT","PoolTransactionDefaultQuerySize","TableWrapper","PoolTransactionColumn","Timestamp","Type","MakerAddress","FiatValue","InputAmount","OutputAmount","PoolTransactionColumnWidth","comparePoolTokens","WRAPPED_NATIVE_CURRENCY","PoolDetailsTransactionsTable","getSupportedGraphQlChain","useChainFromUrlParam","fallbackToEthereum","activeLocalCurrency","useActiveLocalCurrency","formatFiatPrice","filterModalIsOpen","toggleFilterModal","setFilters","sortState","sortBy","Transaction_OrderBy","sortDirection","OrderDirection","Desc","transactions","loadMore","first","dataV3","dataV2","v2ExploreEnabled","useFeatureFlag","FeatureFlags","V2Explore","loadingV3","errorV3","fetchMore","fetchMoreV3","useV3PoolTransactionsQuery","loadingV2","errorV2","fetchMoreV2","useV2PairTransactionsQuery","loadingMore","onComplete","cursor","updateQuery","fetchMoreResult","mergedData","filteredTransactions","tx","tokenIn","isSell","token0Quantity","PoolTransactionType","Remove","includes","transaction","hash","maker","amount0","amount1","token1Quantity","amountUSD","usdValue","usePoolTransactions","showLoadingSkeleton","columns","columnHelper","createColumnHelper","accessor","row","header","Cell","minWidth","justifyContent","HeaderArrow","HeaderSortText","$active","cell","TimestampCell","getValue","TRANSACTION","span","FilterHeaderRow","modalOpen","Filter","allFilters","values","activeFilter","PoolTransactionTableType","grow","fiat","inputTokenAmount","abs","TokenTx","outputTokenAmount","makerAddress","Table","maxHeight","PoolDetailsTableTabs","TRANSACTIONS","POSITIONS","TableHeader","active","disabled","PoolDetailsTableTab","positionsInThisPool","activeTable","setActiveTable","calc24HVolChange","currentTime","Date","getTime","dayAgo","twoDaysAgo","volume24h","reduce","acc","cur","volume48h","getPoolDetailPageTitle","token0Symbol","token1Symbol","baseTitle","xl","LeftColumn","HR","hr","RightColumn","TokenDetailsWrapper","TokenDetailsHeader","LinksContainer","PoolDetailsPage","chainInfo","unwrappedTokens","useParams","useV3PoolQuery","errorPolicy","useV2PairQuery","anyError","anyLoading","V2_BIPS","txCount","token0Supply","project","markets","token1Supply","totalLiquidity","totalLiquidityPercentChange24h","usePoolData","getUnwrappedPoolToken","darkMode","color0","useColor","backgroundColor","color1","isInvalidPool","poolNotFound","metatagProperties","label","window","location","description","metatags","useDynamicMetatags","ThemeProvider","Helmet","tag","meta","POOL_DETAILS_PAGE","properties","token0Address","token1Address","token0Name","token1Name","backendChain"],"sourceRoot":""}