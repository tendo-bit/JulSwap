{"version":3,"file":"static/js/9477.19584e27.chunk.js","mappings":"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","sources":["../../../node_modules/react-feather/dist/icons/alert-circle.js","components/FormattedCurrencyAmount/index.tsx","components/Toggle/MultiToggle.tsx","components/RateToggle/index.tsx","hooks/usePools.ts","hooks/useERC20Permit.ts","hooks/useV2LiquidityTokenPermit.ts","pages/MigrateV2/MigrateV2Pair.tsx","lib/utils/formatLocaleNumber.ts","utils/formatCurrencyAmount.ts"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var AlertCircle=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\"}),React.createElement(\"line\",{x1:\"12\",y1:\"8\",x2:\"12\",y2:\"12\"}),React.createElement(\"line\",{x1:\"12\",y1:\"16\",x2:\"12.01\",y2:\"16\"}))}));AlertCircle.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},AlertCircle.displayName=\"AlertCircle\";export default AlertCircle;","import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4,\n}: {\n  currencyAmount: CurrencyAmount<Currency>\n  significantDigits?: number\n}) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(significantDigits)\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'};\n  padding: 1px;\n  background: ${({ theme }) => theme.surface2};\n  border-radius: 8px;\n  border: ${({ theme }) => '1px solid ' + theme.surface3};\n  cursor: pointer;\n  outline: none;\n`\n\nexport const ToggleElement = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 4px 0.5rem;\n  border-radius: 6px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.surface1 : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.neutral1 : theme.neutral3)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 535;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.neutral2 : theme.neutral3)};\n  }\n`\n","import { Currency } from '@uniswap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          {isSorted ? currencyA.symbol : currencyB.symbol}\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          {isSorted ? currencyB.symbol : currencyA.symbol}\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n","import { Interface } from '@ethersproject/abi'\nimport { BigintIsh, ChainId, Currency, Token, V3_CORE_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV3PoolStateJSON from '@uniswap/v3-core/artifacts/contracts/interfaces/pool/IUniswapV3PoolState.sol/IUniswapV3PoolState.json'\nimport { FeeAmount, Pool, computePoolAddress } from '@uniswap/v3-sdk'\nimport { useContractMultichain } from 'components/AccountDrawer/MiniPortfolio/Pools/hooks'\nimport JSBI from 'jsbi'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { IUniswapV3PoolStateInterface } from 'uniswap/src/abis/types/v3/IUniswapV3PoolState'\nimport { UniswapV3Pool } from 'uniswap/src/abis/types/v3/UniswapV3Pool'\nimport { useChainId } from 'wagmi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateJSON.abi) as IUniswapV3PoolStateInterface\n\n// Classes are expensive to instantiate, so this caches the recently instantiated pools.\n// This avoids re-instantiating pools as the other pools in the same request are loaded.\nclass PoolCache {\n  // Evict after 128 entries. Empirically, a swap uses 64 entries.\n  private static MAX_ENTRIES = 128\n\n  // These are FIFOs, using unshift/pop. This makes recent entries faster to find.\n  private static pools: Pool[] = []\n  private static addresses: { key: string; address: string }[] = []\n\n  static getPoolAddress(factoryAddress: string, tokenA: Token, tokenB: Token, fee: FeeAmount): string {\n    if (this.addresses.length > this.MAX_ENTRIES) {\n      this.addresses = this.addresses.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const { address: addressA } = tokenA\n    const { address: addressB } = tokenB\n    const key = `${factoryAddress}:${addressA}:${addressB}:${fee.toString()}`\n    const found = this.addresses.find((address) => address.key === key)\n    if (found) return found.address\n\n    const address = {\n      key,\n      address: computePoolAddress({\n        factoryAddress,\n        tokenA,\n        tokenB,\n        fee,\n      }),\n    }\n    this.addresses.unshift(address)\n    return address.address\n  }\n\n  static getPool(\n    tokenA: Token,\n    tokenB: Token,\n    fee: FeeAmount,\n    sqrtPriceX96: BigintIsh,\n    liquidity: BigintIsh,\n    tick: number\n  ): Pool {\n    if (this.pools.length > this.MAX_ENTRIES) {\n      this.pools = this.pools.slice(0, this.MAX_ENTRIES / 2)\n    }\n\n    const found = this.pools.find(\n      (pool) =>\n        pool.token0 === tokenA &&\n        pool.token1 === tokenB &&\n        pool.fee === fee &&\n        JSBI.EQ(pool.sqrtRatioX96, sqrtPriceX96) &&\n        JSBI.EQ(pool.liquidity, liquidity) &&\n        pool.tickCurrent === tick\n    )\n    if (found) return found\n\n    const pool = new Pool(tokenA, tokenB, fee, sqrtPriceX96, liquidity, tick)\n    this.pools.unshift(pool)\n    return pool\n  }\n}\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const chainId = useChainId()\n\n  const poolTokens: ([Token, Token, FeeAmount] | undefined)[] = useMemo(() => {\n    if (!chainId) return new Array(poolKeys.length)\n\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (currencyA && currencyB && feeAmount) {\n        const tokenA = currencyA.wrapped\n        const tokenB = currencyB.wrapped\n        if (tokenA.equals(tokenB)) return undefined\n\n        return tokenA.sortsBefore(tokenB) ? [tokenA, tokenB, feeAmount] : [tokenB, tokenA, feeAmount]\n      }\n      return undefined\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n    if (!v3CoreFactoryAddress) return new Array(poolTokens.length)\n\n    return poolTokens.map((value) => value && PoolCache.getPoolAddress(v3CoreFactoryAddress, ...value))\n  }, [chainId, poolTokens])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const tokens = poolTokens[index]\n      if (!tokens) return [PoolState.INVALID, null]\n      const [token0, token1, fee] = tokens\n\n      if (!slot0s[index]) return [PoolState.INVALID, null]\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n\n      if (!liquidities[index]) return [PoolState.INVALID, null]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!tokens || !slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        const pool = PoolCache.getPool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)\n        return [PoolState.EXISTS, pool]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, poolTokens])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n\nexport function usePoolMultichain(\n  tokenA: Token | undefined,\n  tokenB: Token | undefined,\n  fee: number | undefined,\n  chainId: ChainId\n): [PoolState, Pool | null] {\n  const poolData = useRef<[PoolState, Pool | null]>([PoolState.LOADING, null])\n  const poolAddress =\n    tokenA && tokenB && fee\n      ? PoolCache.getPoolAddress(V3_CORE_FACTORY_ADDRESSES[chainId], tokenA, tokenB, fee)\n      : undefined\n\n  const contractMap = useMemo(() => (poolAddress ? { [chainId]: poolAddress } : {}), [chainId, poolAddress])\n  const contract = useContractMultichain<UniswapV3Pool>(contractMap, IUniswapV3PoolStateJSON.abi)[chainId]\n\n  useEffect(() => {\n    async function getPool() {\n      try {\n        if (!tokenA || !tokenB || !fee || !poolAddress || !contract) {\n          poolData.current = [PoolState.INVALID, null]\n          return\n        }\n\n        const slot0 = await contract.slot0()\n        const liquidity = await contract.liquidity()\n        poolData.current = [PoolState.NOT_EXISTS, null]\n\n        const pool = new Pool(tokenA, tokenB, fee, slot0.sqrtPriceX96.toString(), liquidity.toString(), slot0.tick)\n        poolData.current = [PoolState.EXISTS, pool]\n      } catch (e) {\n        poolData.current = [PoolState.INVALID, null]\n      }\n    }\n    getPool()\n  }, [contract, fee, poolAddress, tokenA, tokenB])\n  return poolData.current\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo, useState } from 'react'\n\nimport { useEthersWeb3Provider } from 'hooks/useEthersProvider'\nimport { useAccount } from 'wagmi'\nimport { DAI, UNI, USDC_MAINNET } from '../constants/tokens'\nimport { useEIP2612Contract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport enum PermitType {\n  AMOUNT = 1,\n  ALLOWED = 2,\n}\n\n// 20 minutes to submit after signing\nconst PERMIT_VALIDITY_BUFFER = 20 * 60\n\nexport interface PermitInfo {\n  type: PermitType\n  name: string\n  // version is optional, and if omitted, will not be included in the domain\n  version?: string\n}\n\n// todo: read this information from extensions on token lists or elsewhere (permit registry?)\nconst PERMITTABLE_TOKENS: {\n  [chainId: number]: {\n    [checksummedTokenAddress: string]: PermitInfo\n  }\n} = {\n  [ChainId.MAINNET]: {\n    [USDC_MAINNET.address]: { type: PermitType.AMOUNT, name: 'USD Coin', version: '2' },\n    [DAI.address]: { type: PermitType.ALLOWED, name: 'Dai Stablecoin', version: '1' },\n    [UNI[ChainId.MAINNET].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.GOERLI]: {\n    [UNI[ChainId.GOERLI].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n  [ChainId.SEPOLIA]: {\n    [UNI[ChainId.SEPOLIA].address]: { type: PermitType.AMOUNT, name: 'Uniswap' },\n  },\n}\n\nenum UseERC20PermitState {\n  // returned for any reason, e.g. it is an argent wallet, or the currency does not support it\n  NOT_APPLICABLE,\n  LOADING,\n  NOT_SIGNED,\n  SIGNED,\n}\n\ninterface BaseSignatureData {\n  v: number\n  r: string\n  s: string\n  deadline: number\n  nonce: number\n  owner: string\n  spender: string\n  chainId: number\n  tokenAddress: string\n  permitType: PermitType\n}\n\ninterface StandardSignatureData extends BaseSignatureData {\n  amount: string\n}\n\ninterface AllowedSignatureData extends BaseSignatureData {\n  allowed: true\n}\n\ntype SignatureData = StandardSignatureData | AllowedSignatureData\n\nconst EIP712_DOMAIN_TYPE = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP712_DOMAIN_TYPE_NO_VERSION = [\n  { name: 'name', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n]\n\nconst EIP2612_TYPE = [\n  { name: 'owner', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'value', type: 'uint256' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'deadline', type: 'uint256' },\n]\n\nconst PERMIT_ALLOWED_TYPE = [\n  { name: 'holder', type: 'address' },\n  { name: 'spender', type: 'address' },\n  { name: 'nonce', type: 'uint256' },\n  { name: 'expiry', type: 'uint256' },\n  { name: 'allowed', type: 'bool' },\n]\n\nexport function useERC20Permit(\n  currencyAmount: CurrencyAmount<Currency> | null | undefined,\n  spender: string | null | undefined,\n  transactionDeadline: BigNumber | undefined,\n  overridePermitInfo: PermitInfo | undefined | null\n): {\n  signatureData: SignatureData | null\n  state: UseERC20PermitState\n  gatherPermitSignature: null | (() => Promise<void>)\n} {\n  const account = useAccount()\n  const provider = useEthersWeb3Provider()\n  const tokenAddress = currencyAmount?.currency?.isToken ? currencyAmount.currency.address : undefined\n  const eip2612Contract = useEIP2612Contract(tokenAddress)\n  const isArgentWallet = useIsArgentWallet()\n  const nonceInputs = useMemo(() => [account.address ?? undefined], [account.address])\n  const tokenNonceState = useSingleCallResult(eip2612Contract, 'nonces', nonceInputs)\n  const permitInfo =\n    overridePermitInfo ??\n    (account.status === 'connected' && tokenAddress ? PERMITTABLE_TOKENS[account.chainId]?.[tokenAddress] : undefined)\n\n  const [signatureData, setSignatureData] = useState<SignatureData | null>(null)\n\n  return useMemo(() => {\n    if (\n      isArgentWallet ||\n      !currencyAmount ||\n      !eip2612Contract ||\n      account.status !== 'connected' ||\n      !transactionDeadline ||\n      !provider ||\n      !tokenNonceState.valid ||\n      !tokenAddress ||\n      !spender ||\n      !permitInfo\n    ) {\n      return {\n        state: UseERC20PermitState.NOT_APPLICABLE,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const nonceNumber = tokenNonceState.result?.[0]?.toNumber()\n    if (tokenNonceState.loading || typeof nonceNumber !== 'number') {\n      return {\n        state: UseERC20PermitState.LOADING,\n        signatureData: null,\n        gatherPermitSignature: null,\n      }\n    }\n\n    const isSignatureDataValid =\n      signatureData &&\n      signatureData.owner === account.address &&\n      signatureData.deadline >= transactionDeadline.toNumber() &&\n      signatureData.tokenAddress === tokenAddress &&\n      signatureData.nonce === nonceNumber &&\n      signatureData.spender === spender &&\n      ('allowed' in signatureData ||\n        JSBI.greaterThanOrEqual(JSBI.BigInt(signatureData.amount), currencyAmount.quotient))\n\n    return {\n      state: isSignatureDataValid ? UseERC20PermitState.SIGNED : UseERC20PermitState.NOT_SIGNED,\n      signatureData: isSignatureDataValid ? signatureData : null,\n      gatherPermitSignature: async function gatherPermitSignature() {\n        const allowed = permitInfo.type === PermitType.ALLOWED\n        const signatureDeadline = transactionDeadline.toNumber() + PERMIT_VALIDITY_BUFFER\n        const value = currencyAmount.quotient.toString()\n\n        const message = allowed\n          ? {\n              holder: account.address,\n              spender,\n              allowed,\n              nonce: nonceNumber,\n              expiry: signatureDeadline,\n            }\n          : {\n              owner: account.address,\n              spender,\n              value,\n              nonce: nonceNumber,\n              deadline: signatureDeadline,\n            }\n        const domain = permitInfo.version\n          ? {\n              name: permitInfo.name,\n              version: permitInfo.version,\n              verifyingContract: tokenAddress,\n              chainId: account.chainId,\n            }\n          : {\n              name: permitInfo.name,\n              verifyingContract: tokenAddress,\n              chainId: account.chainId,\n            }\n        const data = JSON.stringify({\n          types: {\n            EIP712Domain: permitInfo.version ? EIP712_DOMAIN_TYPE : EIP712_DOMAIN_TYPE_NO_VERSION,\n            Permit: allowed ? PERMIT_ALLOWED_TYPE : EIP2612_TYPE,\n          },\n          domain,\n          primaryType: 'Permit',\n          message,\n        })\n\n        return provider\n          .send('eth_signTypedData_v4', [account.address, data])\n          .then(splitSignature)\n          .then((signature) => {\n            setSignatureData({\n              v: signature.v,\n              r: signature.r,\n              s: signature.s,\n              deadline: signatureDeadline,\n              ...(allowed ? { allowed } : { amount: value }),\n              nonce: nonceNumber,\n              chainId: account.chainId,\n              owner: account.address,\n              spender,\n              tokenAddress,\n              permitType: permitInfo.type,\n            })\n          })\n      },\n    }\n  }, [\n    isArgentWallet,\n    currencyAmount,\n    eip2612Contract,\n    account.status,\n    account.address,\n    account.chainId,\n    transactionDeadline,\n    provider,\n    tokenNonceState.valid,\n    tokenNonceState.result,\n    tokenNonceState.loading,\n    tokenAddress,\n    spender,\n    permitInfo,\n    signatureData,\n  ])\n}\n","import { CurrencyAmount, Token } from '@uniswap/sdk-core'\n\nimport { PermitInfo, PermitType, useERC20Permit } from './useERC20Permit'\nimport useTransactionDeadline from './useTransactionDeadline'\n\nconst REMOVE_V2_LIQUIDITY_PERMIT_INFO: PermitInfo = {\n  version: '1',\n  name: 'Uniswap V2',\n  type: PermitType.AMOUNT,\n}\n\nexport function useV2LiquidityTokenPermit(\n  liquidityAmount: CurrencyAmount<Token> | null | undefined,\n  spender: string | null | undefined\n) {\n  const transactionDeadline = useTransactionDeadline()\n  return useERC20Permit(liquidityAmount, spender, transactionDeadline, REMOVE_V2_LIQUIDITY_PERMIT_INFO)\n}\n","import { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { LiquidityEventName, LiquiditySource } from '@uniswap/analytics-events'\nimport { CurrencyAmount, Fraction, Percent, Price, Token, V2_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, Position, TickMath, priceToClosestTick } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport Badge from 'components/Badge'\nimport { ButtonConfirmed } from 'components/Button'\nimport { BlueCard, DarkGrayCard, LightCard, YellowCard } from 'components/Card'\nimport FeeSelector from 'components/FeeSelector'\nimport RangeSelector from 'components/RangeSelector'\nimport RateToggle from 'components/RateToggle'\nimport SettingsTab from 'components/Settings'\nimport { V2Unsupported } from 'components/V2Unsupported'\nimport { Dots } from 'components/swap/styled'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { useNetworkSupportsV2 } from 'hooks/useNetworkSupportsV2'\nimport { PoolState, usePool } from 'hooks/usePools'\nimport { useGetTransactionDeadline } from 'hooks/useTransactionDeadline'\nimport { useV2LiquidityTokenPermit } from 'hooks/useV2LiquidityTokenPermit'\nimport { Trans, t } from 'i18n'\nimport JSBI from 'jsbi'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertCircle, AlertTriangle, ArrowDown } from 'react-feather'\nimport { Navigate, useParams } from 'react-router-dom'\nimport { useAppDispatch } from 'state/hooks'\nimport { Bound, resetMintState } from 'state/mint/v3/actions'\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers } from 'state/mint/v3/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\nimport { useTheme } from 'styled-components'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { DoubleCurrencyLogo } from 'components/DoubleLogo'\nimport { Text } from 'ui/src'\nimport { isAddress } from 'utilities/src/addresses'\nimport { MigrateHeader } from '.'\nimport { AutoColumn } from '../../components/Column'\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\nimport CurrencyLogo from '../../components/Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useToken } from '../../hooks/Tokens'\nimport { usePairContract, useV2MigratorContract } from '../../hooks/useContract'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { BackArrowLink, ExternalLink, ThemedText } from '../../theme/components'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { BodyWrapper } from '../AppBody'\n\nconst ZERO = JSBI.BigInt(0)\n\nconst DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE = new Percent(75, 10_000)\n\nfunction EmptyState({ message }: { message: ReactNode }) {\n  return (\n    <AutoColumn style={{ minHeight: 200, justifyContent: 'center', alignItems: 'center' }}>\n      <ThemedText.DeprecatedBody>{message}</ThemedText.DeprecatedBody>\n    </AutoColumn>\n  )\n}\n\nfunction LiquidityInfo({\n  token0Amount,\n  token1Amount,\n}: {\n  token0Amount: CurrencyAmount<Token>\n  token1Amount: CurrencyAmount<Token>\n}) {\n  const currency0 = unwrappedToken(token0Amount.currency)\n  const currency1 = unwrappedToken(token1Amount.currency)\n\n  return (\n    <AutoColumn gap=\"sm\">\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size={20} style={{ marginRight: '8px' }} currency={currency0} />\n          <Text fontSize={16} fontWeight=\"$medium\">\n            {currency0.symbol}\n          </Text>\n        </RowFixed>\n        <Text fontSize={16} fontWeight=\"$medium\">\n          <FormattedCurrencyAmount currencyAmount={token0Amount} />\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size={20} style={{ marginRight: '8px' }} currency={currency1} />\n          <Text fontSize={16} fontWeight=\"$medium\">\n            {currency1.symbol}\n          </Text>\n        </RowFixed>\n\n        <Text fontSize={16} fontWeight=\"$medium\">\n          <FormattedCurrencyAmount currencyAmount={token1Amount} />\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\n// hard-code this for now\nconst percentageToMigrate = 100\n\nfunction V2PairMigration({\n  pair,\n  pairBalance,\n  totalSupply,\n  reserve0,\n  reserve1,\n  token0,\n  token1,\n}: {\n  pair: Contract\n  pairBalance: CurrencyAmount<Token>\n  totalSupply: CurrencyAmount<Token>\n  reserve0: CurrencyAmount<Token>\n  reserve1: CurrencyAmount<Token>\n  token0: Token\n  token1: Token\n}) {\n  const { chainId, account } = useWeb3React()\n  const theme = useTheme()\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined\n  const trace = useTrace()\n\n  const pairFactory = useSingleCallResult(pair, 'factory')\n  const isNotUniswap = pairFactory.result?.[0] && pairFactory.result[0] !== v2FactoryAddress\n\n  const getDeadline = useGetTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE) // custom from users\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  // this is just getLiquidityValue with the fee off, but for the passed pair\n  const token0Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token0,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve0.quotient), totalSupply.quotient)\n      ),\n    [token0, pairBalance, reserve0, totalSupply]\n  )\n  const token1Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token1,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve1.quotient), totalSupply.quotient)\n      ),\n    [token1, pairBalance, reserve1, totalSupply]\n  )\n\n  // set up v3 pool\n  const [feeAmount, setFeeAmount] = useState(FeeAmount.MEDIUM)\n  const [poolState, pool] = usePool(token0, token1, feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // get spot prices + price difference\n  const v2SpotPrice = useMemo(\n    () => new Price(token0, token1, reserve0.quotient, reserve1.quotient),\n    [token0, token1, reserve0, reserve1]\n  )\n  const v3SpotPrice = poolState === PoolState.EXISTS ? pool?.token0Price : undefined\n\n  let priceDifferenceFraction: Fraction | undefined =\n    v2SpotPrice && v3SpotPrice ? v3SpotPrice.divide(v2SpotPrice).subtract(1).multiply(100) : undefined\n  if (priceDifferenceFraction?.lessThan(ZERO)) {\n    priceDifferenceFraction = priceDifferenceFraction.multiply(-1)\n  }\n\n  const largePriceDifference = priceDifferenceFraction && !priceDifferenceFraction?.lessThan(JSBI.BigInt(2))\n\n  // the following is a small hack to get access to price range data/input handlers\n  const [baseToken, setBaseToken] = useState(token0)\n  const { ticks, pricesAtTicks, invertPrice, invalidRange, outOfRange, ticksAtLimit } = useV3DerivedMintInfo(\n    token0,\n    token1,\n    feeAmount,\n    baseToken\n  )\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    baseToken,\n    baseToken.equals(token0) ? token1 : token0,\n    feeAmount,\n    tickLower,\n    tickUpper\n  )\n\n  const { onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(noLiquidity)\n\n  // the v3 tick is either the pool's tickCurrent, or the tick closest to the v2 spot price\n  const tick = pool?.tickCurrent ?? priceToClosestTick(v2SpotPrice)\n  // the price is either the current v3 price, or the price at the tick\n  const sqrtPrice = pool?.sqrtRatioX96 ?? TickMath.getSqrtRatioAtTick(tick)\n  const position =\n    typeof tickLower === 'number' && typeof tickUpper === 'number' && !invalidRange\n      ? Position.fromAmounts({\n          pool: pool ?? new Pool(token0, token1, feeAmount, sqrtPrice, 0, tick, []),\n          tickLower,\n          tickUpper,\n          amount0: token0Value.quotient,\n          amount1: token1Value.quotient,\n          useFullPrecision: true, // we want full precision for the theoretical position\n        })\n      : undefined\n\n  const { amount0: v3Amount0Min, amount1: v3Amount1Min } = useMemo(\n    () => (position ? position.mintAmountsWithSlippage(allowedSlippage) : { amount0: undefined, amount1: undefined }),\n    [position, allowedSlippage]\n  )\n\n  const refund0 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token0, JSBI.subtract(token0Value.quotient, position.amount0.quotient)),\n    [token0Value, position, token0]\n  )\n  const refund1 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token1, JSBI.subtract(token1Value.quotient, position.amount1.quotient)),\n    [token1Value, position, token1]\n  )\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const migrator = useV2MigratorContract()\n\n  // approvals\n  const [approval, approveManually] = useApproveCallback(pairBalance, migrator?.address)\n  const { signatureData, gatherPermitSignature } = useV2LiquidityTokenPermit(pairBalance, migrator?.address)\n\n  const isArgentWallet = useIsArgentWallet()\n\n  const approve = useCallback(async () => {\n    if (isNotUniswap || isArgentWallet) {\n      // sushi has to be manually approved\n      await approveManually()\n    } else if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveManually()\n        }\n      }\n    } else {\n      await approveManually()\n    }\n  }, [isNotUniswap, isArgentWallet, gatherPermitSignature, approveManually])\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const networkSupportsV2 = useNetworkSupportsV2()\n\n  const migrate = useCallback(async () => {\n    if (\n      !migrator ||\n      !account ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      !v3Amount0Min ||\n      !v3Amount1Min ||\n      !chainId ||\n      !networkSupportsV2\n    )\n      return\n\n    const deadline = signatureData?.deadline ?? (await getDeadline())\n    if (!deadline) throw new Error('could not get deadline')\n\n    const data: string[] = []\n\n    // permit if necessary\n    if (signatureData) {\n      data.push(\n        migrator.interface.encodeFunctionData('selfPermit', [\n          pair.address,\n          `0x${pairBalance.quotient.toString(16)}`,\n          deadline,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ])\n      )\n    }\n\n    // create/initialize pool if necessary\n    if (noLiquidity) {\n      data.push(\n        migrator.interface.encodeFunctionData('createAndInitializePoolIfNecessary', [\n          token0.address,\n          token1.address,\n          feeAmount,\n          `0x${sqrtPrice.toString(16)}`,\n        ])\n      )\n    }\n\n    // TODO could save gas by not doing this in multicall\n    data.push(\n      migrator.interface.encodeFunctionData('migrate', [\n        {\n          pair: pair.address,\n          liquidityToMigrate: `0x${pairBalance.quotient.toString(16)}`,\n          percentageToMigrate,\n          token0: token0.address,\n          token1: token1.address,\n          fee: feeAmount,\n          tickLower,\n          tickUpper,\n          amount0Min: `0x${v3Amount0Min.toString(16)}`,\n          amount1Min: `0x${v3Amount1Min.toString(16)}`,\n          recipient: account,\n          deadline,\n          refundAsETH: true, // hard-code this for now\n        },\n      ])\n    )\n\n    setConfirmingMigration(true)\n\n    migrator.estimateGas\n      .multicall(data)\n      .then((gasEstimate) => {\n        return migrator\n          .multicall(data, { gasLimit: calculateGasMargin(gasEstimate) })\n          .then((response: TransactionResponse) => {\n            sendAnalyticsEvent(LiquidityEventName.MIGRATE_LIQUIDITY_SUBMITTED, {\n              action: `${isNotUniswap ? LiquiditySource.SUSHISWAP : LiquiditySource.V2}->${LiquiditySource.V3}`,\n              label: `${currency0.symbol}/${currency1.symbol}`,\n              ...trace,\n            })\n\n            addTransaction(response, {\n              type: TransactionType.MIGRATE_LIQUIDITY_V3,\n              baseCurrencyId: currencyId(currency0),\n              quoteCurrencyId: currencyId(currency1),\n              isFork: isNotUniswap,\n            })\n            setPendingMigrationHash(response.hash)\n          })\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [\n    migrator,\n    account,\n    tickLower,\n    tickUpper,\n    v3Amount0Min,\n    v3Amount1Min,\n    chainId,\n    networkSupportsV2,\n    signatureData,\n    getDeadline,\n    noLiquidity,\n    pair.address,\n    pairBalance.quotient,\n    token0.address,\n    token1.address,\n    feeAmount,\n    sqrtPrice,\n    isNotUniswap,\n    currency0,\n    currency1,\n    trace,\n    addTransaction,\n  ])\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && JSBI.equal(pairBalance.quotient, ZERO)\n\n  if (!networkSupportsV2) return <V2Unsupported />\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <ThemedText.DeprecatedBody my={9} style={{ fontWeight: 485, textAlign: 'center' }}>\n        <Trans>\n          This tool will safely migrate your {{ noun: isNotUniswap ? `SushiSwap` : `V2` }} liquidity to V3. The process\n          is completely trustless thanks to the\n        </Trans>{' '}\n        {chainId && migrator && (\n          <ExternalLink href={getExplorerLink(chainId, migrator.address, ExplorerDataType.ADDRESS)}>\n            <Text color=\"$accent1\" display=\"inline\">\n              <Trans>Uniswap migration contract</Trans> ↗\n            </Text>\n          </ExternalLink>\n        )}\n        .\n      </ThemedText.DeprecatedBody>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currencies={[currency0, currency1]} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {{ symA: currency0.symbol }}/{{ symB: currency1.symbol }} LP Tokens\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge>{isNotUniswap ? 'Sushi' : 'V2'}</Badge>\n          </RowBetween>\n          <LiquidityInfo token0Amount={token0Value} token1Amount={token1Value} />\n        </AutoColumn>\n      </LightCard>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ArrowDown size={24} />\n      </div>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currencies={[currency0, currency1]} size={20} />\n              <ThemedText.DeprecatedMediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {{ symA: currency0.symbol }}/{{ symB: currency1.symbol }} LP NFT\n                </Trans>\n              </ThemedText.DeprecatedMediumHeader>\n            </RowFixed>\n            <Badge>V3</Badge>\n          </RowBetween>\n\n          <FeeSelector feeAmount={feeAmount} handleFeePoolSelect={setFeeAmount} />\n          {noLiquidity && (\n            <BlueCard style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <AlertCircle color={theme.neutral1} style={{ marginBottom: '12px', opacity: 0.8 }} />\n              <ThemedText.DeprecatedBody\n                fontSize={14}\n                style={{ marginBottom: 8, fontWeight: 535, opacity: 0.8 }}\n                textAlign=\"center\"\n              >\n                <Trans>\n                  You are the first liquidity provider for this Uniswap V3 pool. Your liquidity will migrate at the\n                  current {{ name: isNotUniswap ? 'SushiSwap' : 'V2' }} price.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n\n              <ThemedText.DeprecatedBody\n                fontWeight=\"$medium\"\n                textAlign=\"center\"\n                fontSize={14}\n                style={{ marginTop: '8px', opacity: 0.8 }}\n              >\n                <Trans>Your transaction cost will be much higher as it includes the gas to create the pool.</Trans>\n              </ThemedText.DeprecatedBody>\n\n              {v2SpotPrice && (\n                <AutoColumn gap=\"sm\" style={{ marginTop: '12px' }}>\n                  <RowBetween>\n                    <ThemedText.DeprecatedBody fontWeight={535} fontSize={14}>\n                      <Trans>\n                        {{ name: { name: isNotUniswap ? 'SushiSwap' : 'V2' } }}{' '}\n                        {{ sym: invertPrice ? currency1.symbol : currency0.symbol }} Price:\n                      </Trans>{' '}\n                      {invertPrice\n                        ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                        : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                    </ThemedText.DeprecatedBody>\n                  </RowBetween>\n                </AutoColumn>\n              )}\n            </BlueCard>\n          )}\n\n          {largePriceDifference ? (\n            <YellowCard>\n              <AutoColumn gap=\"sm\">\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    <Trans>\n                      {{ name: isNotUniswap ? 'SushiSwap' : 'V2' }}{' '}\n                      {{ sym: invertPrice ? currency1.symbol : currency0.symbol }} Price:\n                    </Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14}>\n                    V3 {invertPrice ? currency1.symbol : currency0.symbol} {t(`Price`)}:\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14}>\n                    {invertPrice\n                      ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.DeprecatedBody fontSize={14} color=\"inherit\">\n                    <Trans>Price difference:</Trans>\n                  </ThemedText.DeprecatedBody>\n                  <ThemedText.DeprecatedBlack fontSize={14} color=\"inherit\">\n                    {priceDifferenceFraction?.toSignificant(4)}%\n                  </ThemedText.DeprecatedBlack>\n                </RowBetween>\n              </AutoColumn>\n              <ThemedText.DeprecatedBody fontSize={14} style={{ marginTop: 8, fontWeight: 485 }}>\n                <Trans>\n                  You should only deposit liquidity into Uniswap V3 at a price you believe is correct. <br />\n                  If the price seems incorrect, you can either make a swap to move the price or wait for someone else to\n                  do so.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </YellowCard>\n          ) : !noLiquidity && v3SpotPrice ? (\n            <RowBetween>\n              <ThemedText.DeprecatedBody fontSize={14}>\n                <Trans>V3 {{ sym: invertPrice ? currency1.symbol : currency0.symbol }} Price:</Trans>\n              </ThemedText.DeprecatedBody>\n              <ThemedText.DeprecatedBlack fontSize={14}>\n                {invertPrice\n                  ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                  : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n              </ThemedText.DeprecatedBlack>\n            </RowBetween>\n          ) : null}\n\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Set price range</Trans>\n            </ThemedText.DeprecatedLabel>\n            <RateToggle\n              currencyA={invertPrice ? currency1 : currency0}\n              currencyB={invertPrice ? currency0 : currency1}\n              handleRateToggle={() => {\n                onLeftRangeInput('')\n                onRightRangeInput('')\n                setBaseToken((base) => (base.equals(token0) ? token1 : token0))\n              }}\n            />\n          </RowBetween>\n\n          <RangeSelector\n            priceLower={priceLower}\n            priceUpper={priceUpper}\n            getDecrementLower={getDecrementLower}\n            getIncrementLower={getIncrementLower}\n            getDecrementUpper={getDecrementUpper}\n            getIncrementUpper={getIncrementUpper}\n            onLeftRangeInput={onLeftRangeInput}\n            onRightRangeInput={onRightRangeInput}\n            currencyA={invertPrice ? currency1 : currency0}\n            currencyB={invertPrice ? currency0 : currency1}\n            feeAmount={feeAmount}\n            ticksAtLimit={ticksAtLimit}\n          />\n\n          {outOfRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <Text color=\"$yellow600\" ml={12} fontSize={12}>\n                  <Trans>\n                    Your position will not earn fees or be used in trades until the market price moves into your range.\n                  </Trans>\n                </Text>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {invalidRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                <Text color=\"$\" ml={12} fontSize={12}>\n                  <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                </Text>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {position ? (\n            <DarkGrayCard>\n              <AutoColumn gap=\"md\">\n                <LiquidityInfo token0Amount={position.amount0} token1Amount={position.amount1} />\n                {chainId && refund0 && refund1 ? (\n                  <ThemedText.DeprecatedBlack fontSize={12}>\n                    <Trans>\n                      At least {{ amtA: formatCurrencyAmount(refund0, 4) }}{' '}\n                      {{ symA: chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token0) ? 'ETH' : token0.symbol }}{' '}\n                      and {{ amtB: formatCurrencyAmount(refund1, 4) }}{' '}\n                      {{ symB: chainId && WRAPPED_NATIVE_CURRENCY[chainId]?.equals(token1) ? 'ETH' : token1.symbol }}{' '}\n                      will be refunded to your wallet due to selected price range.\n                    </Trans>\n                  </ThemedText.DeprecatedBlack>\n                ) : null}\n              </AutoColumn>\n            </DarkGrayCard>\n          ) : null}\n\n          <AutoColumn gap=\"md\">\n            {!isSuccessfullyMigrated && !isMigrationPending ? (\n              <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n                <ButtonConfirmed\n                  disabled={\n                    approval !== ApprovalState.NOT_APPROVED ||\n                    signatureData !== null ||\n                    !v3Amount0Min ||\n                    !v3Amount1Min ||\n                    invalidRange ||\n                    confirmingMigration\n                  }\n                  onClick={approve}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving</Trans>\n                    </Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    <Trans>Allowed</Trans>\n                  ) : (\n                    <Trans>Allow LP token migration</Trans>\n                  )}\n                </ButtonConfirmed>\n              </AutoColumn>\n            ) : null}\n            <AutoColumn gap=\"md\" style={{ flex: '1' }}>\n              <ButtonConfirmed\n                confirmed={isSuccessfullyMigrated}\n                disabled={\n                  !v3Amount0Min ||\n                  !v3Amount1Min ||\n                  invalidRange ||\n                  (approval !== ApprovalState.APPROVED && signatureData === null) ||\n                  confirmingMigration ||\n                  isMigrationPending ||\n                  isSuccessfullyMigrated\n                }\n                onClick={migrate}\n              >\n                {isSuccessfullyMigrated ? (\n                  'Success!'\n                ) : isMigrationPending ? (\n                  <Dots>\n                    <Trans>Migrating</Trans>\n                  </Dots>\n                ) : (\n                  <Trans>Migrate</Trans>\n                )}\n              </ButtonConfirmed>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </LightCard>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV2Pair() {\n  const { address } = useParams<{ address: string }>()\n  // reset mint state on component mount, and as a cleanup (on unmount)\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(resetMintState())\n    return () => {\n      dispatch(resetMintState())\n    }\n  }, [dispatch])\n\n  const { chainId, account } = useWeb3React()\n\n  // get pair contract\n  const validatedAddress = isAddress(address)\n  const pair = usePairContract(validatedAddress ? validatedAddress : undefined)\n\n  // get token addresses from pair contract\n  const token0AddressCallState = useSingleCallResult(pair, 'token0', undefined, NEVER_RELOAD)\n  const token0Address = token0AddressCallState?.result?.[0]\n  const token1Address = useSingleCallResult(pair, 'token1', undefined, NEVER_RELOAD)?.result?.[0]\n\n  // get tokens\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  // get liquidity token balance\n  const liquidityToken: Token | undefined = useMemo(\n    () => (chainId && validatedAddress ? new Token(chainId, validatedAddress, 18) : undefined),\n    [chainId, validatedAddress]\n  )\n\n  // get data required for V2 pair migration\n  const pairBalance = useTokenBalance(account ?? undefined, liquidityToken)\n  const totalSupply = useTotalSupply(liquidityToken)\n  const [reserve0Raw, reserve1Raw] = useSingleCallResult(pair, 'getReserves')?.result ?? []\n  const reserve0 = useMemo(\n    () => (token0 && reserve0Raw ? CurrencyAmount.fromRawAmount(token0, reserve0Raw) : undefined),\n    [token0, reserve0Raw]\n  )\n  const reserve1 = useMemo(\n    () => (token1 && reserve1Raw ? CurrencyAmount.fromRawAmount(token1, reserve1Raw) : undefined),\n    [token1, reserve1Raw]\n  )\n\n  // redirect for invalid url params\n  if (\n    !validatedAddress ||\n    !pair ||\n    (pair &&\n      token0AddressCallState?.valid &&\n      !token0AddressCallState?.loading &&\n      !token0AddressCallState?.error &&\n      !token0Address)\n  ) {\n    console.error('Invalid pair address')\n    return <Navigate to=\"/migrate/v2\" replace />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrowLink to=\"/migrate/v2\" />\n          <MigrateHeader>\n            <Trans>Migrate V2 liquidity</Trans>\n          </MigrateHeader>\n          <SettingsTab autoSlippage={DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE} chainId={chainId} hideRoutingSettings />\n        </AutoRow>\n\n        {!account ? (\n          <ThemedText.DeprecatedLargeHeader>\n            <Trans>You must connect an account.</Trans>\n          </ThemedText.DeprecatedLargeHeader>\n        ) : pairBalance && totalSupply && reserve0 && reserve1 && token0 && token1 ? (\n          <V2PairMigration\n            pair={pair}\n            pairBalance={pairBalance}\n            totalSupply={totalSupply}\n            reserve0={reserve0}\n            reserve1={reserve1}\n            token0={token0}\n            token1={token1}\n          />\n        ) : (\n          <EmptyState message={<Trans>Loading</Trans>} />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n","import { Currency, CurrencyAmount, Price } from '@uniswap/sdk-core'\nimport { DEFAULT_LOCALE, SUPPORTED_LOCALES } from 'constants/locales'\n\ninterface FormatLocaleNumberArgs {\n  number: CurrencyAmount<Currency> | Price<Currency, Currency> | number\n  locale?: string | null\n  options?: Intl.NumberFormatOptions\n  sigFigs?: number\n  fixedDecimals?: number\n}\n\nexport default function formatLocaleNumber({\n  number,\n  locale,\n  sigFigs,\n  fixedDecimals,\n  options = {},\n}: FormatLocaleNumberArgs): string {\n  let localeArg: string | string[]\n  if (!locale || (locale && !SUPPORTED_LOCALES.includes(locale))) {\n    localeArg = DEFAULT_LOCALE\n  } else {\n    localeArg = [locale, DEFAULT_LOCALE]\n  }\n  options.minimumFractionDigits = options.minimumFractionDigits || fixedDecimals\n  options.maximumFractionDigits = options.maximumFractionDigits || fixedDecimals\n\n  // Fixed decimals should override significant figures.\n  options.maximumSignificantDigits = options.maximumSignificantDigits || fixedDecimals ? undefined : sigFigs\n\n  let numberString: number\n  if (typeof number === 'number') {\n    numberString = fixedDecimals ? parseFloat(number.toFixed(fixedDecimals)) : number\n  } else {\n    const baseString = parseFloat(number.toSignificant(sigFigs))\n    numberString = fixedDecimals ? parseFloat(baseString.toFixed(fixedDecimals)) : baseString\n  }\n\n  return numberString.toLocaleString(localeArg, options)\n}\n","import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport { DEFAULT_LOCALE, SupportedLocale } from 'constants/locales'\nimport JSBI from 'jsbi'\nimport formatLocaleNumber from 'lib/utils/formatLocaleNumber'\n\nexport function formatCurrencyAmount(\n  amount: CurrencyAmount<Currency> | undefined,\n  sigFigs: number,\n  locale: SupportedLocale = DEFAULT_LOCALE,\n  fixedDecimals?: number\n): string {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return `<${formatLocaleNumber({ number: 0.00001, locale })}`\n  }\n\n  return formatLocaleNumber({ number: amount, locale, sigFigs, fixedDecimals })\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","AlertCircle","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","displayName","CURRENCY_AMOUNT_MIN","Fraction","JSBI","FormattedCurrencyAmount","currencyAmount","significantDigits","equalTo","greaterThan","toSignificant","ToggleWrapper","styled","button","theme","surface2","surface3","ToggleElement","span","isActive","surface1","neutral1","neutral3","fontSize","neutral2","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","div","style","display","alignItems","onClick","symbol","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateJSON","getPoolAddress","factoryAddress","fee","addresses","MAX_ENTRIES","slice","address","addressA","addressB","toString","found","find","computePoolAddress","unshift","getPool","sqrtPriceX96","liquidity","tick","pools","pool","token0","token1","sqrtRatioX96","tickCurrent","Pool","usePools","poolKeys","chainId","useChainId","poolTokens","useMemo","map","feeAmount","equals","Array","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","value","PoolCache","slot0s","useMultipleContractSingleData","liquidities","_key","index","tokens","PoolState","INVALID","result","slot0","loading","slot0Loading","valid","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","eq","EXISTS","error","console","usePool","usePoolMultichain","poolData","useRef","poolAddress","undefined","contractMap","contract","useContractMultichain","useEffect","current","e","PermitType","AMOUNT","ALLOWED","PERMIT_VALIDITY_BUFFER","PERMITTABLE_TOKENS","ChainId","MAINNET","USDC_MAINNET","type","name","version","DAI","UNI","GOERLI","SEPOLIA","UseERC20PermitState","NOT_APPLICABLE","NOT_SIGNED","SIGNED","EIP712_DOMAIN_TYPE","EIP712_DOMAIN_TYPE_NO_VERSION","EIP2612_TYPE","PERMIT_ALLOWED_TYPE","useERC20Permit","spender","transactionDeadline","overridePermitInfo","account","useAccount","provider","useEthersWeb3Provider","tokenAddress","currency","isToken","eip2612Contract","useEIP2612Contract","isArgentWallet","useIsArgentWallet","nonceInputs","tokenNonceState","useSingleCallResult","permitInfo","status","signatureData","setSignatureData","useState","state","gatherPermitSignature","nonceNumber","toNumber","isSignatureDataValid","owner","deadline","nonce","amount","quotient","allowed","signatureDeadline","message","holder","expiry","domain","verifyingContract","data","JSON","stringify","types","EIP712Domain","Permit","primaryType","send","then","splitSignature","signature","v","s","permitType","REMOVE_V2_LIQUIDITY_PERMIT_INFO","useV2LiquidityTokenPermit","liquidityAmount","useTransactionDeadline","ZERO","DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE","Percent","EmptyState","AutoColumn","minHeight","justifyContent","ThemedText","DeprecatedBody","LiquidityInfo","token0Amount","token1Amount","currency0","unwrappedToken","currency1","gap","RowBetween","RowFixed","CurrencyLogo","marginRight","Text","fontWeight","percentageToMigrate","V2PairMigration","pair","pairBalance","totalSupply","reserve0","reserve1","pairFactory","priceDifferenceFraction","migrator","v2SpotPrice","v3SpotPrice","WRAPPED_NATIVE_CURRENCY","useWeb3React","useTheme","v2FactoryAddress","V2_FACTORY_ADDRESSES","trace","useTrace","isNotUniswap","getDeadline","useGetTransactionDeadline","allowedSlippage","useUserSlippageToleranceWithDefault","token0Value","CurrencyAmount","fromRawAmount","token1Value","setFeeAmount","FeeAmount","MEDIUM","poolState","noLiquidity","Price","token0Price","divide","subtract","multiply","lessThan","largePriceDifference","baseToken","setBaseToken","ticks","pricesAtTicks","invertPrice","invalidRange","outOfRange","ticksAtLimit","useV3DerivedMintInfo","Bound","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","useRangeHopCallbacks","onLeftRangeInput","onRightRangeInput","useV3MintActionHandlers","priceToClosestTick","sqrtPrice","TickMath","getSqrtRatioAtTick","position","Position","fromAmounts","amount0","amount1","useFullPrecision","v3Amount0Min","v3Amount1Min","mintAmountsWithSlippage","refund0","refund1","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","useV2MigratorContract","approval","approveManually","useApproveCallback","approve","useCallback","code","addTransaction","useTransactionAdder","isMigrationPending","useIsTransactionPending","networkSupportsV2","useNetworkSupportsV2","migrate","Error","push","interface","encodeFunctionData","liquidityToMigrate","amount0Min","amount1Min","recipient","refundAsETH","estimateGas","multicall","gasEstimate","gasLimit","calculateGasMargin","response","sendAnalyticsEvent","LiquidityEventName","MIGRATE_LIQUIDITY_SUBMITTED","action","LiquiditySource","SUSHISWAP","V2","V3","label","TransactionType","MIGRATE_LIQUIDITY_V3","baseCurrencyId","currencyId","quoteCurrencyId","isFork","hash","catch","isSuccessfullyMigrated","my","textAlign","Trans","noun","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","LightCard","marginLeft","DoubleCurrencyLogo","currencies","DeprecatedMediumHeader","symA","symB","Badge","ArrowDown","FeeSelector","handleFeePoolSelect","BlueCard","flexDirection","marginBottom","opacity","marginTop","sym","invert","YellowCard","DeprecatedBlack","t","br","DeprecatedLabel","base","RangeSelector","padding","$borderRadius","AlertTriangle","deprecated_yellow3","ml","DarkGrayCard","amtA","formatCurrencyAmount","amtB","flex","ButtonConfirmed","disabled","ApprovalState","NOT_APPROVED","PENDING","Dots","APPROVED","confirmed","V2Unsupported","MigrateV2Pair","token0AddressCallState","useParams","dispatch","useAppDispatch","resetMintState","validatedAddress","isAddress","usePairContract","NEVER_RELOAD","token0Address","token1Address","useToken","liquidityToken","Token","useTokenBalance","useTotalSupply","reserve0Raw","reserve1Raw","BodyWrapper","AutoRow","BackArrowLink","to","MigrateHeader","SettingsTab","autoSlippage","hideRoutingSettings","DeprecatedLargeHeader","Navigate","replace","formatLocaleNumber","number","locale","sigFigs","fixedDecimals","options","localeArg","numberString","SUPPORTED_LOCALES","includes","DEFAULT_LOCALE","minimumFractionDigits","maximumFractionDigits","maximumSignificantDigits","parseFloat","toFixed","baseString","toLocaleString","decimalScale"],"sourceRoot":""}